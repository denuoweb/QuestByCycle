function Z(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(s=>{s.addEventListener("updatefound",()=>{const a=s.installing;a.addEventListener("statechange",()=>{a.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&s.sync.register("sync-notifications").catch(a=>console.error("Sync registration failed:",a)),s.periodicSync&&s.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(a=>console.error("Periodic sync registration failed:",a)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in s&&s.sync.register("sync-requests").catch(a=>{console.error("Background sync registration failed:",a)})}).catch(s=>console.error("Service Worker registration failed:",s)),navigator.serviceWorker.addEventListener("message",s=>{s.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),o=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let n=null;const i=document.getElementById("leaderboardNavbarLink");if(o?t.hidden=!1:t.hidden=!0,window.addEventListener("beforeinstallprompt",s=>{s.preventDefault(),n=s,e.hidden=!1,e.addEventListener("click",()=>{n&&(n.prompt(),n.userChoice.then(()=>{n=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,o||(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t.hidden=!0}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(s=>{s.length&&(e.hidden=!0)}),window.handleGameSelection=function(s){const a=s.value;a==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=a},i&&i.addEventListener("click",s=>{s.preventDefault();const a=i.getAttribute("data-game-id")||0;typeof window.showLeaderboardModal=="function"?window.showLeaderboardModal(a):console.error("showLeaderboardModal not defined")}),"windowControlsOverlay"in navigator){let s=function(){const a=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=a.height+"px"};var r=s;navigator.windowControlsOverlay.addEventListener("geometrychange",s),s()}document.querySelectorAll(".modal").forEach(s=>{s.parentNode!==document.body&&document.body.appendChild(s)})}function ee(){const e=document.querySelector('meta[name="csrf-token"]');return e?e.getAttribute("content"):""}async function te(e,t={}){const o={credentials:"same-origin",...t},n=await fetch(e,o),i=await n.json().catch(()=>({}));return{status:n.status,json:i}}function ne(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}window.getCSRFToken=ee;window.fetchJson=te;window.escapeHTML=ne;window.QUILL_OPTIONS={theme:"snow",modules:{toolbar:[[{font:[]},{size:[]}],["bold","italic","underline","strike"],[{color:[]},{background:[]}],[{script:"sub"},{script:"super"}],[{header:1},{header:2},{header:3},{header:4},{header:5},{header:6},"blockquote","code-block"],[{list:"ordered"},{list:"bullet"},{indent:"-1"},{indent:"+1"}],[{direction:"rtl"},{align:[]}],["link","image","video","formula"],["clean"]]}};window.initQuill=function(e,t,o={}){const n=typeof e=="string"?document.querySelector(e):e;if(!n)return console.error("initQuill: element not found for",e),null;const i=Object.assign({},window.QUILL_OPTIONS,o),r=new Quill(n,i);if(t){const s=typeof t=="string"?document.querySelector(t):t;s&&(s.value&&(r.root.innerHTML=s.value),r.on("text-change",()=>{s.value=r.root.innerHTML}))}return r};var oe=initQuill("#description-editor"),se=initQuill("#tips-editor");document.getElementById("quest-form").onsubmit=function(e){var t=oe.root.innerHTML.trim(),o=se.root.innerHTML.trim();if(!t||t==="<p><br></p>")return alert("Description is required."),e.preventDefault(),!1;document.getElementById("description").value=t,document.getElementById("tips").value=o};var N=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=N;let _=0,Q=null,q=!1,A=!1;function ie(e){_=0,Q=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),openModal("allSubmissionsModal"),O()}function O(){const e=_*10;fetch(`/quests/quest/all_submissions?game_id=${Q}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);q=t.is_admin,A=t.has_more,ae(t.submissions,q,_>0),le(A),_+=1}).catch(t=>{console.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function ae(e,t,o=!1){const n=document.getElementById("allSubmissionsContainer");if(!n){console.error("allSubmissionsContainer element not found.");return}o||(n.innerHTML=""),e.forEach(i=>{const r=document.createElement("div");r.className="submission-card";const s=document.createElement("img");s.src=i.image_url||N,s.alt="Quest Submission",s.className="submission-image";const a=document.createElement("div");a.className="submission-info";const l=document.createElement("p");l.textContent=`User: ${i.user_display_name||i.user_username}`,l.className="submission-user-details";const d=document.createElement("p"),c=new Date(i.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});d.textContent=`Submitted on: ${c}`,d.className="submission-timestamp";const u=document.createElement("p");u.textContent=`Comment: ${i.comment}`,u.className="submission-comment";const g=document.createElement("p");g.textContent=`Twitter: ${i.twitter_url||"N/A"}`,g.className="submission-comment";const m=document.createElement("p");m.textContent=`Facebook: ${i.fb_url||"N/A"}`,m.className="submission-comment";const p=document.createElement("p");if(p.textContent=`Instagram: ${i.instagram_url||"N/A"}`,p.className="submission-comment",a.appendChild(l),a.appendChild(d),a.appendChild(u),a.appendChild(g),a.appendChild(m),a.appendChild(p),t){const f=document.createElement("button");f.textContent="Delete",f.className="button delete-button",f.addEventListener("click",function(v){v.stopPropagation(),re(i.id)}),r.appendChild(f)}r.appendChild(s),r.appendChild(a),r.addEventListener("click",function(){showSubmissionDetail({url:i.image_url||i.video_url,video_url:i.video_url,comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name||i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,verification_type:"image"}),openModal("submissionDetailModal")}),n.appendChild(r)})}function re(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{console.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function le(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{O()})});window.showAllSubmissionsModal=ie;document.addEventListener("DOMContentLoaded",function(){de()});function de(){fetch("/badges").then(e=>e.json()).then(e=>{const t=document.getElementById("badgesBody");t.innerHTML="",e.badges.forEach(o=>{const n=document.createElement("tr");n.setAttribute("data-badge-id",o.id);const i=o.image?`<img src="${o.image}" height="50" alt="Badge Image">`:"No Image";n.innerHTML=`
                    <td class="badge-image-manage">${i}</td>
                    <td class="badge-name">${o.name}</td>
                    <td class="badge-description">${o.description}</td>
                    <td class="badge-category">${o.category||"None"}</td>
                    <td>
                        <button class="edit-badge" onclick="editBadge(${o.id})">Edit</button>
                        <button onclick="deleteBadge(${o.id})">Delete</button>
                    </td>
                `,t.appendChild(n)})}).catch(e=>console.error("Failed to load badges:",e))}window.allBadges=window.allBadges||[];var C=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=C;function ce(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return C}async function me(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,n=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,i=await fetch(n,{credentials:"same-origin"});if(!i.ok)throw new Error("Error fetching badges");const r=await i.json();return window.allBadges=r.badges,window.allBadges}async function U(){if(!window.allBadges||window.allBadges.length===0)try{await me()}catch(e){console.error("Error loading badges:",e),window.allBadges=[]}}function ue(e){return e?`<ul>${e.split(",").map(o=>`<li>${escapeHTML(o.trim())}</li>`).join("")}</ul>`:""}function ge(e){return window.allBadges.find(t=>t.id==e)}function pe(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||C}}async function fe(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const o=await t.json();return o.userCompletion?o.userCompletion.completions:0}function be(e,t,o,n,i,r,s){const a=document.getElementById("badgeModalTitle"),l=document.getElementById("badgeModalImage"),d=document.getElementById("badgeModalText");a.textContent=e.name,l.src=ce(e.image)||C;let c="";if(r){const g=`<a href="#" onclick="openQuestDetailModal('${r}')">${escapeHTML(s)}</a>`;c=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${o}</p><p>${i?"You have earned this badge.":"Complete "+g+" to earn this badge."}</p>`}else c=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${o}</p>${n}<p>${i?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const u=e.description||"No description available.";i?(l.style.filter="none",l.oncontextmenu=null,d.innerHTML=`<p><strong>Awarded!</strong></p>${c}<p>${escapeHTML(u)}</p>`):(l.style.filter="grayscale(100%) opacity(0.5)",l.oncontextmenu=g=>(g.preventDefault(),!1),d.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${c}<p>${escapeHTML(u)}</p>`)}async function he(e){const t=e.getAttribute("data-badge-id"),o=e.getAttribute("data-task-name"),n=e.getAttribute("data-task-id"),i=e.getAttribute("data-badge-awarded-count"),r=e.getAttribute("data-user-completions"),s=parseInt(i,10),a=parseInt(r,10)||0,l=ue(o),d=n?n.split(",").map(p=>p.trim()).filter(Boolean):[],c=d.length===1?d[0]:null;await U();const u=ge(t)||pe(e);let g=a;if(c)try{g=await fe(c)}catch(p){console.error("Error fetching user completions:",p)}const m=g>=s;be(u,s,g,l,m,c,o),openModal("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{U()});window.openBadgeModal=he;document.addEventListener("DOMContentLoaded",function(){["description","description2","details","awards","beyond"].forEach(t=>{initQuill(`#${t}`,`#${t}-textarea`)})});let M;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),o=document.getElementById("deleteGameCountdown"),n=document.getElementById("deleteGameTimer"),i=document.getElementById("deleteGameUndo"),r=document.getElementById("deleteGameForm");e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let s=5;o.hidden=!1,n.textContent=s.toString(),M=setInterval(()=>{s-=1,n.textContent=s.toString(),s<=0&&(clearInterval(M),r.submit())},1e3)}),i.addEventListener("click",()=>{clearInterval(M),o.hidden=!0,n.textContent="5",e.value="",t.disabled=!0})});document.addEventListener("DOMContentLoaded",function(){initQuill("#description","#description-textarea")});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[o,n]=t[0],i=document.getElementById("flash-overlay");i.querySelector(".flash-content").textContent=n,i.querySelector(".flash-modal").classList.add(`flash-${o}`),requestAnimationFrame(()=>{i.classList.add("visible")});function r(){i.classList.remove("visible"),e.removeAttribute("data-messages")}i.querySelector(".flash-close").addEventListener("click",r),i.querySelector(".flash-ok-btn").addEventListener("click",r)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm"),t=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),n=document.getElementById("forgotButton"),i=document.getElementById("forgotEmail"),r=document.getElementById("forgotEmailDisplay"),s=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{s.style.display==="block"&&(r.textContent=i.value)}).observe(s,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",l=>{l.preventDefault(),t.style.display="none",o.style.display="none",submitFormJson(e).then(({json:d})=>{d.success?(o.textContent=d.message,o.style.display="block",n.disabled=!0):(t.textContent=d.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function ye(e){const t="/games/game-info/"+e+"?modal=1";fetchAndShowModal(t,"gameInfoModal")}window.showGameInfoModal=ye;$(document).ready(function(){$("#generateAIQuestModal").modal({show:!1})});document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("button[data-game-id]").forEach(o=>{o.addEventListener("click",function(){t(this)})});function t(o){const n=document.getElementById("questCreationForm"),i=o.getAttribute("data-game-id");n?n.addEventListener("submit",function(r){r.preventDefault();const s=document.getElementById("questDescription").value,a=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":a},body:JSON.stringify({description:s,game_id:i})}).then(l=>l.ok?l.json():l.json().then(d=>Promise.reject({status:l.status,statusText:l.statusText,errorMessage:d.error}))).then(l=>{if(l.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=l.generated_quest_html,$("#generateAIQuestModal").modal("show");const d=document.getElementById("generateAIQuestModalForm");d&&d.setAttribute("data-game-id",i),d&&d.addEventListener("submit",function(p){p.preventDefault();const f=new FormData(d),v=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":v},body:f}).then(h=>h.json()).then(h=>{window.location.href="/",console.log(h)}).catch(h=>{console.error("Error:",h)})});const c=document.getElementById("generateAIImage"),u=document.getElementById("badge_description"),g=document.getElementById("aiBadgeImage"),m=document.getElementById("aiBadgeFilename");if(!c||!u||!g||!m){console.error("One or more elements not found in the DOM");return}c.addEventListener("click",function(){console.log("Generate AI Image button clicked");const p=u.value;if(console.log("Badge Description:",p),!p){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:p})}).then(f=>f.json()).then(f=>{if(console.log("Response data:",f),f.error)alert("Error generating badge image: "+f.error);else{const v=`${f.filename}`,h=`static/images/badge_images/${f.filename}`;g.src=h,g.style.display="block",m.value=v}}).catch(f=>{console.error("Fetch error:",f),alert("Error: "+f)})})}}).catch(l=>{alert("Error generating quest: "+(l.errorMessage||l.statusText))})}):console.error("Form '#questCreationForm' not found.")}});const ve=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){console.error("Error refreshing CSRF token:",e)}};setInterval(ve,9e5);const we=async e=>{try{const o=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),n=o.total_game_points,i=o.game_goal,r=i-n,s=Math.min(n/i*100,100);document.getElementById("meterBar").style.height=`${s}%`,document.documentElement.style.setProperty("--meter-fill-height",`${s}%`),document.querySelector(".meter-label").innerText=`Remaining Reduction: ${r} / ${i}`}catch(t){console.error("Failed to update meter:",t)}};function Ee(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const o=e.getAttribute("data-game-id");fetch(`/games/get_game/${o}`,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw console.error(`Failed fetching game name; URL returned status ${n.status} (${n.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${n.status}: ${n.statusText}`);return n.json()}).then(n=>{t.textContent=n.name||"Game Not Found"}).catch(n=>{console.error("Error retrieving game name:",n),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",()=>{const a=e.getAttribute("data-game-id");showLeaderboardModal(a),we(a)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&showMySubmissionsModal(currentUserId)});const o=document.getElementById("contactForm");o&&o.addEventListener("submit",async a=>{a.preventDefault();const l=new FormData(o);showLoadingModal();try{const d=await fetch(o.action,{method:"POST",body:l,headers:{"X-Requested-With":"XMLHttpRequest"}}),c=await d.json();d.ok&&c.success?(alert("Your message has been sent successfully."),closeModal("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{hideLoadingModal()}}),document.getElementById("quill-editor")&&(initQuill("#quill-editor","#message-input",{placeholder:"Write a message...",modules:{toolbar:[[{header:[1,2,!1]}],["bold","italic","underline"],["link"],[{list:"ordered"},{list:"bullet"}],["clean"]]}}),document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(a=>{a.innerHTML=a.innerHTML.replace(/<\/?p[^>]*>/g,"")});const i=document.getElementById("questSearchInput"),r=document.getElementById("questCategoryDropdown");i&&i.addEventListener("input",F),r&&r.addEventListener("change",F);const s=document.querySelector("#whats-happening-step");if(s){const a=s.querySelectorAll(".wh-tab-button"),l=s.querySelectorAll(".wh-tab-content");a.forEach(d=>{d.addEventListener("click",()=>{const c=d.getAttribute("data-wh-tab");a.forEach(u=>u.classList.remove("active")),l.forEach(u=>u.classList.remove("active")),d.classList.add("active"),s.querySelector(`#wh-${c}-tab`).classList.add("active")})})}Ee()});function F(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(n=>{const i=n.querySelector(".quest-title").textContent.toLowerCase(),r=n.dataset.category||"Not Set",s=i.includes(e),a=t==="all"||r===t;n.style.display=s&&a?"":"none"})}document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("#customGameList .list-group-item").forEach(function(i){i.addEventListener("click",function(){const r=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=r,document.getElementById("joinCustomGameForm").submit())})});const e=document.getElementById("joinCustomGameModal"),t=e.dataset.hasJoined==="1",o=e.dataset.joinDemoUrl;let n=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{n=!0}),e.addEventListener("hidden.bs.modal",function(){!n&&!t&&(window.location.href=o)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("passwordError"),o=document.getElementById("forgotContainer"),n=document.getElementById("loginModal").dataset.checkUrl;e.addEventListener("submit",l=>{l.preventDefault(),t.style.display="none",o.innerHTML="",submitFormJson(e).then(({json:d})=>{if(d.success)window.location.href=d.redirect;else if(t.textContent=d.error,t.style.display="block",d.show_forgot){const c=document.createElement("a");c.href="javascript:void(0)",c.textContent="Forgot password?",c.className="d-block mt-1",c.onclick=openForgotPasswordModal,o.appendChild(c)}}).catch(()=>e.submit())});const i=document.getElementById("loginEmail"),r=document.getElementById("loginButton"),s=document.getElementById("emailError");function a(){r.disabled=!0,s.style.display="none",s.textContent=""}a(),i.addEventListener("blur",()=>{const l=i.value.trim();if(!l)return a();fetch(`${n}?email=${encodeURIComponent(l)}`).then(d=>d.json()).then(d=>{d.exists?r.disabled=!1:(r.disabled=!0,s.textContent="This email is not registered. Please register first.",s.style.display="block")}).catch(()=>r.disabled=!1)}),i.addEventListener("input",a)});const Ie=document.getElementById("game_Data").dataset.gameId;let Le=[];document.addEventListener("DOMContentLoaded",async function(){await Be(),_e(Ie)});async function Be(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");Le=(await e.json()).badges||[]}catch(e){console.error("Error fetching badges:",e)}}function _e(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const o=document.getElementById("questsBody");o.innerHTML="",t.quests.forEach(n=>{const i=document.createElement("div");i.className="card",i.id=`quest-${n.id}`;const r=n.verification_type.toLowerCase(),s=n.badge_name||"None",a=n.frequency||"Not Set",l=n.category||"Not Set",d=n.badge_awarded||"Not Set";i.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${n.title}</h5>
                        <div class="card-text editable quill-editor-container" data-name="description">${n.description}</div>
                        <div class="card-text editable quill-editor-container" data-name="tips">${n.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${n.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${n.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${n.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${n.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${n.verification_type}">${r}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${s}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${d}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${n.frequency}">${a}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${l}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" onclick="editQuest(${n.id})">Edit</button>
                            <button class="btn btn-danger" onclick="deleteQuest(${n.id})">Delete</button>
                            <button class="btn btn-info" onclick="window.location.href = '/quests/generate_qr/${n.id}'">Generate QR Code</button>
                        </div>
                    </div>
                `,o.appendChild(i)})}).catch(t=>console.error("Failed to load quests:",t))}document.addEventListener("DOMContentLoaded",function(){const e=initQuill("#description","#description-textarea"),t=document.getElementById("description-textarea");e&&t&&(e.root.innerHTML=t.value)});let B=3e3;function I(e){var n;const t=document.getElementById(e);if(!t){console.error(`Modal ${e} not found`);return}document.body.appendChild(t),(n=document.querySelector(".container"))==null||n.classList.add("modal-open"),t.classList.add("active"),t.style.display="flex",B+=10,t.style.zIndex=B;const o=t.querySelector(".modal-backdrop");o&&(o.style.display="block",o.style.zIndex=B-1),document.body.classList.add("body-no-scroll")}function T(e){var n;const t=document.getElementById(e);if(!t)return;const o=t.querySelector(".modal-backdrop");t.style.display="none",o&&(o.style.display="none"),B=Math.max(1050,B-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(n=document.querySelector(".container"))==null||n.classList.remove("modal-open")),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function Ce(e,t){const o=document.getElementById(e);if(o){if(t.gameId!==void 0){const n=o.querySelector('input[name="game_id"]');n&&(n.value=t.gameId)}if(t.questId!==void 0){const n=o.querySelector('input[name="quest_id"]');n&&(n.value=t.questId)}if(t.next!==void 0){const n=o.querySelector('input[name="next"]');n&&(n.value=t.next)}}}function ke(e){Ce("loginModal",e),I("loginModal")}function $e(e={}){const t=document.getElementById("registerForm"),o=t.getAttribute("action").split("?")[0],n=[];e.gameId&&n.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&n.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&n.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&n.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",o+(n.length?`?${n.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),T("loginModal"),I("registerModal")}function D({gameId:e,questId:t=""}){const o=document.getElementById("loginForm"),n=document.getElementById("loginGameId"),i=document.getElementById("loginQuestId"),r=document.getElementById("loginNext"),s=document.getElementById("loginShowJoinCustom"),a=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;n.value=e,i.value=t,s.value="0",r.value=a;const l=o.getAttribute("action").split("?")[0],d=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:a});o.setAttribute("action",`${l}?${d.toString()}`),I("loginModal")}function Me(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",o=document.getElementById("loginNext").value||"",n=document.getElementById("loginShowJoinCustom").value||"",i=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=o,document.getElementById("registerShowJoinCustom").value=n,document.getElementById("registerCustomGameCode").value=i;const r=document.getElementById("registerForm"),s=r.getAttribute("action").split("?")[0],a=new URLSearchParams;e&&a.set("game_id",e),t&&a.set("quest_id",t),o&&a.set("next",o),n&&a.set("show_join_custom",n),i&&a.set("custom_game_code",i),r.setAttribute("action",`${s}?${a.toString()}`),T("loginModal"),I("registerModal")}function Se(){var r;const e=((r=document.getElementById("loginEmail"))==null?void 0:r.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const o=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),i=document.getElementById("forgotButton");o&&(o.style.display="none"),n&&(n.style.display="none"),i&&(i.disabled=!1),I("forgotPasswordModal")}function j(e){const t=document.getElementById("resetForm"),o=document.getElementById("resetToken"),n=t.dataset.baseAction;t.setAttribute("action",n+encodeURIComponent(e)),o.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,I("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(j(t),history.replaceState(null,"",window.location.pathname)):console.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",o=e.has("game_id");t&&!o&&I("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let o=e.get("game_id")||"";if(!o){const n=e.get("next");if(n)try{const r=new URL(n,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(r)&&(o=r)}catch(i){console.warn("Failed to parse next URL for gameId:",i)}}D({gameId:o,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let o=e.get("game_id")||"";if(!o)try{const i=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(o=i)}catch(n){console.warn("Could not parse next URL for gameId:",n)}o&&D({gameId:o,questId:""})});async function H(e,t){try{const o=await fetch(e,{credentials:"same-origin"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const n=await o.text(),i=document.getElementById(t);i&&i.parentNode.removeChild(i);const r=document.createElement("div");r.innerHTML=n.trim();const s=r.firstElementChild;(!s||s.id!==t)&&console.warn(`Expected first element to be #${t}`,s),document.body.appendChild(s),I(t)}catch(o){console.error(`Error loading ${t} from ${e}:`,o),alert("Failed to load data. Please try again later.")}}async function xe(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),o=await t.json();return{status:t.status,json:o}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-modal-url"),n=t.getAttribute("data-modal-id");if(!o||!n){console.error("data-modal-url or data-modal-id missing",t);return}H(o,n)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=I;window.closeModal=T;window.openLoginModalWithOptions=ke;window.openRegisterModalWithOptions=$e;window.openLoginModalWithGame=D;window.registerFromLogin=Me;window.openForgotPasswordModal=Se;window.openResetPasswordModal=j;window.fetchAndShowModal=H;window.submitFormJson=xe;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),o=e.querySelector("#notifLoading"),n=e.querySelector("li.dropdown-footer"),i=n.querySelector("#loadMoreBtn"),r=e.dataset.url;let s=0,a=1;const l=parseInt(e.dataset.perPage,10)||10,d={follow:({from_user_name:m,from_user_id:p})=>({text:`Now following ${m}`,onclick:`showUserProfileModal(${p}); return false;`}),followed_by:({follower_name:m,follower_id:p})=>({text:`${m} is now following you`,onclick:`showUserProfileModal(${p}); return false;`}),submission:({actor_name:m,quest_name:p,submission_id:f})=>({text:`${m} submitted a new “${p}” quest`,onclick:`fetch('/quests/submissions/${f}').then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),profile_message:({from_user_name:m,content:p,profile_user_id:f})=>({text:`${m} says “${p}”`,onclick:`showUserProfileModal(${f}); return false;`}),profile_reply:({from_user_name:m,content:p,profile_user_id:f})=>({text:`${m} replied “${p}”`,onclick:`showUserProfileModal(${f}); return false;`}),submission_like:({liker_name:m,submission_id:p})=>({text:`${m} liked your submission`,onclick:`fetch('/quests/submissions/${p}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),submission_reply:({actor_name:m,content:p,submission_id:f})=>({text:`${m} replied “${p}”`,onclick:`fetch('/quests/submissions/${f}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`})};function c(m){const p=d[m.type];let f,v;if(p&&m.payload)try{({text:f,onclick:v}=p(m.payload))}catch(b){console.error(`Error in handler for ${m.type}:`,b)}return(!f||!v)&&(f=m.payload.summary||JSON.stringify(m.payload),v="location.href='/notifications/';"),`
      <a href="#" class="dropdown-item ${m.is_read?"":"fw-bold"}" onclick="${v}">
        ${f}
        <small class="text-muted d-block text-center">
          ${new Date(m.when).toLocaleString()}
        </small>
      </a>
    `}function u(m){m&&m.parentNode===e&&e.removeChild(m)}async function g(m){m===1&&(Array.from(e.children).forEach(h=>{h!==o&&h!==n&&e.removeChild(h)}),s=0),u(o),u(n),e.appendChild(o),e.appendChild(n),o.style.display="",i.disabled=!0;let p;try{p=await fetch(`${r}?page=${m}&per_page=${l}`,{credentials:"include"})}catch(h){o.textContent="Network error.",console.error(h);return}if(!p.ok){o.textContent="Error loading.",console.error("Status:",p.status,p.statusText);return}const f=await p.json();s=f.page,a=f.total_pages,u(o),u(n);const v=t.querySelector(".badge");v&&v.remove(),f.items.forEach(h=>{e.insertAdjacentHTML("beforeend",c(h))}),e.appendChild(o),e.appendChild(n),o.style.display="none",i.disabled=s>=a}t.addEventListener("show.bs.dropdown",()=>{s===0&&g(1)}),i.addEventListener("click",m=>{m.preventDefault(),m.stopPropagation(),s<a&&g(s+1)})});document.addEventListener("DOMContentLoaded",()=>{!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key"),{public_key:o}=await t.json();if(!o||await e.pushManager.getSubscription())return;const i=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:Te(o)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:i})})}catch(t){console.error("Push setup failed",t)}})});function Te(e){const t="=".repeat((4-e.length%4)%4),o=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=atob(o),i=new Uint8Array(n.length);for(let r=0;r<n.length;++r)i[r]=n.charCodeAt(r);return i}function G(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}var De=Number(G("current-user-id")||0),V=getCSRFToken(),L=window.PLACEHOLDER_IMAGE||G("placeholder-image");window.PLACEHOLDER_IMAGE=L;function Pe(e){resetModalContent(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:r}=t;if(!J(o,n.completions,i,e,r)){console.error("populateQuestDetails – required element missing");return}X(o,n.completions,r,i),openModal("questDetailModal"),P(),Y(e)}).catch(t=>{console.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function W(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:r}=t;if(!J(o,n.completions,i,e,r)){console.error("populateQuestDetails – required element missing");return}X(o,n.completions,r,i),P(),Y(e)}).catch(t=>{console.error("Failed to refresh quest detail modal:",t)})}function P(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((o,n)=>{o.forEach(i=>{if(i.isIntersecting){const r=i.target;r.src=r.getAttribute("data-src"),r.classList.remove("lazyload"),n.unobserve(r)}})});e.forEach(o=>{t.observe(o)})}function J(e,t,o,n,i){const r=t>=e.completion_limit?" - complete":"",s={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let u in s)if(!s[u])return console.error(`Error: Missing element ${u}`),!1;s.modalQuestTitle.innerText=`${e.title}${r}`,s.modalQuestDescription.textContent=e.description,s.modalQuestTips.textContent=e.tips||"No tips available",s.modalQuestPoints.innerText=`${e.points}`,s.modalQuestCategory.innerText=e.category||"No category set";const a=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;s.modalQuestCompletionLimit.innerText=`${a} ${e.frequency}`;const l=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?s.modalQuestBadgeAwarded.innerText=`After ${l}`:s.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":s.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":s.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":s.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":s.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:s.modalQuestVerificationType.innerText="Not specified";break}const d=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:L;s.modalQuestBadgeImage.setAttribute("data-src",d),s.modalQuestBadgeImage.src=L,s.modalQuestBadgeImage.classList.add("lazyload"),s.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",s.modalQuestCompletions.innerText=`Total Completions: ${t}`;const c=i&&new Date(i);return!o&&c&&c>new Date?(s.modalCountdown.innerText=`Next eligible time: ${c.toLocaleString()}`,s.modalCountdown.style.color="red"):(s.modalCountdown.innerText="You are currently eligible to verify!",s.modalCountdown.style.color="green"),Fe(n,o,e.verification_type),!0}function X(e,t,o,n){const i=document.querySelector(".user-quest-data");[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(s=>{let a=document.getElementById(s.id);a||(a=document.createElement("p"),a.id=s.id,i.appendChild(a)),a.innerText=s.value}),qe(document.getElementById("modalCountdown"),o,n)}function qe(e,t,o){if(!o&&t){const n=new Date(t),i=new Date;if(n>i){const r=n-i;e.innerText=`Next eligible time: ${Ae(r)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function Ae(e){const t=Math.floor(e/1e3%60),o=Math.floor(e/(1e3*60)%60),n=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${n}h ${o}m ${t}s`}function Fe(e,t,o,n){const i=document.querySelector(".user-quest-data");if(i.innerHTML="",t){const r=document.createElement("div");r.id=`verifyQuestForm-${e}`,r.className="verify-quest-form",r.style.display="block";const s=Re(o.trim().toLowerCase(),e);r.innerHTML=s,i.appendChild(r),Ne(e)}}function Re(e,t){let o=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${V}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":o+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":o+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":o+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":o+='<p class="epic-message">Quest is currently paused.</p>';break;default:o+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return o+="</form>",o}function Ne(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){console.error("Form container not found for quest ID:",e);return}const o=t.querySelector("form");if(!o){console.error("Form element missing for quest ID:",e);return}o.addEventListener("submit",function(n){Oe(n,e)})}function S(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function Qe(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function z(e){S(document.getElementById("twitterLink"),e.twitter_url),S(document.getElementById("facebookLink"),e.fb_url),S(document.getElementById("instagramLink"),e.instagram_url)}let x=!1;async function Oe(e,t){if(e.preventDefault(),x)return;x=!0;const o=e.target.querySelector('[type="submit"]');o&&(o.disabled=!0);try{const n=e.target.querySelector('input[type="file"]'),i=n?n.files[0]:null;if(i&&i.type.startsWith("video/")&&i.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(i&&i.type.startsWith("image/")&&i.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const r=new FormData(e.target);r.append("user_id",De);const s=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:r,credentials:"same-origin",headers:{"X-CSRFToken":V}});if(!s.ok){if(s.status===403){const l=await s.json();throw l.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(l.message||`Server responded with status ${s.status}`)}throw new Error(`Server responded with status ${s.status}`)}const a=await s.json();if(!a.success)throw new Error(a.message);Qe(a.total_points),z(a),W(t),e.target.reset()}catch(n){console.error("Submission error:",n),alert(`Error during submission: ${n.message}`)}finally{x=!1,o&&(o.disabled=!1)}}async function Y(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const o=await t.json(),n=document.getElementById("twitterLink"),i=document.getElementById("facebookLink"),r=document.getElementById("instagramLink");if(o&&o.length){const a=o[0],l=document.getElementById("submissionImage"),d=document.getElementById("submissionVideo"),c=document.getElementById("submissionVideoSource"),u=document.getElementById("submissionComment"),g=document.getElementById("submitterProfileLink"),m=document.getElementById("submitterProfileImage"),p=document.getElementById("submitterProfileCaption");a.video_url?(l.hidden=!0,d.hidden=!1,c.src=a.video_url,d.load()):(d.hidden=!0,l.hidden=!1,l.src=a.image_url||L),u.textContent=a.comment||"No comment provided.",g.href=`/profile/${a.user_id}`,m.src=a.user_profile_picture||L,p.textContent=a.user_display_name||a.user_username||`User ${a.user_id}`,z(a)}else[n,i,r].forEach(a=>{a&&(a.style.display="none")});const s=o.slice().reverse().map(a=>({id:a.id,url:a.image_url||(a.video_url?null:L),video_url:a.video_url,alt:"Submission Image",comment:a.comment,user_id:a.user_id,user_display_name:a.user_display_name,user_username:a.user_username,user_profile_picture:a.user_profile_picture,twitter_url:a.twitter_url,fb_url:a.fb_url,instagram_url:a.instagram_url,quest_id:e}));Ue(s)}catch(t){console.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function R(e){if(!e)return console.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(n=>t.pathname.toLowerCase().endsWith(n))}catch{return console.error(`Invalid URL detected: ${e}`),!1}return!1}function Ue(e){const t=document.getElementById("submissionBoard");t.innerHTML="";const o=document.getElementById("questDetailModal").getAttribute("data-placeholder-url")||L,n=R(o)?o:L,i=l=>l.startsWith("/static/"),r=l=>l.replace(/^\/static\//,""),s=window.innerWidth<=480?70:100,a=s*(window.devicePixelRatio||2);e.forEach(l=>{let d;if(l.video_url)d=document.createElement("video"),d.src=l.video_url,d.preload="metadata",d.muted=!0,d.playsInline=!0,d.style.objectFit="cover";else{d=document.createElement("img");const c=R(l.url)?l.url:n,u=i(c)?`/resize_image?path=${encodeURIComponent(r(c))}&width=${a}`:c;d.setAttribute("data-src",u),d.classList.add("lazyload"),d.alt=l.alt||"Submission Image"}d.style.width=`${s}px`,d.style.height="auto",d.style.marginRight="10px",l.video_url||(d.onerror=()=>{i(n)?d.src=`/resize_image?path=${encodeURIComponent(r(n))}&width=${a}`:d.src=n}),d.onclick=()=>showSubmissionDetail(l),t.appendChild(d)}),P()}window.openQuestDetailModal=Pe;window.refreshQuestDetailModal=W;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");e.closest("form");const t=e.closest(".form-group"),o="{{ url_for('auth.check_email') }}",n=document.createElement("div");n.id="existingUserLogin",n.style.display="none",n.innerHTML=`  
    <div class="alert alert-info">This email is already registered. Enter your password to log in.</div>  
    <div class="form-group">  
      <label for="existingUserPassword">Password</label>  
      <input type="password" id="existingUserPassword" class="form-control" autocomplete="current-password">
      <div id="loginError" class="text-danger mt-1" style="display: none;"></div>  
    </div>  
    <div class="form-group">  
      <button type="button" id="loginWithExistingBtn" class="btn btn-primary">Login</button>  
    </div>  
  `,t.insertAdjacentElement("afterend",n),e.addEventListener("blur",()=>{const i=e.value.trim();i&&fetch(`${o}?email=${encodeURIComponent(i)}`).then(r=>r.json()).then(r=>{r.exists?n.style.display="block":n.style.display="none"}).catch(r=>{console.error("Error checking email:",r),n.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const i=e.value.trim(),r=document.getElementById("existingUserPassword").value,s=document.getElementById("loginError"),a=document.getElementById("gameIdField").value,l=document.getElementById("questIdField").value,d=document.getElementById("nextField").value,c=new FormData;c.append("email",i),c.append("password",r),c.append("remember_me","true"),a&&c.append("game_id",a),l&&c.append("quest_id",l),d&&c.append("next",d),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:c,credentials:"same-origin"}).then(u=>u.json().then(g=>({status:u.status,payload:g}))).then(({status:u,payload:g})=>{g.success?window.location.href=g.redirect:(s.textContent=g.error,s.style.display="block")}).catch(u=>{console.error("Login error:",u),s.textContent="An error occurred. Please try again.",s.style.display="block"})}),e.addEventListener("input",()=>{n.style.display="none",document.getElementById("loginError").style.display="none"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm"),t=document.getElementById("resetError"),o=document.getElementById("resetSuccess"),n=document.getElementById("resetButton");e.addEventListener("submit",i=>{i.preventDefault(),t.style.display="none",o.style.display="none",submitFormJson(e).then(({json:r})=>{r.success?(o.textContent=r.message,o.style.display="block",n.disabled=!0,r.redirect&&setTimeout(()=>{window.location.href=r.redirect},1200)):(t.textContent=r.error||"Unable to reset password.",t.style.display="block")}).catch(r=>{console.error("Reset-password AJAX error:",r),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),o=document.getElementById("shoutSubmitBtn");let n=null;window.Quill?n=initQuill("#shoutQuillEditor","#shoutMessageInput",{placeholder:"Write an announcement…"}):console.error("Quill library not found  shoutboard editor will not work."),window.addEventListener("openModal",i=>{i.detail===e&&n&&n.setText("")}),o.addEventListener("click",()=>{if(!n){alert("Editor not ready  please refresh.");return}const i=n.root.innerHTML.trim();if(i===""||i==="<p><br></p>"){alert("Please enter a message.");return}document.getElementById("shoutMessageInput").value=i;const r=new FormData(t);fetch(t.action,{method:"POST",body:r,credentials:"same-origin"}).then(s=>{if(!s.ok)throw new Error(`Server responded ${s.status}`);return s.text()}).then(()=>{closeModal(e),location.reload()}).catch(s=>{console.error("Failed to post shout:",s),alert("Could not post. Please try again.")})})});document.addEventListener("DOMContentLoaded",()=>{const e=s=>document.querySelector(s),t=()=>getCSRFToken(),o=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.showSubmissionDetail=function(s){const a=e("#submissionDetailModal");a.dataset.submissionId=s.id,a.dataset.questId=s.quest_id||"";const l=Number(a.dataset.currentUserId),d=Number(s.user_id)===l,c=a.dataset.isAdmin==="True"||a.dataset.isAdmin==="true",u=e("#editPhotoBtn"),g=e("#photoEditControls"),m=e("#submissionPhotoInput"),p=e("#savePhotoBtn"),f=e("#cancelPhotoBtn"),v=e("#deleteSubmissionBtn");u.hidden=!d,v.hidden=!(d||c),g.hidden=!0,u.addEventListener("click",()=>{g.hidden=!1,u.hidden=!0}),f.addEventListener("click",()=>{m.value="",g.hidden=!0,u.hidden=!1}),v.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const w=a.dataset.submissionId;fetch(`/quests/quest/delete_submission/${w}`,{method:"DELETE",headers:{"X-CSRF-Token":t()}}).then(y=>y.json()).then(y=>{if(!y.success)throw new Error(y.message||"Delete failed");closeModal("submissionDetailModal"),resetModalContent(),a.dataset.questId&&refreshQuestDetailModal(a.dataset.questId),alert("Submission deleted successfully.")}).catch(y=>alert("Error deleting submission: "+y.message))}),p.addEventListener("click",()=>{const w=a.dataset.submissionId,y=m.files[0];if(!y)return alert("Please select an image first.");if(y.type.startsWith("video/")&&y.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(y.type.startsWith("image/")&&y.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const k=new FormData;y.type.startsWith("video/")?k.append("video",y):k.append("photo",y),fetch(`/quests/submission/${w}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":t()},body:k}).then(E=>E.json()).then(E=>{if(!E.success)throw new Error(E.message||"Upload failed");E.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=E.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=E.image_url),f.click()}).catch(E=>alert(E.message))}),e("#submissionReplyEdit").hidden=d,e("#postReplyBtn").hidden=d,e("#ownerNotice").hidden=!d;const h=e("#submissionRepliesContainer");d?h.hidden=!0:h.hidden=!1;const b={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};b.profileImg.src=s.user_profile_picture||o,b.profileImgOverlay.src=b.profileImg.src,b.profileCap.textContent=s.user_display_name||s.user_username||"—",b.profileLink.onclick=w=>{w.preventDefault(),showUserProfileModal(s.user_id)},b.imgOverlay.parentElement.onclick=b.profileLink.onclick;const K=o;s.video_url?(b.img.hidden=!0,b.video.hidden=!1,b.videoSource.src=s.video_url,b.video.load()):(b.video.hidden=!0,b.img.hidden=!1,b.img.src=s.url||K),b.commentRead.textContent=s.comment||"No comment provided.",["tw","fb","ig"].forEach(w=>{const y=w==="tw"?"twitter_url":w==="fb"?"fb_url":"instagram_url";try{new URL(s[y]),b.social[w].href=s[y],b.social[w].style.display="inline-block"}catch{b.social[w].style.display="none"}}),d?(b.editBtn.hidden=!1,b.readBox.hidden=!1):b.editBtn.hidden=b.readBox.hidden=b.commentEdit.hidden=b.editBox.hidden=!0,i(),openModal("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),n(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const s=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${s}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":t()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(a=>{if(!a.ok)throw new Error(a.status);return a.json()}).then(a=>{if(!a.success)throw new Error(a.message||"Save failed");e("#submissionComment").textContent=a.comment||"No comment provided.",n(!1)}).catch(a=>alert(`Could not save comment: ${a.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>n(!1));function n(s){e("#submissionComment").hidden=s,e("#commentReadButtons").hidden=s,e("#submissionCommentEdit").hidden=!s,e("#commentEditButtons").hidden=!s}function i(){const s=e("#submissionDetailModal").dataset.submissionId;s&&(fetch(`/quests/submissions/${s}`,{credentials:"same-origin"}).then(a=>a.json()).then(a=>{e("#submissionLikeCount").textContent=a.like_count||0,e("#submissionLikeBtn").classList.toggle("active",a.liked_by_current_user)}),fetch(`/quests/submission/${s}/replies`,{credentials:"same-origin"}).then(a=>a.json()).then(a=>{const l=e("#submissionRepliesList");l.innerHTML="",a.replies.forEach(g=>{const m=document.createElement("div");m.className="reply mb-1",m.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${g.user_id}">
              <strong>${g.user_display}</strong>
            </a>: ${g.content}
          `,m.querySelector(".reply-user-link").addEventListener("click",f=>{f.preventDefault(),showUserProfileModal(g.user_id)}),l.appendChild(m)});const d=e("#submissionReplyEdit"),c=e("#postReplyBtn"),u=e("#replyLimitMessage");if(a.replies.length>=10){if(d.disabled=!0,c.disabled=!0,!u){const g=document.createElement("div");g.id="replyLimitMessage",g.className="text-muted mt-2",g.textContent="Maximum replies reached, sorry.",d.parentNode.insertBefore(g,d)}}else d.disabled=!1,c.disabled=!1,u&&u.remove()}))}e("#submissionLikeBtn").addEventListener("click",()=>{const s=e("#submissionLikeBtn"),a=e("#submissionDetailModal").dataset.submissionId,l=s.classList.contains("active");fetch(`/quests/submission/${a}/like`,{method:l?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":t()}}).then(d=>{if(!d.ok)throw new Error(d.status);return d.json()}).then(d=>{if(!d.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=d.like_count,s.classList.toggle("active",d.liked)}).catch(d=>alert(d.message))}),e("#postReplyBtn").addEventListener("click",()=>{const s=e("#submissionDetailModal").dataset.submissionId,a=e("#submissionReplyEdit");e("#postReplyBtn");const l=a.value.trim();!s||!l||fetch(`/quests/submission/${s}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":t()},body:JSON.stringify({content:l})}).then(d=>d.json().then(c=>({ok:d.ok,status:d.status,body:c}))).then(({ok:d,status:c,body:u})=>{if(!u.success){if(u.message==="Reply limit of 10 reached"){r();return}if(c===409&&u.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(u.message||"Error")}const g=e("#submissionRepliesList"),m=document.createElement("div");m.className="reply mb-1",m.innerHTML=`<strong>${u.reply.user_display}</strong>: ${u.reply.content}`,g.insertBefore(m,g.firstChild),a.value="",g.children.length>=10&&r()}).catch(d=>alert(d.message))});function r(){const s=e("#submissionReplyEdit"),a=e("#postReplyBtn");if(s.disabled=!0,a.disabled=!0,!e("#replyLimitMessage")){const l=document.createElement("div");l.id="replyLimitMessage",l.className="text-muted mt-2",l.textContent="Maximum replies reached, sorry.",s.parentNode.insertBefore(l,s)}}});document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("submitPhotoForm");let t=!1;e.addEventListener("submit",function(n){if(n.preventDefault(),t)return;t=!0;const i=e.querySelector('input[name="photo"]'),r=i?i.files[0]:null;if(r&&r.type.startsWith("video/")&&r.size>10*1024*1024){o("Video must be 10 MB or smaller.","error"),t=!1;return}if(r&&r.type.startsWith("image/")&&r.size>8*1024*1024){o("Image must be 8 MB or smaller.","error"),t=!1;return}showLoadingModal();const s=new FormData(e),a=getCSRFToken();s.append("csrf_token",a),fetch(e.action,{method:"POST",body:s,credentials:"same-origin",headers:{"X-CSRF-Token":a}}).then(l=>l.ok?l.json():l.json().then(d=>{throw new Error(d.message)})).then(l=>{l.success?(o(l.message,"success"),window.location.href=l.redirect_url):o(l.message,"error")}).catch(l=>{console.error("Submission error:",l),o("Error during submission: "+l.message,"error")}).finally(()=>{t=!1,hideLoadingModal()})});function o(n,i){const r=document.getElementById("flash-messages");r?r.innerHTML=`
                <div class="flash-message ${i}">
                    ${n}
                </div>
            `:console.warn("Flash messages container not found.")}});document.getElementById("gameFilter").addEventListener("change",function(){var e=this.value;e?window.location.href="/admin/user_management/game/"+e:window.location.href="/admin/user_management"});function je(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){console.error("Riding preferences choices missing.");return}const o=document.getElementById("userProfileDetails");if(!o){console.error("Profile details containers not found");return}const n=t.current_user_id===t.user.id;o.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${n?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((l,d)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${d}" name="riding_preferences"
                                      value="${l[0]}"
                                      ${t.user.riding_preferences.includes(l[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${d}">${l[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${n?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(l=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${l.image}" alt="${l.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${l.name}</h3>
                          <p>${l.description}</p>
                          <p><strong>Category:</strong> ${l.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(l=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${l.title}</h3>
                        <p class="text-muted">${l.description}</p>
                        <p><strong>Start Date:</strong> ${l.start_date}</p>
                        <p><strong>End Date:</strong> ${l.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(l=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${l.image_url?`<img src="${l.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${l.quest.title}</p>
                        <p class="text-muted">${l.comment}</p>
                        <p><strong>Submitted At:</strong> ${l.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${l.twitter_url?`<a href="${l.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${l.fb_url?`<a href="${l.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${l.instagram_url?`<a href="${l.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${n?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${l.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const i=document.getElementById("userProfileModalLabel");i.textContent=`${t.user.display_name||t.user.username}'s Profile`;const r=document.getElementById("followBtn");if(r&&(r.style.display=""),!n&&r){let d=function(){l?(r.textContent="Following",r.classList.remove("btn-primary"),r.classList.add("btn-outline-primary")):(r.textContent="Follow",r.classList.remove("btn-outline-primary"),r.classList.add("btn-primary"))};var a=d;r&&(r.style.display="",r.classList.remove("d-none"));let l=t.current_user_following;d(),r.onclick=async()=>{const c=l?"unfollow":"follow",u=await fetch(`/profile/${t.user.username}/${c}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()},credentials:"same-origin"});if(!u.ok){console.error("Follow toggle failed:",await u.text());return}l=!l,d()}}else{const l=document.getElementById("followBtn");l&&(l.style.display="none")}openModal("userProfileModal");const s=document.getElementById("profileTabSelect");s&&(s.addEventListener("change",l=>{const d=l.target.value,c=document.querySelector(`#profileTabs a[href="#${d}"]`);c&&new bootstrap.Tab(c).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(l=>{l.addEventListener("shown.bs.tab",d=>{s.value=d.target.getAttribute("href").slice(1)})}))}).catch(t=>{console.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});window.showUserProfileModal=je;document.addEventListener("DOMContentLoaded",()=>{Z()});
