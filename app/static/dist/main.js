const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunk-DKyLfmuS.js","chunk-Bu8AA3up.js"])))=>i.map(i=>d[i]);
import{l as m,g as C,e as q,s as ye,h as Ee}from"./chunk-Bu8AA3up.js";const ve="modulepreload",we=function(e){return"/"+e},X={},U=function(t,o,n){let i=Promise.resolve();if(o&&o.length>0){let r=function(c){return Promise.all(c.map(l=>Promise.resolve(l).then(p=>({status:"fulfilled",value:p}),p=>({status:"rejected",reason:p}))))};document.getElementsByTagName("link");const a=document.querySelector("meta[property=csp-nonce]"),d=(a==null?void 0:a.nonce)||(a==null?void 0:a.getAttribute("nonce"));i=r(o.map(c=>{if(c=we(c),c in X)return;X[c]=!0;const l=c.endsWith(".css"),p=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${p}`))return;const g=document.createElement("link");if(g.rel=l?"stylesheet":ve,l||(g.as="script"),g.crossOrigin="",g.href=c,d&&g.setAttribute("nonce",d),document.head.appendChild(g),l)return new Promise((u,f)=>{g.addEventListener("load",u),g.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(r){const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=r,window.dispatchEvent(a),!a.defaultPrevented)throw r}return i.then(r=>{for(const a of r||[])a.status==="rejected"&&s(a.reason);return t().catch(s)})};function Ce(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(s=>{s.addEventListener("updatefound",()=>{const r=s.installing;r.addEventListener("statechange",()=>{r.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&s.sync.register("sync-notifications").catch(r=>m.error("Sync registration failed:",r)),s.periodicSync&&s.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(r=>m.error("Periodic sync registration failed:",r)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in s&&s.sync.register("sync-requests").catch(r=>{m.error("Background sync registration failed:",r)})}).catch(s=>m.error("Service Worker registration failed:",s)),navigator.serviceWorker.addEventListener("message",s=>{s.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),o=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let n=null;const i=document.getElementById("leaderboardNavbarLink");if(t&&(o?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",s=>{s.preventDefault(),n=s,e.hidden=!1,e.addEventListener("click",()=>{n&&(n.prompt(),n.userChoice.then(()=>{n=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!o&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(s=>{s.length&&(e.hidden=!0)})),i&&i.addEventListener("click",async s=>{s.preventDefault();const r=i.getAttribute("data-game-id")||0;(await U(()=>import("./chunk-DKyLfmuS.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(r)}),"windowControlsOverlay"in navigator){let s=function(){const r=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=r.height+"px"};navigator.windowControlsOverlay.addEventListener("geometrychange",s),s()}document.querySelectorAll(".modal").forEach(s=>{s.parentNode!==document.body&&document.body.appendChild(s)})}function _e(e){const t=e.value;t==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=t}window.handleGameSelection=_e;let T=3e3,j=0;function w(e){var n;const t=document.getElementById(e);if(!t){m.error(`Modal ${e} not found`);return}document.body.appendChild(t),(n=document.querySelector(".container"))==null||n.classList.add("modal-open"),j=window.scrollY||window.pageYOffset,document.body.style.top=`-${j}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",T+=10,t.style.zIndex=T;const o=t.querySelector(".modal-backdrop");o&&(o.style.display="block",o.style.zIndex=T-1),document.body.classList.add("body-no-scroll")}function x(e){var n;const t=document.getElementById(e);if(!t)return;const o=t.querySelector(".modal-backdrop");t.style.display="none",o&&(o.style.display="none"),T=Math.max(1050,T-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(n=document.querySelector(".container"))==null||n.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,j)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function G(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const o=document.getElementById("instagramLink");o&&(o.style.display="none",o.href="#");const n=document.getElementById("modalQuestActions");n&&(n.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(i=>i.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(i=>i.remove()),document.body.classList.remove("body-no-scroll")}function Ie(e,t){const o=document.getElementById(e);if(o){if(t.gameId!==void 0){const n=o.querySelector('input[name="game_id"]');n&&(n.value=t.gameId)}if(t.questId!==void 0){const n=o.querySelector('input[name="quest_id"]');n&&(n.value=t.questId)}if(t.next!==void 0){const n=o.querySelector('input[name="next"]');n&&(n.value=t.next)}}}function Le(e){Ie("loginModal",e),w("loginModal")}function Be(e={}){const t=document.getElementById("registerForm"),o=t.getAttribute("action").split("?")[0],n=[];e.gameId&&n.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&n.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&n.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&n.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",o+(n.length?`?${n.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),x("loginModal"),w("registerModal")}function H({gameId:e,questId:t=""}){const o=document.getElementById("loginForm"),n=document.getElementById("loginGameId"),i=document.getElementById("loginQuestId"),s=document.getElementById("loginNext"),r=document.getElementById("loginShowJoinCustom"),a=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;n.value=e,i.value=t,r.value="0",s.value=a;const d=o.getAttribute("action").split("?")[0],c=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:a});o.setAttribute("action",`${d}?${c.toString()}`),w("loginModal")}function ke(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",o=document.getElementById("loginNext").value||"",n=document.getElementById("loginShowJoinCustom").value||"",i=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=o,document.getElementById("registerShowJoinCustom").value=n,document.getElementById("registerCustomGameCode").value=i;const s=document.getElementById("registerForm"),r=s.getAttribute("action").split("?")[0],a=new URLSearchParams;e&&a.set("game_id",e),t&&a.set("quest_id",t),o&&a.set("next",o),n&&a.set("show_join_custom",n),i&&a.set("custom_game_code",i),s.setAttribute("action",`${r}?${a.toString()}`),x("loginModal"),w("registerModal")}function te(){var s;const e=((s=document.getElementById("loginEmail"))==null?void 0:s.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const o=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),i=document.getElementById("forgotButton");o&&(o.style.display="none"),n&&(n.style.display="none"),i&&(i.disabled=!1),w("forgotPasswordModal")}function ne(e){const t=document.getElementById("resetForm"),o=document.getElementById("resetToken"),n=t.dataset.baseAction;t.setAttribute("action",n+encodeURIComponent(e)),o.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,w("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(ne(t),history.replaceState(null,"",window.location.pathname)):m.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",o=e.has("game_id");t&&!o&&w("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(U(()=>Promise.resolve().then(()=>kt),void 0).then(o=>o.openQuestDetailModal(t)),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let o=e.get("game_id")||"";if(!o){const n=e.get("next");if(n)try{const s=new URL(n,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(o=s)}catch(i){m.warn("Failed to parse next URL for gameId:",i)}}H({gameId:o,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let o=e.get("game_id")||"";if(!o)try{const i=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(o=i)}catch(n){m.warn("Could not parse next URL for gameId:",n)}o&&H({gameId:o,questId:""})});async function V(e,t){try{const o=await fetch(e,{credentials:"same-origin"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const n=await o.text(),i=document.getElementById(t);i&&i.parentNode.removeChild(i);const s=document.createElement("div");s.innerHTML=n.trim();const r=s.firstElementChild;(!r||r.id!==t)&&m.warn(`Expected first element to be #${t}`,r),document.body.appendChild(r),w(t)}catch(o){m.error(`Error loading ${t} from ${e}:`,o),alert("Failed to load data. Please try again later.")}}async function D(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),o=await t.json();return{status:t.status,json:o}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-modal-url"),n=t.getAttribute("data-modal-id");if(!o||!n){m.error("data-modal-url or data-modal-id missing",t);return}V(o,n)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=w;window.closeModal=x;window.openLoginModalWithOptions=Le;window.openRegisterModalWithOptions=Be;window.openLoginModalWithGame=H;window.registerFromLogin=ke;window.openForgotPasswordModal=te;window.openResetPasswordModal=ne;window.fetchAndShowModal=V;window.submitFormJson=D;window.resetModalContent=G;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});function I(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){m.error("Riding preferences choices missing.");return}const o=document.getElementById("userProfileDetails");if(!o){m.error("Profile details containers not found");return}const n=t.current_user_id===t.user.id;o.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${n?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="window.toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((l,p)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${p}" name="riding_preferences"
                                      value="${l[0]}"
                                      ${t.user.riding_preferences.includes(l[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${p}">${l[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${n?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(l=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${l.image}" alt="${l.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${l.name}</h3>
                          <p>${l.description}</p>
                          <p><strong>Category:</strong> ${l.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(l=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${l.title}</h3>
                        <p class="text-muted">${l.description}</p>
                        <p><strong>Start Date:</strong> ${l.start_date}</p>
                        <p><strong>End Date:</strong> ${l.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(l=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${l.image_url?`<img src="${l.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${l.quest.title}</p>
                        <p class="text-muted">${l.comment}</p>
                        <p><strong>Submitted At:</strong> ${l.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${l.twitter_url?`<a href="${l.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${l.fb_url?`<a href="${l.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${l.instagram_url?`<a href="${l.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${n?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${l.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const i=document.getElementById("userProfileModalLabel");i.textContent=`${t.user.display_name||t.user.username}'s Profile`;const s=document.getElementById("followBtn");s&&(s.style.display="");const r=document.getElementById("followerCount");let a=t.user.follower_count;function d(){r&&(r.textContent=`${a} follower${a===1?"":"s"}`)}if(d(),!n&&s){let p=function(){l?(s.textContent="Following",s.classList.remove("btn-primary"),s.classList.add("btn-outline-primary")):(s.textContent="Follow",s.classList.remove("btn-outline-primary"),s.classList.add("btn-primary"))};s&&(s.style.display="",s.classList.remove("d-none"));let l=t.current_user_following;p(),s.onclick=async()=>{const g=l?"unfollow":"follow",u=await fetch(`/profile/${t.user.username}/${g}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":C()},credentials:"same-origin"});if(!u.ok){m.error("Follow toggle failed:",await u.text());return}l=!l,a+=l?1:-1,p(),d()}}else{const l=document.getElementById("followBtn");l&&(l.style.display="none")}w("userProfileModal");const c=document.getElementById("profileTabSelect");c&&(c.addEventListener("change",l=>{const p=l.target.value,g=document.querySelector(`#profileTabs a[href="#${p}"]`);g&&new bootstrap.Tab(g).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(l=>{l.addEventListener("shown.bs.tab",p=>{c.value=p.target.getAttribute("href").slice(1)})}))}).catch(t=>{m.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function $e(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){m.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function Se(e){I(e)}function xe(e){const t=document.getElementById("editProfileForm");if(!t){m.error("Edit profile form not found");return}const o=new FormData(t),n=document.getElementById("profilePictureInput");n.files.length>0&&o.append("profile_picture",n.files[0]);const i=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(s=>{i.push(s.value)}),o.delete("riding_preferences"),i.forEach(s=>{o.append("riding_preferences",s)}),fetch(`/profile/${e}/edit`,{method:"POST",headers:{"X-CSRFToken":C()},body:o}).then(s=>s.json()).then(s=>{if(s.error){let r=`Error: ${s.error}`;if(s.details){const a=[];Object.values(s.details).forEach(d=>{a.push(d.join(", "))}),a.length&&(r+=` - ${a.join("; ")}`)}alert(r)}else alert("Profile updated successfully."),I(e)}).catch(s=>{m.error("Error updating profile:",s),alert("Failed to update profile. Please try again.")})}function Te(e){const t=document.getElementById("editBikeForm");if(!t){m.error("Edit bike form not found");return}const o=new FormData(t),n=document.getElementById("bikePicture");n.files.length>0&&o.append("bike_picture",n.files[0]),fetch(`/profile/${e}/edit-bike`,{method:"POST",headers:{"X-CSRFToken":C()},body:o}).then(i=>i.json()).then(i=>{i.error?alert(`Error: ${i.error}`):(alert("Bike details updated successfully."),I(e))}).catch(i=>{m.error("Error updating bike details:",i),alert("Failed to update bike details. Please try again.")})}function Me(e,t,o){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":C()}}).then(n=>n.json()).then(n=>{if(n.success)alert("Submission deleted successfully."),t==="profileSubmissions"&&I(o);else throw new Error(n.message)}).catch(n=>{m.error("Error deleting submission:",n),alert("Error during deletion: "+n.message)})}function qe(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&fetch("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":C()}}).then(e=>{if(e.redirected)window.location.href=e.url;else return e.json()}).then(e=>{if(e&&e.error)throw new Error(e.error);alert("Your account has been successfully deleted."),window.location.href="/"}).catch(e=>{m.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}window.showUserProfileModal=I;window.toggleProfileEditMode=$e;window.cancelProfileEdit=Se;window.saveProfile=xe;window.saveBike=Te;window.deleteSubmission=Me;window.deleteAccount=qe;let S;document.addEventListener("DOMContentLoaded",()=>{const e=a=>document.querySelector(a);if(!e("#submissionDetailModal"))return;const o=()=>C(),n=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");S=function(a){const d=e("#submissionDetailModal");d.dataset.submissionId=a.id,d.dataset.questId=a.quest_id||"";const c=Number(d.dataset.currentUserId),l=Number(a.user_id)===c,p=d.dataset.isAdmin==="True"||d.dataset.isAdmin==="true",g=e("#editPhotoBtn"),u=e("#photoEditControls"),f=e("#submissionPhotoInput"),b=e("#savePhotoBtn"),E=e("#cancelPhotoBtn"),y=e("#deleteSubmissionBtn");g.hidden=!l,y.hidden=!(l||p),u.hidden=!0,g.addEventListener("click",()=>{u.hidden=!1,g.hidden=!0}),E.addEventListener("click",()=>{f.value="",u.hidden=!0,g.hidden=!1}),y.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const _=d.dataset.submissionId;fetch(`/quests/quest/delete_submission/${_}`,{method:"DELETE",headers:{"X-CSRF-Token":o()}}).then(v=>v.json()).then(v=>{if(!v.success)throw new Error(v.message||"Delete failed");x("submissionDetailModal"),G(),d.dataset.questId&&refreshQuestDetailModal(d.dataset.questId),alert("Submission deleted successfully.")}).catch(v=>alert("Error deleting submission: "+v.message))}),b.addEventListener("click",()=>{const _=d.dataset.submissionId,v=f.files[0];if(!v)return alert("Please select an image first.");if(v.type.startsWith("video/")&&v.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(v.type.startsWith("image/")&&v.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const R=new FormData;v.type.startsWith("video/")?R.append("video",v):R.append("photo",v),fetch(`/quests/submission/${_}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":o()},body:R}).then(L=>L.json()).then(L=>{if(!L.success)throw new Error(L.message||"Upload failed");L.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=L.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=L.image_url),E.click()}).catch(L=>alert(L.message))}),e("#submissionReplyEdit").hidden=l,e("#postReplyBtn").hidden=l,e("#ownerNotice").hidden=!l;const k=e("#submissionRepliesContainer");l?k.hidden=!0:k.hidden=!1;const h={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};h.profileImg.src=a.user_profile_picture||n,h.profileImgOverlay.src=h.profileImg.src,h.profileCap.textContent=a.user_display_name||a.user_username||"—",h.profileLink.onclick=_=>{_.preventDefault(),I(a.user_id)},h.imgOverlay.parentElement.onclick=h.profileLink.onclick;const F=n;a.video_url?(h.img.hidden=!0,h.video.hidden=!1,h.videoSource.src=a.video_url,h.video.load()):(h.video.hidden=!0,h.img.hidden=!1,h.img.src=a.url||F),h.commentRead.textContent=a.comment||"No comment provided.",["tw","fb","ig"].forEach(_=>{const v=_==="tw"?"twitter_url":_==="fb"?"fb_url":"instagram_url";try{new URL(a[v]),h.social[_].href=a[v],h.social[_].style.display="inline-block"}catch{h.social[_].style.display="none"}}),l?(h.editBtn.hidden=!1,h.readBox.hidden=!1):h.editBtn.hidden=h.readBox.hidden=h.commentEdit.hidden=h.editBox.hidden=!0,s(),w("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),i(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const a=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${a}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(d=>{if(!d.ok)throw new Error(d.status);return d.json()}).then(d=>{if(!d.success)throw new Error(d.message||"Save failed");e("#submissionComment").textContent=d.comment||"No comment provided.",i(!1)}).catch(d=>alert(`Could not save comment: ${d.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>i(!1));function i(a){e("#submissionComment").hidden=a,e("#commentReadButtons").hidden=a,e("#submissionCommentEdit").hidden=!a,e("#commentEditButtons").hidden=!a}function s(){const a=e("#submissionDetailModal").dataset.submissionId;a&&(fetch(`/quests/submissions/${a}`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{e("#submissionLikeCount").textContent=d.like_count||0,e("#submissionLikeBtn").classList.toggle("active",d.liked_by_current_user)}),fetch(`/quests/submission/${a}/replies`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{const c=e("#submissionRepliesList");c.innerHTML="",d.replies.forEach(u=>{const f=document.createElement("div");f.className="reply mb-1",f.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${u.user_id}">
              <strong>${u.user_display}</strong>
            </a>: ${u.content}
          `,f.querySelector(".reply-user-link").addEventListener("click",E=>{E.preventDefault(),I(u.user_id)}),c.appendChild(f)});const l=e("#submissionReplyEdit"),p=e("#postReplyBtn"),g=e("#replyLimitMessage");if(d.replies.length>=10){if(l.disabled=!0,p.disabled=!0,!g){const u=document.createElement("div");u.id="replyLimitMessage",u.className="text-muted mt-2",u.textContent="Maximum replies reached, sorry.",l.parentNode.insertBefore(u,l)}}else l.disabled=!1,p.disabled=!1,g&&g.remove()}))}e("#submissionLikeBtn").addEventListener("click",()=>{const a=e("#submissionLikeBtn"),d=e("#submissionDetailModal").dataset.submissionId,c=a.classList.contains("active");fetch(`/quests/submission/${d}/like`,{method:c?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()}}).then(l=>{if(!l.ok)throw new Error(l.status);return l.json()}).then(l=>{if(!l.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=l.like_count,a.classList.toggle("active",l.liked)}).catch(l=>alert(l.message))}),e("#postReplyBtn").addEventListener("click",()=>{const a=e("#submissionDetailModal").dataset.submissionId,d=e("#submissionReplyEdit");e("#postReplyBtn");const c=d.value.trim();!a||!c||fetch(`/quests/submission/${a}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()},body:JSON.stringify({content:c})}).then(l=>l.json().then(p=>({ok:l.ok,status:l.status,body:p}))).then(({ok:l,status:p,body:g})=>{if(!g.success){if(g.message==="Reply limit of 10 reached"){r();return}if(p===409&&g.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(g.message||"Error")}const u=e("#submissionRepliesList"),f=document.createElement("div");f.className="reply mb-1",f.innerHTML=`<strong>${g.reply.user_display}</strong>: ${g.reply.content}`,u.insertBefore(f,u.firstChild),d.value="",u.children.length>=10&&r()}).catch(l=>alert(l.message))});function r(){const a=e("#submissionReplyEdit"),d=e("#postReplyBtn");if(a.disabled=!0,d.disabled=!0,!e("#replyLimitMessage")){const c=document.createElement("div");c.id="replyLimitMessage",c.className="text-muted mt-2",c.textContent="Maximum replies reached, sorry.",a.parentNode.insertBefore(c,a)}}window.showSubmissionDetail=S});const oe=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=oe;let P=0,ie=null,J=!1,Y=!1;function se(e){P=0,ie=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),w("allSubmissionsModal"),ae()}function ae(){const e=P*10;fetch(`/quests/quest/all_submissions?game_id=${ie}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);J=t.is_admin,Y=t.has_more,Pe(t.submissions,J,P>0),Ae(Y),P+=1}).catch(t=>{m.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function Pe(e,t,o=!1){const n=document.getElementById("allSubmissionsContainer");if(!n){m.error("allSubmissionsContainer element not found.");return}o||(n.innerHTML=""),e.forEach(i=>{const s=document.createElement("div");s.className="submission-card";const r=document.createElement("img");r.src=i.image_url||oe,r.alt="Quest Submission",r.className="submission-image";const a=document.createElement("div");a.className="submission-info";const d=document.createElement("p");d.textContent=`User: ${i.user_display_name||i.user_username}`,d.className="submission-user-details";const c=document.createElement("p"),l=new Date(i.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});c.textContent=`Submitted on: ${l}`,c.className="submission-timestamp";const p=document.createElement("p");p.textContent=`Comment: ${i.comment}`,p.className="submission-comment";const g=document.createElement("p");g.textContent=`Twitter: ${i.twitter_url||"N/A"}`,g.className="submission-comment";const u=document.createElement("p");u.textContent=`Facebook: ${i.fb_url||"N/A"}`,u.className="submission-comment";const f=document.createElement("p");if(f.textContent=`Instagram: ${i.instagram_url||"N/A"}`,f.className="submission-comment",a.appendChild(d),a.appendChild(c),a.appendChild(p),a.appendChild(g),a.appendChild(u),a.appendChild(f),t){const b=document.createElement("button");b.textContent="Delete",b.className="button delete-button",b.addEventListener("click",function(E){E.stopPropagation(),De(i.id)}),s.appendChild(b)}s.appendChild(r),s.appendChild(a),s.addEventListener("click",function(){S({url:i.image_url||i.video_url,video_url:i.video_url,comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name||i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,verification_type:"image"}),w("submissionDetailModal")}),n.appendChild(s)})}function De(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":C()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{m.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Ae(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{ae()})});window.showAllSubmissionsModal=se;document.addEventListener("DOMContentLoaded",()=>{Fe(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>Re(e.dataset.toggleForm))})});function Fe(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(o=>{const n=document.createElement("tr");n.dataset.badgeId=o.id;const i=o.image?`<img src="${o.image}" height="50" alt="Badge Image">`:"No Image";n.innerHTML=`
                    <td class="badge-image-manage">${i}</td>
                    <td class="badge-name">${o.name}</td>
                    <td class="badge-description">${o.description}</td>
                    <td class="badge-category">${o.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${o.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${o.id}">Delete</button>
                    </td>
                `,n.querySelector(".edit-badge").addEventListener("click",()=>Oe(o.id)),n.querySelector(".delete-badge").addEventListener("click",()=>je(o.id)),e.appendChild(n)})}).catch(t=>m.error("Failed to load badges:",t))}function Re(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function Ne(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const o=t.categories||[],n=document.createElement("select");n.className="form-control badge-category-select";const i=document.createElement("option");return i.value="none",i.textContent="None",(!e||e==="none")&&(i.selected=!0),n.appendChild(i),o.forEach(s=>{const r=document.createElement("option");r.value=s,r.textContent=s,s===e&&(r.selected=!0),n.appendChild(r)}),n}).catch(t=>{m.error("Error fetching categories:",t);const o=document.createElement("select");o.className="form-control badge-category-select";const n=document.createElement("option");return n.value="none",n.textContent="None",n.selected=!0,o.appendChild(n),o})}function Oe(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){m.error(`Badge row with ID ${e} not found.`);return}const o=t.querySelector(".badge-name"),n=t.querySelector(".badge-description"),i=t.querySelector(".badge-category"),s=t.querySelector(".badge-image-manage");o.textContent="";const r=document.createElement("input");r.type="text",r.value=o.innerText.trim(),r.className="form-control badge-name-input",o.appendChild(r),n.textContent="";const a=document.createElement("textarea");if(a.className="form-control badge-description-textarea",a.value=n.innerText.trim(),n.appendChild(a),s){s.textContent="";const d=document.createElement("input");d.type="file",d.className="form-control-file badge-image-input",s.appendChild(d)}else m.error("Could not find badge-image-manage cell");Ne(i.innerText.trim()).then(d=>{i.textContent="",i.appendChild(d);const c=t.querySelector("button.edit-badge");c.innerText="Save",c.onclick=()=>Qe(e)})}function Qe(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),o=new FormData;o.append("name",t.querySelector(".badge-name-input").value.trim()),o.append("description",t.querySelector(".badge-description-textarea").value.trim()),o.append("category",t.querySelector(".badge-category-select").value);const n=t.querySelector(".badge-image-input");n&&n.files.length>0&&o.append("image",n.files[0]);const i=document.querySelector("[name=csrf_token]").value;fetch(`/badges/update/${e}`,{method:"POST",body:o,headers:{"X-CSRFToken":i}}).then(s=>s.json()).then(s=>{s.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+s.message)}).catch(s=>m.error("Error updating badge:",s))}function je(e){confirm("Are you sure you want to delete this badge?")&&fetch(`/badges/delete/${e}`,{method:"DELETE",headers:{"X-CSRFToken":C()}}).then(t=>t.json()).then(t=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{m.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}window.allBadges=window.allBadges||[];const A=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=A;function Ue(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return A}async function Ge(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,n=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,i=await fetch(n,{credentials:"same-origin"});if(!i.ok)throw new Error("Error fetching badges");const s=await i.json();return window.allBadges=s.badges,window.allBadges}async function re(){if(!window.allBadges||window.allBadges.length===0)try{await Ge()}catch(e){m.error("Error loading badges:",e),window.allBadges=[]}}function He(e){return e?`<ul>${e.split(",").map(o=>`<li>${q(o.trim())}</li>`).join("")}</ul>`:""}function Ve(e){return window.allBadges.find(t=>t.id==e)}function We(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||A}}async function Xe(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const o=await t.json();return o.userCompletion?o.userCompletion.completions:0}function Je(e,t,o,n,i,s,r){const a=document.getElementById("badgeModalTitle"),d=document.getElementById("badgeModalImage"),c=document.getElementById("badgeModalText");if(!a||!d||!c){m.error("Badge modal elements missing");return}a.textContent=e.name,d.src=Ue(e.image)||A;let l="";if(s){const g=`<a href="#" onclick="openQuestDetailModal('${s}')">${q(r)}</a>`;l=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${o}</p><p>${i?"You have earned this badge.":"Complete "+g+" to earn this badge."}</p>`}else l=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${o}</p>${n}<p>${i?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const p=e.description||"No description available.";i?(d.style.filter="none",d.oncontextmenu=null,c.innerHTML=`<p><strong>Awarded!</strong></p>${l}<p>${q(p)}</p>`):(d.style.filter="grayscale(100%) opacity(0.5)",d.oncontextmenu=g=>(g.preventDefault(),!1),c.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${l}<p>${q(p)}</p>`)}async function Ye(e){const t=e.getAttribute("data-badge-id"),o=e.getAttribute("data-task-name"),n=e.getAttribute("data-task-id"),i=e.getAttribute("data-badge-awarded-count"),s=e.getAttribute("data-user-completions"),r=parseInt(i,10),a=parseInt(s,10)||0,d=He(o),c=n?n.split(",").map(f=>f.trim()).filter(Boolean):[],l=c.length===1?c[0]:null;await re();const p=Ve(t)||We(e);let g=a;if(l)try{g=await Xe(l)}catch(f){m.error("Error fetching user completions:",f)}const u=g>=r;Je(p,r,g,d,u,l,o),w("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{re()});window.openBadgeModal=Ye;document.addEventListener("DOMContentLoaded",()=>{});let N;function ze(e){const t=document.getElementById("deleteGameModal"),o=document.getElementById("deleteGameForm"),n=document.getElementById("deleteGameConfirmInput"),i=document.getElementById("deleteGameCountdown"),s=document.getElementById("deleteGameTimer"),r=document.getElementById("deleteGameConfirmBtn");if(!t||!o||!n||!i||!s||!r){m.warn("Delete game modal elements missing");return}t.dataset.gameId=e,o.action=`/games/delete_game/${e}`,n.value="",r.disabled=!0,i.hidden=!0,s.textContent="5",w("deleteGameModal")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),o=document.getElementById("deleteGameCountdown"),n=document.getElementById("deleteGameTimer"),i=document.getElementById("deleteGameUndo"),s=document.getElementById("deleteGameForm");!e||!t||!o||!n||!i||!s||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let r=5;o.hidden=!1,n.textContent=r.toString(),N=setInterval(()=>{r-=1,n.textContent=r.toString(),r<=0&&(clearInterval(N),s.submit())},1e3)}),i.addEventListener("click",()=>{clearInterval(N),o.hidden=!0,n.textContent="5",e.value="",t.disabled=!0}))});window.openDeleteGameModal=ze;document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[o,n]=t[0],i=document.getElementById("flash-overlay");i.querySelector(".flash-content").textContent=n,i.querySelector(".flash-modal").classList.add(`flash-${o}`),requestAnimationFrame(()=>{i.classList.add("visible")});function s(){i.classList.remove("visible"),e.removeAttribute("data-messages")}i.querySelector(".flash-close").addEventListener("click",s),i.querySelector(".flash-ok-btn").addEventListener("click",s)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),n=document.getElementById("forgotButton"),i=document.getElementById("forgotEmail"),s=document.getElementById("forgotEmailDisplay"),r=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{r.style.display==="block"&&(s.textContent=i.value)}).observe(r,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",d=>{d.preventDefault(),t.style.display="none",o.style.display="none",D(e).then(({json:c})=>{c.success?(o.textContent=c.message,o.style.display="block",n.disabled=!0):(t.textContent=c.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function Ke(e){const t="/games/game-info/"+e+"?modal=1";V(t,"gameInfoModal")}window.showGameInfoModal=Ke;document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("button[data-game-id]").forEach(o=>{o.addEventListener("click",function(){t(this)})});function t(o){const n=document.getElementById("questCreationForm"),i=o.getAttribute("data-game-id");n?n.addEventListener("submit",function(s){s.preventDefault();const r=document.getElementById("questDescription").value,a=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":a},body:JSON.stringify({description:r,game_id:i})}).then(d=>d.ok?d.json():d.json().then(c=>Promise.reject({status:d.status,statusText:d.statusText,errorMessage:c.error}))).then(d=>{if(d.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=d.generated_quest_html,w("generateAIQuestModal");const c=document.getElementById("generateAIQuestModalForm");c&&c.setAttribute("data-game-id",i),c&&c.addEventListener("submit",function(f){f.preventDefault();const b=new FormData(c),E=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":E},body:b}).then(y=>y.json()).then(y=>{window.location.href="/",m.log(y)}).catch(y=>{m.error("Error:",y)})});const l=document.getElementById("generateAIImage"),p=document.getElementById("badge_description"),g=document.getElementById("aiBadgeImage"),u=document.getElementById("aiBadgeFilename");if(!l||!p||!g||!u){m.error("One or more elements not found in the DOM");return}l.addEventListener("click",function(){m.log("Generate AI Image button clicked");const f=p.value;if(m.log("Badge Description:",f),!f){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:f})}).then(b=>b.json()).then(b=>{if(m.log("Response data:",b),b.error)alert("Error generating badge image: "+b.error);else{const E=`${b.filename}`,y=`static/images/badge_images/${b.filename}`;g.src=y,g.style.display="block",u.value=E}}).catch(b=>{m.error("Fetch error:",b),alert("Error: "+b)})})}}).catch(d=>{alert("Error generating quest: "+(d.errorMessage||d.statusText))})}):m.error("Form '#questCreationForm' not found.")}});const Ze=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){m.error("Error refreshing CSRF token:",e)}};setInterval(Ze,9e5);const et=async e=>{try{const o=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),n=o.total_game_points,i=o.game_goal,s=i-n,r=Math.min(n/i*100,100),a=document.getElementById("meterBar"),d=document.querySelector(".meter-label");a&&(a.style.height=`${r}%`),document.documentElement.style.setProperty("--meter-fill-height",`${r}%`),d&&(d.innerText=`Remaining Reduction: ${s} / ${i}`)}catch(t){m.error("Failed to update meter:",t)}};function tt(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const o=e.getAttribute("data-game-id");fetch(`/games/get_game/${o}`,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw m.error(`Failed fetching game name; URL returned status ${n.status} (${n.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${n.status}: ${n.statusText}`);return n.json()}).then(n=>{t.textContent=n.name||"Game Not Found"}).catch(n=>{m.error("Error retrieving game name:",n),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",async()=>{const a=e.getAttribute("data-game-id");(await U(()=>import("./chunk-DKyLfmuS.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(a),et(a)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&se(currentUserId)});const o=document.getElementById("contactForm");o&&o.addEventListener("submit",async a=>{a.preventDefault();const d=new FormData(o);ye();try{const c=await fetch(o.action,{method:"POST",body:d,headers:{"X-Requested-With":"XMLHttpRequest"}}),l=await c.json();c.ok&&l.success?(alert("Your message has been sent successfully."),x("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{Ee()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(a=>{a.innerHTML=a.innerHTML.replace(/<\/?p[^>]*>/g,"")});const i=document.getElementById("questSearchInput"),s=document.getElementById("questCategoryDropdown");i&&i.addEventListener("input",z),s&&s.addEventListener("change",z);const r=document.querySelector("#whats-happening-step");if(r){const a=r.querySelectorAll(".wh-tab-button"),d=r.querySelectorAll(".wh-tab-content");a.forEach(c=>{c.addEventListener("click",()=>{const l=c.getAttribute("data-wh-tab");a.forEach(p=>p.classList.remove("active")),d.forEach(p=>p.classList.remove("active")),c.classList.add("active"),r.querySelector(`#wh-${l}-tab`).classList.add("active")})})}tt()});function z(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(n=>{const i=n.querySelector(".quest-title").textContent.toLowerCase(),s=n.dataset.category||"Not Set",r=i.includes(e),a=t==="all"||s===t;n.style.display=r&&a?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(i){i.addEventListener("click",function(){const s=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=s,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",o=e.dataset.joinDemoUrl;let n=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{n=!0}),e.addEventListener("hidden.bs.modal",function(){!n&&!t&&(window.location.href=o)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const o=document.getElementById("passwordError"),n=document.getElementById("forgotContainer"),i=t.dataset.checkUrl;e.addEventListener("submit",c=>{c.preventDefault(),o.style.display="none",n.innerHTML="",D(e).then(({json:l})=>{if(l.success)window.location.href=l.redirect;else if(o.textContent=l.error,o.style.display="block",l.show_forgot){const p=document.createElement("a");p.href="javascript:void(0)",p.textContent="Forgot password?",p.className="d-block mt-1",p.onclick=te,n.appendChild(p)}}).catch(()=>e.submit())});const s=document.getElementById("loginEmail"),r=document.getElementById("loginButton"),a=document.getElementById("emailError");function d(){r.disabled=!0,a.style.display="none",a.textContent=""}d(),s.addEventListener("blur",()=>{const c=s.value.trim();if(!c)return d();fetch(`${i}?email=${encodeURIComponent(c)}`).then(l=>l.json()).then(l=>{l.exists?r.disabled=!1:(r.disabled=!0,a.textContent="This email is not registered. Please register first.",a.style.display="block")}).catch(()=>r.disabled=!1)}),s.addEventListener("input",d)});let B=null;const nt={qr_code:"QR Code",photo:"Photo Upload",comment:"Comment",photo_comment:"Photo Upload and Comment",video:"Video Upload"};let le=[];function K(){const e=document.getElementById("game_Data");if(!e)return;B=e.dataset.gameId;const t=document.getElementById("deleteAllQuestsBtn");t&&t.addEventListener("click",it);const o=document.getElementById("importQuestsBtn");o&&o.addEventListener("click",gt),ot().then(()=>M(B))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",K):K();async function ot(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");le=(await e.json()).badges||[]}catch(e){m.error("Error fetching badges:",e)}}function de(e){const t=document.querySelector(`#quest-${e}`),o={};t.querySelectorAll(".editable").forEach(n=>{o[n.getAttribute("data-name")]=n.innerHTML}),st(t),at(t),rt(t),lt(t),ct(t,e,o)}function it(){confirm("Are you sure you want to delete all quests? This action cannot be undone.")&&fetch(`/quests/game/${B}/get_title`,{method:"GET",headers:{Accept:"application/json"}}).then(e=>{if(!e.ok)throw new Error("Failed to fetch game title");return e.json()}).then(e=>{const t=e.title;confirm(`This will delete all quests for the game: "${t}". Are you absolutely sure? This action cannot be undone.`)&&fetch(`/quests/game/${B}/delete_all`,{method:"DELETE",headers:{"X-CSRF-Token":C(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Failed to delete all quests");return o.json()}).then(o=>{o.success?(alert("All quests deleted successfully"),M(B)):alert(`Failed to delete quests: ${o.message}`)}).catch(o=>{m.error("Error:",o),alert("Failed to delete all quests. Please check the console for more details.")})}).catch(e=>{m.error("Error fetching game title:",e),alert("Failed to fetch game title. Please check the console for more details.")})}function st(e){const t=e.querySelector('.editable[data-name="verification_type"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="verification_type" class="editable-select">';Object.entries(nt).forEach(([i,s])=>{const r=o===i.toLowerCase()?"selected":"";n+=`<option value="${i}" ${r}>${s}</option>`}),n+="</select>",t.innerHTML=n}function at(e){const t=e.querySelector('.editable[data-name="frequency"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="frequency" class="editable-select">';Object.entries({daily:"Daily",weekly:"Weekly",monthly:"Monthly"}).forEach(([s,r])=>{const a=o===s.toLowerCase()?"selected":"";n+=`<option value="${s}" ${a}>${r}</option>`}),n+="</select>",t.innerHTML=n}function rt(e){const t=e.querySelector('.editable[data-name="badge_name"]');let o=t.innerText.trim(),n='<select name="badge_id" class="editable-select"><option value="">None</option>';le.forEach(i=>{const s=o===i.name?"selected":"";n+=`<option value="${i.id}" ${s}>${i.name}</option>`}),n+="</select>",t.innerHTML=n}function lt(e,t){[{name:"title",type:"text"},{name:"description",type:"textarea"},{name:"tips",type:"textarea"},{name:"points",type:"number"},{name:"badge_awarded",type:"number"},{name:"completion_limit",type:"number"},{name:"category",type:"text"},{name:"enabled",type:"select",options:["Yes","No"]},{name:"is_sponsored",type:"select",options:["Yes","No"]}].forEach(n=>{const i=e.querySelector(`.editable[data-name="${n.name}"]`);i&&dt(i,n)})}function dt(e,t){let o=e.getAttribute("data-value")||e.innerHTML.trim(),n;t.type==="select"?(n=document.createElement("select"),n.name=t.name,t.options.forEach(i=>{const s=document.createElement("option");s.value=i,s.text=i,o===s.text&&(s.selected=!0),n.appendChild(s)})):t.type==="textarea"?(n=document.createElement("textarea"),n.name=t.name,n.value=o):(n=document.createElement("input"),n.type=t.type,n.name=t.name,n.value=o),e.innerHTML="",e.appendChild(n)}function ct(e,t,o){const n=e.querySelector(".edit-button");n.innerText="Save",n.onclick=()=>ut(t);const i=document.createElement("button");i.innerText="Cancel",i.className="btn btn-secondary ms-2 cancel-button",i.onclick=()=>{mt(e,o,n,t)},n.parentNode.insertBefore(i,n.nextSibling)}function mt(e,t,o,n){Object.entries(t).forEach(([i,s])=>{const r=e.querySelector(`.editable[data-name="${i}"]`);r&&(r.innerHTML=s)}),o.innerText="Edit",o.onclick=()=>de(n),e.querySelector(".cancel-button").remove()}function ut(e){const t=document.querySelector(`#quest-${e}`);let o={};t.querySelectorAll("input, select, textarea").forEach(n=>{let i=n.value;n.name==="enabled"||n.name==="is_sponsored"?i=n.value==="Yes":n.name==="badge_id"&&i===""&&(i=null),o[n.name]=i}),fetch(`/quests/quest/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":C()},body:JSON.stringify(o)}).then(n=>n.json()).then(n=>{n.success?(alert("Quest updated successfully."),M(B)):alert("Failed to update quest. Error: "+n.message)}).catch(n=>{m.error("Error updating quest:",n),alert("Error updating quest. Please check console for details.")})}function M(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const o=document.getElementById("questsBody");o.innerHTML="",t.quests.forEach(n=>{const i=document.createElement("div");i.className="card",i.id=`quest-${n.id}`;const s=n.verification_type.toLowerCase(),r=n.badge_name||"None",a=n.frequency||"Not Set",d=n.category||"Not Set",c=n.badge_awarded||"Not Set";i.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${n.title}</h5>
                        <div class="card-text editable" data-name="description">${n.description}</div>
                        <div class="card-text editable" data-name="tips">${n.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${n.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${n.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${n.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${n.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${n.verification_type}">${s}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${r}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${c}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${n.frequency}">${a}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${d}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" data-quest-id="${n.id}">Edit</button>
                            <button class="btn btn-danger delete-button" data-quest-id="${n.id}">Delete</button>
                            <button class="btn btn-info qr-button" data-quest-id="${n.id}">Generate QR Code</button>
                        </div>
                    </div>
                `,o.appendChild(i);const l=i.querySelector(".edit-button"),p=i.querySelector(".delete-button"),g=i.querySelector(".qr-button");l&&l.addEventListener("click",()=>de(n.id)),p&&p.addEventListener("click",()=>pt(n.id)),g&&g.addEventListener("click",()=>ft(n.id))})}).catch(t=>m.error("Failed to load quests:",t))}function pt(e){fetch(`/quests/quest/${e}/delete`,{method:"DELETE",headers:{"X-CSRF-Token":C(),Accept:"application/json"}}).then(t=>{if(!t.ok)throw new Error("Failed to delete quest");return t.json()}).then(t=>{t.success?(alert("Quest deleted successfully"),M(B)):alert(`Failed to delete quest: ${t.message}`)}).catch(t=>{m.error("Error:",t),alert("Failed to delete quest. Please check the console for more details.")})}function gt(){const e=document.getElementById("importQuestsForm"),t=new FormData(e);fetch(`/quests/game/${B}/import_quests`,{method:"POST",body:t,headers:{"X-CSRF-Token":C(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Network response was not ok");return o.json()}).then(o=>{o.success&&o.redirectUrl?(alert("Quests imported successfully"),M(B)):alert("Failed to import quests: "+o.message)}).catch(o=>{m.error("Error importing quests:",o)})}function ft(e){const t=`/quests/generate_qr/${e}`;fetch(t).then(o=>{if(!o.ok)throw new Error("Failed to generate QR code");return o.blob()}).then(o=>{const n=URL.createObjectURL(o);window.open(n,"_blank")}).catch(o=>{m.error("Error generating QR code:",o),alert("Failed to generate QR code. Please check console for more details.")})}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),o=e.querySelector("#notifLoading"),n=e.querySelector("li.dropdown-footer"),i=n.querySelector("#loadMoreBtn"),s=e.dataset.url;let r=0,a=1;const d=parseInt(e.dataset.perPage,10)||10,c={follow:({from_user_name:u,from_user_id:f})=>({text:`Now following ${u}`,onClick:()=>I(f)}),followed_by:({follower_name:u,follower_id:f})=>({text:`${u} is now following you`,onClick:()=>I(f)}),submission:({actor_name:u,quest_name:f,submission_id:b})=>({text:`${u} submitted a new “${f}” quest`,onClick:async()=>{const y=await(await fetch(`/quests/submissions/${b}`)).json();S(y)}}),profile_message:({from_user_name:u,content:f,profile_user_id:b})=>({text:`${u} says “${f}”`,onClick:()=>I(b)}),profile_reply:({from_user_name:u,content:f,profile_user_id:b})=>({text:`${u} replied “${f}”`,onClick:()=>I(b)}),submission_like:({liker_name:u,submission_id:f})=>({text:`${u} liked your submission`,onClick:async()=>{const E=await(await fetch(`/quests/submissions/${f}`,{credentials:"same-origin"})).json();S(E)}}),submission_reply:({actor_name:u,content:f,submission_id:b})=>({text:`${u} replied “${f}”`,onClick:async()=>{const y=await(await fetch(`/quests/submissions/${b}`,{credentials:"same-origin"})).json();S(y)}})};function l(u){const f=c[u.type];let b,E;if(f&&u.payload)try{({text:b,onClick:E}=f(u.payload))}catch(h){m.error(`Error in handler for ${u.type}:`,h)}(!b||!E)&&(b=u.payload.summary||JSON.stringify(u.payload),E=()=>{window.location.href="/notifications/"});const y=u.is_read?"":"fw-bold",k=document.createElement("a");return k.href="#",k.className=`dropdown-item ${y}`,k.innerHTML=`
      ${b}
      <small class="text-muted d-block text-center">
        ${new Date(u.when).toLocaleString()}
      </small>`,k.addEventListener("click",async h=>{h.preventDefault();try{await E()}catch(F){m.error(F)}}),k}function p(u){u&&u.parentNode===e&&e.removeChild(u)}async function g(u){u===1&&(Array.from(e.children).forEach(y=>{y!==o&&y!==n&&e.removeChild(y)}),r=0),p(o),p(n),e.appendChild(o),e.appendChild(n),o.style.display="",i.disabled=!0;let f;try{f=await fetch(`${s}?page=${u}&per_page=${d}`,{credentials:"include"})}catch(y){o.textContent="Network error.",m.error(y);return}if(!f.ok){o.textContent="Error loading.",m.error("Status:",f.status,f.statusText);return}const b=await f.json();r=b.page,a=b.total_pages,p(o),p(n);const E=t.querySelector(".badge");E&&E.remove(),b.items.forEach(y=>{e.appendChild(l(y))}),e.appendChild(o),e.appendChild(n),o.style.display="none",i.disabled=r>=a}t.addEventListener("show.bs.dropdown",()=>{r===0&&g(1)}),i.addEventListener("click",u=>{u.preventDefault(),u.stopPropagation(),r<a&&g(r+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let o;try{({public_key:o}=await t.json())}catch(s){m.error("Push setup failed",s);return}if(!o||await e.pushManager.getSubscription())return;const i=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:bt(o)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:i})})}catch(t){m.error("Push setup failed",t)}})});function bt(e){const t="=".repeat((4-e.length%4)%4),o=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=atob(o),i=new Uint8Array(n.length);for(let s=0;s<n.length;++s)i[s]=n.charCodeAt(s);return i}function ce(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const ht=Number(ce("current-user-id")||0),me=C(),$=window.PLACEHOLDER_IMAGE||ce("placeholder-image");window.PLACEHOLDER_IMAGE=$;function ue(e){G(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:s}=t;if(!ge(o,n.completions,i,e,s)){m.error("populateQuestDetails – required element missing");return}fe(o,n.completions,s,i),w("questDetailModal"),W(),he(e)}).catch(t=>{m.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function pe(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:s}=t;if(!ge(o,n.completions,i,e,s)){m.error("populateQuestDetails – required element missing");return}fe(o,n.completions,s,i),W(),he(e)}).catch(t=>{m.error("Failed to refresh quest detail modal:",t)})}function W(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((o,n)=>{o.forEach(i=>{if(i.isIntersecting){const s=i.target;s.src=s.getAttribute("data-src"),s.classList.remove("lazyload"),n.unobserve(s)}})});e.forEach(o=>{t.observe(o)})}function ge(e,t,o,n,i){const s=t>=e.completion_limit?" - complete":"",r={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let p in r)if(!r[p])return m.error(`Error: Missing element ${p}`),!1;r.modalQuestTitle.innerText=`${e.title}${s}`,r.modalQuestDescription.textContent=e.description,r.modalQuestTips.textContent=e.tips||"No tips available",r.modalQuestPoints.innerText=`${e.points}`,r.modalQuestCategory.innerText=e.category||"No category set";const a=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;r.modalQuestCompletionLimit.innerText=`${a} ${e.frequency}`;const d=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?r.modalQuestBadgeAwarded.innerText=`After ${d}`:r.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":r.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":r.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":r.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":r.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:r.modalQuestVerificationType.innerText="Not specified";break}const c=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:$;r.modalQuestBadgeImage.setAttribute("data-src",c),r.modalQuestBadgeImage.src=$,r.modalQuestBadgeImage.classList.add("lazyload"),r.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",r.modalQuestCompletions.innerText=`Total Completions: ${t}`;const l=i&&new Date(i);return!o&&l&&l>new Date?(r.modalCountdown.innerText=`Next eligible time: ${l.toLocaleString()}`,r.modalCountdown.style.color="red"):(r.modalCountdown.innerText="You are currently eligible to verify!",r.modalCountdown.style.color="green"),vt(n,o,e.verification_type),!0}function fe(e,t,o,n){const i=document.querySelector(".user-quest-data");if(!i){m.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(r=>{let a=document.getElementById(r.id);a||(a=document.createElement("p"),a.id=r.id,i.appendChild(a)),a.innerText=r.value}),yt(document.getElementById("modalCountdown"),o,n)}function yt(e,t,o){if(!o&&t){const n=new Date(t),i=new Date;if(n>i){const s=n-i;e.innerText=`Next eligible time: ${Et(s)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function Et(e){const t=Math.floor(e/1e3%60),o=Math.floor(e/(1e3*60)%60),n=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${n}h ${o}m ${t}s`}function vt(e,t,o,n){const i=document.querySelector(".user-quest-data");if(!i){m.error("Parent element .user-quest-data not found");return}if(i.innerHTML="",t){const s=document.createElement("div");s.id=`verifyQuestForm-${e}`,s.className="verify-quest-form",s.style.display="block";const r=wt(o.trim().toLowerCase(),e);s.innerHTML=r,i.appendChild(s),Ct(e)}}function wt(e,t){let o=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${me}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":o+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":o+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":o+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":o+='<p class="epic-message">Quest is currently paused.</p>';break;default:o+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return o+="</form>",o}function Ct(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){m.error("Form container not found for quest ID:",e);return}const o=t.querySelector("form");if(!o){m.error("Form element missing for quest ID:",e);return}o.addEventListener("submit",function(n){Lt(n,e)})}function O(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function _t(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function It(e,t,o){const n=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!n)return;const i=n.querySelectorAll(".quest-stats-cell");i.length>=2&&(i[0].innerText=t,i[1].innerText=o)}function be(e){O(document.getElementById("twitterLink"),e.twitter_url),O(document.getElementById("facebookLink"),e.fb_url),O(document.getElementById("instagramLink"),e.instagram_url)}let Q=!1;async function Lt(e,t){if(e.preventDefault(),Q)return;Q=!0;const o=e.target.querySelector('[type="submit"]');o&&(o.disabled=!0);try{const n=e.target.querySelector('input[type="file"]'),i=n?n.files[0]:null;if(i&&i.type.startsWith("video/")&&i.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(i&&i.type.startsWith("image/")&&i.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const s=new FormData(e.target);s.append("user_id",ht);const r=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:s,credentials:"same-origin",headers:{"X-CSRFToken":me}});if(!r.ok){if(r.status===403){const d=await r.json();throw d.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(d.message||`Server responded with status ${r.status}`)}throw new Error(`Server responded with status ${r.status}`)}const a=await r.json();if(!a.success)throw new Error(a.message);_t(a.total_points),be(a),It(t,a.new_completion_count,a.total_completion_count),pe(t),e.target.reset()}catch(n){m.error("Submission error:",n),alert(`Error during submission: ${n.message}`)}finally{Q=!1,o&&(o.disabled=!1)}}async function he(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const o=await t.json(),n=document.getElementById("twitterLink"),i=document.getElementById("facebookLink"),s=document.getElementById("instagramLink");if(o&&o.length){const a=o[0],d=document.getElementById("submissionImage"),c=document.getElementById("submissionVideo"),l=document.getElementById("submissionVideoSource"),p=document.getElementById("submissionComment"),g=document.getElementById("submitterProfileLink"),u=document.getElementById("submitterProfileImage"),f=document.getElementById("submitterProfileCaption");a.video_url?(d.hidden=!0,c.hidden=!1,l.src=a.video_url,c.load()):(c.hidden=!0,d.hidden=!1,d.src=a.image_url||$),p.textContent=a.comment||"No comment provided.",g.href=`/profile/${a.user_id}`,u.src=a.user_profile_picture||$,f.textContent=a.user_display_name||a.user_username||`User ${a.user_id}`,be(a)}else[n,i,s].forEach(a=>{a&&(a.style.display="none")});const r=o.slice().reverse().map(a=>({id:a.id,url:a.image_url||(a.video_url?null:$),video_url:a.video_url,alt:"Submission Image",comment:a.comment,user_id:a.user_id,user_display_name:a.user_display_name,user_username:a.user_username,user_profile_picture:a.user_profile_picture,twitter_url:a.twitter_url,fb_url:a.fb_url,instagram_url:a.instagram_url,quest_id:e}));Bt(r)}catch(t){m.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function Z(e){if(!e)return m.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(n=>t.pathname.toLowerCase().endsWith(n))}catch{return m.error(`Invalid URL detected: ${e}`),!1}return!1}function Bt(e){var d;const t=document.getElementById("submissionBoard");if(!t){m.error("submissionBoard element not found");return}t.innerHTML="";const o=((d=document.getElementById("questDetailModal"))==null?void 0:d.getAttribute("data-placeholder-url"))||$,n=Z(o)?o:$,i=c=>c.startsWith("/static/"),s=c=>c.replace(/^\/static\//,""),r=window.innerWidth<=480?70:100,a=r*(window.devicePixelRatio||2);e.forEach(c=>{let l;if(c.video_url)l=document.createElement("video"),l.src=c.video_url,l.preload="metadata",l.muted=!0,l.playsInline=!0,l.style.objectFit="cover";else{l=document.createElement("img");const p=Z(c.url)?c.url:n,g=i(p)?`/resize_image?path=${encodeURIComponent(s(p))}&width=${a}`:p;l.setAttribute("data-src",g),l.classList.add("lazyload"),l.alt=c.alt||"Submission Image"}l.style.width=`${r}px`,l.style.height="auto",l.style.marginRight="10px",c.video_url||(l.onerror=()=>{i(n)?l.src=`/resize_image?path=${encodeURIComponent(s(n))}&width=${a}`:l.src=n}),l.onclick=()=>S(c),t.appendChild(l)}),W()}window.openQuestDetailModal=ue;window.refreshQuestDetailModal=pe;const kt=Object.freeze(Object.defineProperty({__proto__:null,openQuestDetailModal:ue},Symbol.toStringTag,{value:"Module"}));document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;e.closest("form");const t=e.closest(".form-group"),o=document.getElementById("registerModal"),n=(o==null?void 0:o.dataset.checkUrl)||"/auth/check_email",i=document.createElement("div");i.id="existingUserLogin",i.style.display="none",i.innerHTML=`  
    <div class="alert alert-info">This email is already registered. Enter your password to log in.</div>  
    <div class="form-group">  
      <label for="existingUserPassword">Password</label>  
      <input type="password" id="existingUserPassword" class="form-control" autocomplete="current-password">
      <div id="loginError" class="text-danger mt-1" style="display: none;"></div>  
    </div>  
    <div class="form-group">  
      <button type="button" id="loginWithExistingBtn" class="btn btn-primary">Login</button>  
    </div>  
  `,t.insertAdjacentElement("afterend",i),e.addEventListener("blur",()=>{const s=e.value.trim();s&&fetch(`${n}?email=${encodeURIComponent(s)}`).then(r=>r.json()).then(r=>{r.exists?i.style.display="block":i.style.display="none"}).catch(r=>{m.error("Error checking email:",r),i.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const s=e.value.trim(),r=document.getElementById("existingUserPassword").value,a=document.getElementById("loginError"),d=document.getElementById("gameIdField").value,c=document.getElementById("questIdField").value,l=document.getElementById("nextField").value,p=new FormData;p.append("email",s),p.append("password",r),p.append("remember_me","true"),d&&p.append("game_id",d),c&&p.append("quest_id",c),l&&p.append("next",l),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:p,credentials:"same-origin"}).then(g=>g.json().then(u=>({status:g.status,payload:u}))).then(({status:g,payload:u})=>{u.success?window.location.href=u.redirect:(a.textContent=u.error,a.style.display="block")}).catch(g=>{m.error("Login error:",g),a.textContent="An error occurred. Please try again.",a.style.display="block"})}),e.addEventListener("input",()=>{i.style.display="none",document.getElementById("loginError").style.display="none"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),o=document.getElementById("resetSuccess"),n=document.getElementById("resetButton");e.addEventListener("submit",i=>{i.preventDefault(),t.style.display="none",o.style.display="none",D(e).then(({json:s})=>{s.success?(o.textContent=s.message,o.style.display="block",n.disabled=!0,s.redirect&&setTimeout(()=>{window.location.href=s.redirect},1200)):(t.textContent=s.error||"Unable to reset password.",t.style.display="block")}).catch(s=>{m.error("Reset-password AJAX error:",s),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),o=document.getElementById("shoutSubmitBtn"),n=document.getElementById("shoutMessageInput");window.addEventListener("openModal",i=>{i.detail===e&&n&&(n.value="")}),o.addEventListener("click",()=>{const i=n?n.value.trim():"";if(!i){alert("Please enter a message.");return}if(i.length>500){alert("Message must be 500 characters or fewer.");return}const s=new FormData(t);fetch(t.action,{method:"POST",body:s,credentials:"same-origin"}).then(r=>{if(!r.ok)throw new Error(`Server responded ${r.status}`);return r.text()}).then(()=>{x(e),location.reload()}).catch(r=>{m.error("Failed to post shout:",r),alert("Could not post. Please try again.")})})});var ee;(ee=document.getElementById("gameFilter"))==null||ee.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});document.addEventListener("DOMContentLoaded",()=>{Ce()});export{I as a,w as o,se as s};
