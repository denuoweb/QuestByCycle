let L=3e3,N=0;function E(e){var o;const t=document.getElementById(e);if(!t){console.error(`Modal ${e} not found`);return}document.body.appendChild(t),(o=document.querySelector(".container"))==null||o.classList.add("modal-open"),N=window.scrollY||window.pageYOffset,document.body.style.top=`-${N}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",L+=10,t.style.zIndex=L;const n=t.querySelector(".modal-backdrop");n&&(n.style.display="block",n.style.zIndex=L-1),document.body.classList.add("body-no-scroll")}function S(e){var o;const t=document.getElementById(e);if(!t)return;const n=t.querySelector(".modal-backdrop");t.style.display="none",n&&(n.style.display="none"),L=Math.max(1050,L-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(o=document.querySelector(".container"))==null||o.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,N)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function O(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const n=document.getElementById("instagramLink");n&&(n.style.display="none",n.href="#");const o=document.getElementById("modalQuestActions");o&&(o.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(s=>s.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(s=>s.remove()),document.body.classList.remove("body-no-scroll")}function pe(e,t){const n=document.getElementById(e);if(n){if(t.gameId!==void 0){const o=n.querySelector('input[name="game_id"]');o&&(o.value=t.gameId)}if(t.questId!==void 0){const o=n.querySelector('input[name="quest_id"]');o&&(o.value=t.questId)}if(t.next!==void 0){const o=n.querySelector('input[name="next"]');o&&(o.value=t.next)}}}function ge(e){pe("loginModal",e),E("loginModal")}function fe(e={}){const t=document.getElementById("registerForm"),n=t.getAttribute("action").split("?")[0],o=[];e.gameId&&o.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&o.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&o.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&o.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",n+(o.length?`?${o.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),S("loginModal"),E("registerModal")}function Q({gameId:e,questId:t=""}){const n=document.getElementById("loginForm"),o=document.getElementById("loginGameId"),s=document.getElementById("loginQuestId"),i=document.getElementById("loginNext"),r=document.getElementById("loginShowJoinCustom"),a=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;o.value=e,s.value=t,r.value="0",i.value=a;const l=n.getAttribute("action").split("?")[0],m=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:a});n.setAttribute("action",`${l}?${m.toString()}`),E("loginModal")}function he(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",n=document.getElementById("loginNext").value||"",o=document.getElementById("loginShowJoinCustom").value||"",s=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=n,document.getElementById("registerShowJoinCustom").value=o,document.getElementById("registerCustomGameCode").value=s;const i=document.getElementById("registerForm"),r=i.getAttribute("action").split("?")[0],a=new URLSearchParams;e&&a.set("game_id",e),t&&a.set("quest_id",t),n&&a.set("next",n),o&&a.set("show_join_custom",o),s&&a.set("custom_game_code",s),i.setAttribute("action",`${r}?${a.toString()}`),S("loginModal"),E("registerModal")}function be(){var i;const e=((i=document.getElementById("loginEmail"))==null?void 0:i.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const n=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),s=document.getElementById("forgotButton");n&&(n.style.display="none"),o&&(o.style.display="none"),s&&(s.disabled=!1),E("forgotPasswordModal")}function z(e){const t=document.getElementById("resetForm"),n=document.getElementById("resetToken"),o=t.dataset.baseAction;t.setAttribute("action",o+encodeURIComponent(e)),n.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,E("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(z(t),history.replaceState(null,"",window.location.pathname)):console.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",n=e.has("game_id");t&&!n&&E("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(openQuestDetailModal(t),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let n=e.get("game_id")||"";if(!n){const o=e.get("next");if(o)try{const i=new URL(o,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(n=i)}catch(s){console.warn("Failed to parse next URL for gameId:",s)}}Q({gameId:n,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let n=e.get("game_id")||"";if(!n)try{const s=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(n=s)}catch(o){console.warn("Could not parse next URL for gameId:",o)}n&&Q({gameId:n,questId:""})});async function j(e,t){try{const n=await fetch(e,{credentials:"same-origin"});if(!n.ok)throw new Error(`HTTP ${n.status}`);const o=await n.text(),s=document.getElementById(t);s&&s.parentNode.removeChild(s);const i=document.createElement("div");i.innerHTML=o.trim();const r=i.firstElementChild;(!r||r.id!==t)&&console.warn(`Expected first element to be #${t}`,r),document.body.appendChild(r),E(t)}catch(n){console.error(`Error loading ${t} from ${e}:`,n),alert("Failed to load data. Please try again later.")}}async function ye(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),n=await t.json();return{status:t.status,json:n}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const n=t.getAttribute("data-modal-url"),o=t.getAttribute("data-modal-id");if(!n||!o){console.error("data-modal-url or data-modal-id missing",t);return}j(n,o)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=E;window.closeModal=S;window.openLoginModalWithOptions=ge;window.openRegisterModalWithOptions=fe;window.openLoginModalWithGame=Q;window.registerFromLogin=he;window.openForgotPasswordModal=be;window.openResetPasswordModal=z;window.fetchAndShowModal=j;window.submitFormJson=ye;window.resetModalContent=O;let B=null,k="points",_;function U(e){const t=document.getElementById("leaderboardModalContent");if(!t){console.error("Leaderboard modal content element not found. Cannot proceed with displaying leaderboard."),alert("Leaderboard modal content element not found. Please ensure the page has loaded completely and the correct ID is used.");return}fetch("/leaderboard_partial?game_id="+e).then(n=>{if(!n.ok)throw new Error("Failed to fetch leaderboard data");return n.json()}).then(n=>{t.innerHTML="",B=n,k="points",we(t,n,e),Ce(t,n,e),Ee(t),ve(t),K(),E("leaderboardModal")}).catch(n=>{console.error("Failed to load leaderboard:",n),alert("Failed to load leaderboard data. Please try again.")})}function we(e,t,n){if(t.games&&t.games.length>1){const o=document.createElement("form");o.method="get",o.action="#";const s=document.createElement("label");s.for="game_Select",s.textContent="Select Game:",o.appendChild(s);const i=document.createElement("select");i.name="game_id",i.id="game_Select",i.className="form-control",i.onchange=()=>o.submit(),t.games.forEach(r=>{const a=document.createElement("option");a.value=r.id,a.textContent=r.title,a.selected=r.id===n,i.appendChild(a)}),o.appendChild(i),e.appendChild(o)}}function Ee(e){const t=document.createElement("div");t.className="form-check form-switch my-3";const n=document.createElement("input");n.className="form-check-input",n.type="checkbox",n.id="metricToggle";const o=document.createElement("label");o.className="form-check-label",o.htmlFor="metricToggle",o.textContent="Show Completed Quests",n.addEventListener("change",()=>{k=n.checked?"quests":"points",K()}),t.appendChild(n),t.appendChild(o),e.appendChild(t)}function ve(e){const t=document.createElement("table");t.className="table table-striped";const n=document.createElement("thead"),o=document.createElement("tr");["Rank","Player","Points"].forEach((s,i)=>{const r=document.createElement("th");i===2&&(r.id="leaderboardMetricHeader"),r.textContent=s,o.appendChild(r)}),n.appendChild(o),t.appendChild(n),_=document.createElement("tbody"),t.appendChild(_),e.appendChild(t)}function q(e,t,n=!1,o=null){const s=document.createElement("td");if(n){const i=document.createElement("a");i.href="javascript:void(0)",i.onclick=()=>showUserProfileModal(o),i.textContent=t,s.appendChild(i)}else s.textContent=t;e.appendChild(s)}function Ce(e,t,n){if(t.total_game_points&&t.game_goal){const o=document.createElement("div");o.className="completion-meter-container";const s=document.createElement("div");s.className="inspirational-text",s.textContent="It takes a village to enact change…",o.appendChild(s);const i=t.game_goal-t.total_game_points,r=Math.min(t.total_game_points/t.game_goal*100,100),a=document.createElement("div");a.className="meter-label",a.textContent=`Carbon Reduction Points: ${t.total_game_points} / ${t.game_goal} (Remaining: ${i})`,o.appendChild(a);const l=document.createElement("div");l.className="completion-meter",l.id="completionMeter",l.addEventListener("click",()=>showAllSubmissionsModal(n));const m=document.createElement("div");m.className="click-text",m.textContent="Click to view all game submissions!",l.appendChild(m);const d=document.createElement("div");d.className="meter-bar",d.id="meterBar",d.style.height="0%",d.style.opacity="1",d.dataset.label=`${r.toFixed(1)}% Reduced`,l.appendChild(d),o.appendChild(l),e.appendChild(o),setTimeout(()=>{d.style.height=`${r}%`,d.style.opacity=`${1-r/100}`,Ie(r,n)},100)}}function Ie(e,t){const n=document.getElementById("completionMeter"),o=9-Math.min(Math.floor(e/10),9);n.style.backgroundImage=`url('/static/images/leaderboard/smoggy_skyline_${t}_${o}.png')`}function K(){if(!B||!_)return;if(!B.top_users||B.top_users.length===0){_.innerHTML="";const n=document.createElement("tr"),o=document.createElement("td");o.colSpan=3,o.textContent="Join a game to see the leaderboard!",n.appendChild(o),_.appendChild(n);return}_.innerHTML="";const e=document.getElementById("leaderboardMetricHeader");e&&(e.textContent=k==="quests"?"Quests Completed":"Points");const t=[...B.top_users];t.sort((n,o)=>k==="quests"?o.completed_quests-n.completed_quests:o.total_points-n.total_points),t.forEach((n,o)=>{const s=document.createElement("tr");q(s,o+1);const i=n.display_name||n.username;q(s,i,!0,n.user_id);const r=k==="quests"?n.completed_quests:n.total_points;q(s,r),_.appendChild(s)})}window.showLeaderboardModal=U;function _e(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(r=>{r.addEventListener("updatefound",()=>{const a=r.installing;a.addEventListener("statechange",()=>{a.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&r.sync.register("sync-notifications").catch(a=>console.error("Sync registration failed:",a)),r.periodicSync&&r.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(a=>console.error("Periodic sync registration failed:",a)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in r&&r.sync.register("sync-requests").catch(a=>{console.error("Background sync registration failed:",a)})}).catch(r=>console.error("Service Worker registration failed:",r)),navigator.serviceWorker.addEventListener("message",r=>{r.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),n=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let o=null;const s=document.getElementById("leaderboardNavbarLink");if(t&&(n?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",r=>{r.preventDefault(),o=r,e.hidden=!1,e.addEventListener("click",()=>{o&&(o.prompt(),o.userChoice.then(()=>{o=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!n&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(r=>{r.length&&(e.hidden=!0)})),s&&s.addEventListener("click",r=>{r.preventDefault();const a=s.getAttribute("data-game-id")||0;U(a)}),"windowControlsOverlay"in navigator){let r=function(){const a=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=a.height+"px"};var i=r;navigator.windowControlsOverlay.addEventListener("geometrychange",r),r()}document.querySelectorAll(".modal").forEach(r=>{r.parentNode!==document.body&&document.body.appendChild(r)})}function Be(e){const t=e.value;t==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=t}window.handleGameSelection=Be;function Le(){const e=document.querySelector('meta[name="csrf-token"]');return e?e.getAttribute("content"):""}async function ke(e,t={}){const n={credentials:"same-origin",...t},o=await fetch(e,n),s=await o.json().catch(()=>({}));return{status:o.status,json:s}}function $e(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}typeof window<"u"&&(window.getCSRFToken=Le,window.fetchJson=ke,window.escapeHTML=$e);document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});const Z=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=Z;let T=0,ee=null,H=!1,V=!1;function Se(e){T=0,ee=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),E("allSubmissionsModal"),te()}function te(){const e=T*10;fetch(`/quests/quest/all_submissions?game_id=${ee}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);H=t.is_admin,V=t.has_more,xe(t.submissions,H,T>0),Te(V),T+=1}).catch(t=>{console.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function xe(e,t,n=!1){const o=document.getElementById("allSubmissionsContainer");if(!o){console.error("allSubmissionsContainer element not found.");return}n||(o.innerHTML=""),e.forEach(s=>{const i=document.createElement("div");i.className="submission-card";const r=document.createElement("img");r.src=s.image_url||Z,r.alt="Quest Submission",r.className="submission-image";const a=document.createElement("div");a.className="submission-info";const l=document.createElement("p");l.textContent=`User: ${s.user_display_name||s.user_username}`,l.className="submission-user-details";const m=document.createElement("p"),d=new Date(s.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});m.textContent=`Submitted on: ${d}`,m.className="submission-timestamp";const c=document.createElement("p");c.textContent=`Comment: ${s.comment}`,c.className="submission-comment";const p=document.createElement("p");p.textContent=`Twitter: ${s.twitter_url||"N/A"}`,p.className="submission-comment";const u=document.createElement("p");u.textContent=`Facebook: ${s.fb_url||"N/A"}`,u.className="submission-comment";const g=document.createElement("p");if(g.textContent=`Instagram: ${s.instagram_url||"N/A"}`,g.className="submission-comment",a.appendChild(l),a.appendChild(m),a.appendChild(c),a.appendChild(p),a.appendChild(u),a.appendChild(g),t){const f=document.createElement("button");f.textContent="Delete",f.className="button delete-button",f.addEventListener("click",function(y){y.stopPropagation(),Me(s.id)}),i.appendChild(f)}i.appendChild(r),i.appendChild(a),i.addEventListener("click",function(){showSubmissionDetail({url:s.image_url||s.video_url,video_url:s.video_url,comment:s.comment,user_id:s.user_id,user_display_name:s.user_display_name||s.user_username,user_profile_picture:s.user_profile_picture,twitter_url:s.twitter_url,fb_url:s.fb_url,instagram_url:s.instagram_url,verification_type:"image"}),E("submissionDetailModal")}),o.appendChild(i)})}function Me(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{console.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Te(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{te()})});window.showAllSubmissionsModal=Se;document.addEventListener("DOMContentLoaded",()=>{Pe(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>De(e.dataset.toggleForm))})});function Pe(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(n=>{const o=document.createElement("tr");o.dataset.badgeId=n.id;const s=n.image?`<img src="${n.image}" height="50" alt="Badge Image">`:"No Image";o.innerHTML=`
                    <td class="badge-image-manage">${s}</td>
                    <td class="badge-name">${n.name}</td>
                    <td class="badge-description">${n.description}</td>
                    <td class="badge-category">${n.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${n.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${n.id}">Delete</button>
                    </td>
                `,o.querySelector(".edit-badge").addEventListener("click",()=>Ae(n.id)),o.querySelector(".delete-badge").addEventListener("click",()=>Re(n.id)),e.appendChild(o)})}).catch(t=>console.error("Failed to load badges:",t))}function De(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function qe(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const n=t.categories||[],o=document.createElement("select");o.className="form-control badge-category-select";const s=document.createElement("option");return s.value="none",s.textContent="None",(!e||e==="none")&&(s.selected=!0),o.appendChild(s),n.forEach(i=>{const r=document.createElement("option");r.value=i,r.textContent=i,i===e&&(r.selected=!0),o.appendChild(r)}),o}).catch(t=>{console.error("Error fetching categories:",t);const n=document.createElement("select");n.className="form-control badge-category-select";const o=document.createElement("option");return o.value="none",o.textContent="None",o.selected=!0,n.appendChild(o),n})}function Ae(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){console.error(`Badge row with ID ${e} not found.`);return}const n=t.querySelector(".badge-name"),o=t.querySelector(".badge-description"),s=t.querySelector(".badge-category"),i=t.querySelector(".badge-image-manage");n.textContent="";const r=document.createElement("input");r.type="text",r.value=n.innerText.trim(),r.className="form-control badge-name-input",n.appendChild(r),o.textContent="";const a=document.createElement("textarea");if(a.className="form-control badge-description-textarea",a.value=o.innerText.trim(),o.appendChild(a),i){i.textContent="";const l=document.createElement("input");l.type="file",l.className="form-control-file badge-image-input",i.appendChild(l)}else console.error("Could not find badge-image-manage cell");qe(s.innerText.trim()).then(l=>{s.textContent="",s.appendChild(l);const m=t.querySelector("button.edit-badge");m.innerText="Save",m.onclick=()=>Fe(e)})}function Fe(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),n=new FormData;n.append("name",t.querySelector(".badge-name-input").value.trim()),n.append("description",t.querySelector(".badge-description-textarea").value.trim()),n.append("category",t.querySelector(".badge-category-select").value);const o=t.querySelector(".badge-image-input");o&&o.files.length>0&&n.append("image",o.files[0]);const s=document.querySelector("[name=csrf_token]").value;fetch(`/badges/update/${e}`,{method:"POST",body:n,headers:{"X-CSRFToken":s}}).then(i=>i.json()).then(i=>{i.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+i.message)}).catch(i=>console.error("Error updating badge:",i))}function Re(e){confirm("Are you sure you want to delete this badge?")&&fetch(`/badges/delete/${e}`,{method:"DELETE",headers:{"X-CSRFToken":getCSRFToken()}}).then(t=>t.json()).then(t=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{console.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}window.allBadges=window.allBadges||[];const P=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=P;function Ne(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return P}async function Oe(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,o=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,s=await fetch(o,{credentials:"same-origin"});if(!s.ok)throw new Error("Error fetching badges");const i=await s.json();return window.allBadges=i.badges,window.allBadges}async function ne(){if(!window.allBadges||window.allBadges.length===0)try{await Oe()}catch(e){console.error("Error loading badges:",e),window.allBadges=[]}}function Qe(e){return e?`<ul>${e.split(",").map(n=>`<li>${escapeHTML(n.trim())}</li>`).join("")}</ul>`:""}function je(e){return window.allBadges.find(t=>t.id==e)}function Ue(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||P}}async function Ge(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const n=await t.json();return n.userCompletion?n.userCompletion.completions:0}function He(e,t,n,o,s,i,r){const a=document.getElementById("badgeModalTitle"),l=document.getElementById("badgeModalImage"),m=document.getElementById("badgeModalText");if(!a||!l||!m){console.error("Badge modal elements missing");return}a.textContent=e.name,l.src=Ne(e.image)||P;let d="";if(i){const p=`<a href="#" onclick="openQuestDetailModal('${i}')">${escapeHTML(r)}</a>`;d=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${n}</p><p>${s?"You have earned this badge.":"Complete "+p+" to earn this badge."}</p>`}else d=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${n}</p>${o}<p>${s?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const c=e.description||"No description available.";s?(l.style.filter="none",l.oncontextmenu=null,m.innerHTML=`<p><strong>Awarded!</strong></p>${d}<p>${escapeHTML(c)}</p>`):(l.style.filter="grayscale(100%) opacity(0.5)",l.oncontextmenu=p=>(p.preventDefault(),!1),m.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${d}<p>${escapeHTML(c)}</p>`)}async function Ve(e){const t=e.getAttribute("data-badge-id"),n=e.getAttribute("data-task-name"),o=e.getAttribute("data-task-id"),s=e.getAttribute("data-badge-awarded-count"),i=e.getAttribute("data-user-completions"),r=parseInt(s,10),a=parseInt(i,10)||0,l=Qe(n),m=o?o.split(",").map(g=>g.trim()).filter(Boolean):[],d=m.length===1?m[0]:null;await ne();const c=je(t)||Ue(e);let p=a;if(d)try{p=await Ge(d)}catch(g){console.error("Error fetching user completions:",g)}const u=p>=r;He(c,r,p,l,u,d,n),E("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{ne()});window.openBadgeModal=Ve;document.addEventListener("DOMContentLoaded",()=>{});let A;function We(e){const t=document.getElementById("deleteGameModal"),n=document.getElementById("deleteGameForm"),o=document.getElementById("deleteGameConfirmInput"),s=document.getElementById("deleteGameCountdown"),i=document.getElementById("deleteGameTimer"),r=document.getElementById("deleteGameConfirmBtn");if(!t||!n||!o||!s||!i||!r){console.warn("Delete game modal elements missing");return}t.dataset.gameId=e,n.action=`/games/delete_game/${e}`,o.value="",r.disabled=!0,s.hidden=!0,i.textContent="5",E("deleteGameModal")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),n=document.getElementById("deleteGameCountdown"),o=document.getElementById("deleteGameTimer"),s=document.getElementById("deleteGameUndo"),i=document.getElementById("deleteGameForm");!e||!t||!n||!o||!s||!i||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let r=5;n.hidden=!1,o.textContent=r.toString(),A=setInterval(()=>{r-=1,o.textContent=r.toString(),r<=0&&(clearInterval(A),i.submit())},1e3)}),s.addEventListener("click",()=>{clearInterval(A),n.hidden=!0,o.textContent="5",e.value="",t.disabled=!0}))});window.openDeleteGameModal=We;document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[n,o]=t[0],s=document.getElementById("flash-overlay");s.querySelector(".flash-content").textContent=o,s.querySelector(".flash-modal").classList.add(`flash-${n}`),requestAnimationFrame(()=>{s.classList.add("visible")});function i(){s.classList.remove("visible"),e.removeAttribute("data-messages")}s.querySelector(".flash-close").addEventListener("click",i),s.querySelector(".flash-ok-btn").addEventListener("click",i)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),o=document.getElementById("forgotButton"),s=document.getElementById("forgotEmail"),i=document.getElementById("forgotEmailDisplay"),r=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{r.style.display==="block"&&(i.textContent=s.value)}).observe(r,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",l=>{l.preventDefault(),t.style.display="none",n.style.display="none",window.submitFormJson(e).then(({json:m})=>{m.success?(n.textContent=m.message,n.style.display="block",o.disabled=!0):(t.textContent=m.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function Je(e){const t="/games/game-info/"+e+"?modal=1";j(t,"gameInfoModal")}window.showGameInfoModal=Je;$(document).ready(function(){$("#generateAIQuestModal").modal({show:!1})});document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("button[data-game-id]").forEach(n=>{n.addEventListener("click",function(){t(this)})});function t(n){const o=document.getElementById("questCreationForm"),s=n.getAttribute("data-game-id");o?o.addEventListener("submit",function(i){i.preventDefault();const r=document.getElementById("questDescription").value,a=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":a},body:JSON.stringify({description:r,game_id:s})}).then(l=>l.ok?l.json():l.json().then(m=>Promise.reject({status:l.status,statusText:l.statusText,errorMessage:m.error}))).then(l=>{if(l.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=l.generated_quest_html,$("#generateAIQuestModal").modal("show");const m=document.getElementById("generateAIQuestModalForm");m&&m.setAttribute("data-game-id",s),m&&m.addEventListener("submit",function(g){g.preventDefault();const f=new FormData(m),y=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":y},body:f}).then(b=>b.json()).then(b=>{window.location.href="/",console.log(b)}).catch(b=>{console.error("Error:",b)})});const d=document.getElementById("generateAIImage"),c=document.getElementById("badge_description"),p=document.getElementById("aiBadgeImage"),u=document.getElementById("aiBadgeFilename");if(!d||!c||!p||!u){console.error("One or more elements not found in the DOM");return}d.addEventListener("click",function(){console.log("Generate AI Image button clicked");const g=c.value;if(console.log("Badge Description:",g),!g){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:g})}).then(f=>f.json()).then(f=>{if(console.log("Response data:",f),f.error)alert("Error generating badge image: "+f.error);else{const y=`${f.filename}`,b=`static/images/badge_images/${f.filename}`;p.src=b,p.style.display="block",u.value=y}}).catch(f=>{console.error("Fetch error:",f),alert("Error: "+f)})})}}).catch(l=>{alert("Error generating quest: "+(l.errorMessage||l.statusText))})}):console.error("Form '#questCreationForm' not found.")}});function oe(){console.debug("Showing loading modal"),document.getElementById("loadingModal").style.display="flex"}function se(){console.debug("Hiding loading modal"),document.getElementById("loadingModal").style.display="none"}const Xe=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){console.error("Error refreshing CSRF token:",e)}};setInterval(Xe,9e5);const Ye=async e=>{try{const n=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),o=n.total_game_points,s=n.game_goal,i=s-o,r=Math.min(o/s*100,100),a=document.getElementById("meterBar"),l=document.querySelector(".meter-label");a&&(a.style.height=`${r}%`),document.documentElement.style.setProperty("--meter-fill-height",`${r}%`),l&&(l.innerText=`Remaining Reduction: ${i} / ${s}`)}catch(t){console.error("Failed to update meter:",t)}};function ze(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const n=e.getAttribute("data-game-id");fetch(`/games/get_game/${n}`,{credentials:"same-origin"}).then(o=>{if(!o.ok)throw console.error(`Failed fetching game name; URL returned status ${o.status} (${o.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${o.status}: ${o.statusText}`);return o.json()}).then(o=>{t.textContent=o.name||"Game Not Found"}).catch(o=>{console.error("Error retrieving game name:",o),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",()=>{const a=e.getAttribute("data-game-id");U(a),Ye(a)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&showAllSubmissionsModal(currentUserId)});const n=document.getElementById("contactForm");n&&n.addEventListener("submit",async a=>{a.preventDefault();const l=new FormData(n);oe();try{const m=await fetch(n.action,{method:"POST",body:l,headers:{"X-Requested-With":"XMLHttpRequest"}}),d=await m.json();m.ok&&d.success?(alert("Your message has been sent successfully."),S("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{se()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(a=>{a.innerHTML=a.innerHTML.replace(/<\/?p[^>]*>/g,"")});const s=document.getElementById("questSearchInput"),i=document.getElementById("questCategoryDropdown");s&&s.addEventListener("input",W),i&&i.addEventListener("change",W);const r=document.querySelector("#whats-happening-step");if(r){const a=r.querySelectorAll(".wh-tab-button"),l=r.querySelectorAll(".wh-tab-content");a.forEach(m=>{m.addEventListener("click",()=>{const d=m.getAttribute("data-wh-tab");a.forEach(c=>c.classList.remove("active")),l.forEach(c=>c.classList.remove("active")),m.classList.add("active"),r.querySelector(`#wh-${d}-tab`).classList.add("active")})})}ze()});function W(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(o=>{const s=o.querySelector(".quest-title").textContent.toLowerCase(),i=o.dataset.category||"Not Set",r=s.includes(e),a=t==="all"||i===t;o.style.display=r&&a?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(s){s.addEventListener("click",function(){const i=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=i,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",n=e.dataset.joinDemoUrl;let o=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{o=!0}),e.addEventListener("hidden.bs.modal",function(){!o&&!t&&(window.location.href=n)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const n=document.getElementById("passwordError"),o=document.getElementById("forgotContainer"),s=t.dataset.checkUrl;e.addEventListener("submit",m=>{m.preventDefault(),n.style.display="none",o.innerHTML="",window.submitFormJson(e).then(({json:d})=>{if(d.success)window.location.href=d.redirect;else if(n.textContent=d.error,n.style.display="block",d.show_forgot){const c=document.createElement("a");c.href="javascript:void(0)",c.textContent="Forgot password?",c.className="d-block mt-1",c.onclick=window.openForgotPasswordModal,o.appendChild(c)}}).catch(()=>e.submit())});const i=document.getElementById("loginEmail"),r=document.getElementById("loginButton"),a=document.getElementById("emailError");function l(){r.disabled=!0,a.style.display="none",a.textContent=""}l(),i.addEventListener("blur",()=>{const m=i.value.trim();if(!m)return l();fetch(`${s}?email=${encodeURIComponent(m)}`).then(d=>d.json()).then(d=>{d.exists?r.disabled=!1:(r.disabled=!0,a.textContent="This email is not registered. Please register first.",a.style.display="block")}).catch(()=>r.disabled=!1)}),i.addEventListener("input",l)});let J=null,Ke=[];document.addEventListener("DOMContentLoaded",async function(){const e=document.getElementById("game_Data");e&&(J=e.dataset.gameId,await Ze(),et(J))});async function Ze(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");Ke=(await e.json()).badges||[]}catch(e){console.error("Error fetching badges:",e)}}function et(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const n=document.getElementById("questsBody");n.innerHTML="",t.quests.forEach(o=>{const s=document.createElement("div");s.className="card",s.id=`quest-${o.id}`;const i=o.verification_type.toLowerCase(),r=o.badge_name||"None",a=o.frequency||"Not Set",l=o.category||"Not Set",m=o.badge_awarded||"Not Set";s.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${o.title}</h5>
                        <div class="card-text editable" data-name="description">${o.description}</div>
                        <div class="card-text editable" data-name="tips">${o.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${o.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${o.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${o.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${o.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${o.verification_type}">${i}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${r}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${m}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${o.frequency}">${a}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${l}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" onclick="editQuest(${o.id})">Edit</button>
                            <button class="btn btn-danger" onclick="deleteQuest(${o.id})">Delete</button>
                            <button class="btn btn-info" onclick="window.location.href = '/quests/generate_qr/${o.id}'">Generate QR Code</button>
                        </div>
                    </div>
                `,n.appendChild(s)})}).catch(t=>console.error("Failed to load quests:",t))}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),n=e.querySelector("#notifLoading"),o=e.querySelector("li.dropdown-footer"),s=o.querySelector("#loadMoreBtn"),i=e.dataset.url;let r=0,a=1;const l=parseInt(e.dataset.perPage,10)||10,m={follow:({from_user_name:u,from_user_id:g})=>({text:`Now following ${u}`,onclick:`showUserProfileModal(${g}); return false;`}),followed_by:({follower_name:u,follower_id:g})=>({text:`${u} is now following you`,onclick:`showUserProfileModal(${g}); return false;`}),submission:({actor_name:u,quest_name:g,submission_id:f})=>({text:`${u} submitted a new “${g}” quest`,onclick:`fetch('/quests/submissions/${f}').then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),profile_message:({from_user_name:u,content:g,profile_user_id:f})=>({text:`${u} says “${g}”`,onclick:`showUserProfileModal(${f}); return false;`}),profile_reply:({from_user_name:u,content:g,profile_user_id:f})=>({text:`${u} replied “${g}”`,onclick:`showUserProfileModal(${f}); return false;`}),submission_like:({liker_name:u,submission_id:g})=>({text:`${u} liked your submission`,onclick:`fetch('/quests/submissions/${g}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),submission_reply:({actor_name:u,content:g,submission_id:f})=>({text:`${u} replied “${g}”`,onclick:`fetch('/quests/submissions/${f}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`})};function d(u){const g=m[u.type];let f,y;if(g&&u.payload)try{({text:f,onclick:y}=g(u.payload))}catch(M){console.error(`Error in handler for ${u.type}:`,M)}return(!f||!y)&&(f=u.payload.summary||JSON.stringify(u.payload),y="location.href='/notifications/';"),`
      <a href="#" class="dropdown-item ${u.is_read?"":"fw-bold"}" onclick="${y}">
        ${f}
        <small class="text-muted d-block text-center">
          ${new Date(u.when).toLocaleString()}
        </small>
      </a>
    `}function c(u){u&&u.parentNode===e&&e.removeChild(u)}async function p(u){u===1&&(Array.from(e.children).forEach(b=>{b!==n&&b!==o&&e.removeChild(b)}),r=0),c(n),c(o),e.appendChild(n),e.appendChild(o),n.style.display="",s.disabled=!0;let g;try{g=await fetch(`${i}?page=${u}&per_page=${l}`,{credentials:"include"})}catch(b){n.textContent="Network error.",console.error(b);return}if(!g.ok){n.textContent="Error loading.",console.error("Status:",g.status,g.statusText);return}const f=await g.json();r=f.page,a=f.total_pages,c(n),c(o);const y=t.querySelector(".badge");y&&y.remove(),f.items.forEach(b=>{e.insertAdjacentHTML("beforeend",d(b))}),e.appendChild(n),e.appendChild(o),n.style.display="none",s.disabled=r>=a}t.addEventListener("show.bs.dropdown",()=>{r===0&&p(1)}),s.addEventListener("click",u=>{u.preventDefault(),u.stopPropagation(),r<a&&p(r+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let n;try{({public_key:n}=await t.json())}catch(i){console.error("Push setup failed",i);return}if(!n||await e.pushManager.getSubscription())return;const s=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:tt(n)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:s})})}catch(t){console.error("Push setup failed",t)}})});function tt(e){const t="=".repeat((4-e.length%4)%4),n=(e+t).replace(/-/g,"+").replace(/_/g,"/"),o=atob(n),s=new Uint8Array(o.length);for(let i=0;i<o.length;++i)s[i]=o.charCodeAt(i);return s}function ie(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const nt=Number(ie("current-user-id")||0),ae=getCSRFToken(),I=window.PLACEHOLDER_IMAGE||ie("placeholder-image");window.PLACEHOLDER_IMAGE=I;function ot(e){O(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:n,userCompletion:o,canVerify:s,nextEligibleTime:i}=t;if(!le(n,o.completions,s,e,i)){console.error("populateQuestDetails – required element missing");return}de(n,o.completions,i,s),E("questDetailModal"),G(),me(e)}).catch(t=>{console.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function re(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:n,userCompletion:o,canVerify:s,nextEligibleTime:i}=t;if(!le(n,o.completions,s,e,i)){console.error("populateQuestDetails – required element missing");return}de(n,o.completions,i,s),G(),me(e)}).catch(t=>{console.error("Failed to refresh quest detail modal:",t)})}function G(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((n,o)=>{n.forEach(s=>{if(s.isIntersecting){const i=s.target;i.src=i.getAttribute("data-src"),i.classList.remove("lazyload"),o.unobserve(i)}})});e.forEach(n=>{t.observe(n)})}function le(e,t,n,o,s){const i=t>=e.completion_limit?" - complete":"",r={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let c in r)if(!r[c])return console.error(`Error: Missing element ${c}`),!1;r.modalQuestTitle.innerText=`${e.title}${i}`,r.modalQuestDescription.textContent=e.description,r.modalQuestTips.textContent=e.tips||"No tips available",r.modalQuestPoints.innerText=`${e.points}`,r.modalQuestCategory.innerText=e.category||"No category set";const a=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;r.modalQuestCompletionLimit.innerText=`${a} ${e.frequency}`;const l=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?r.modalQuestBadgeAwarded.innerText=`After ${l}`:r.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":r.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":r.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":r.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":r.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:r.modalQuestVerificationType.innerText="Not specified";break}const m=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:I;r.modalQuestBadgeImage.setAttribute("data-src",m),r.modalQuestBadgeImage.src=I,r.modalQuestBadgeImage.classList.add("lazyload"),r.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",r.modalQuestCompletions.innerText=`Total Completions: ${t}`;const d=s&&new Date(s);return!n&&d&&d>new Date?(r.modalCountdown.innerText=`Next eligible time: ${d.toLocaleString()}`,r.modalCountdown.style.color="red"):(r.modalCountdown.innerText="You are currently eligible to verify!",r.modalCountdown.style.color="green"),at(o,n,e.verification_type),!0}function de(e,t,n,o){const s=document.querySelector(".user-quest-data");if(!s){console.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(r=>{let a=document.getElementById(r.id);a||(a=document.createElement("p"),a.id=r.id,s.appendChild(a)),a.innerText=r.value}),st(document.getElementById("modalCountdown"),n,o)}function st(e,t,n){if(!n&&t){const o=new Date(t),s=new Date;if(o>s){const i=o-s;e.innerText=`Next eligible time: ${it(i)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function it(e){const t=Math.floor(e/1e3%60),n=Math.floor(e/(1e3*60)%60),o=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${o}h ${n}m ${t}s`}function at(e,t,n,o){const s=document.querySelector(".user-quest-data");if(!s){console.error("Parent element .user-quest-data not found");return}if(s.innerHTML="",t){const i=document.createElement("div");i.id=`verifyQuestForm-${e}`,i.className="verify-quest-form",i.style.display="block";const r=rt(n.trim().toLowerCase(),e);i.innerHTML=r,s.appendChild(i),lt(e)}}function rt(e,t){let n=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${ae}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":n+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":n+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":n+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":n+='<p class="epic-message">Quest is currently paused.</p>';break;default:n+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return n+="</form>",n}function lt(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){console.error("Form container not found for quest ID:",e);return}const n=t.querySelector("form");if(!n){console.error("Form element missing for quest ID:",e);return}n.addEventListener("submit",function(o){mt(o,e)})}function F(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function dt(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function ct(e,t,n){const o=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!o)return;const s=o.querySelectorAll(".quest-stats-cell");s.length>=2&&(s[0].innerText=t,s[1].innerText=n)}function ce(e){F(document.getElementById("twitterLink"),e.twitter_url),F(document.getElementById("facebookLink"),e.fb_url),F(document.getElementById("instagramLink"),e.instagram_url)}let R=!1;async function mt(e,t){if(e.preventDefault(),R)return;R=!0;const n=e.target.querySelector('[type="submit"]');n&&(n.disabled=!0);try{const o=e.target.querySelector('input[type="file"]'),s=o?o.files[0]:null;if(s&&s.type.startsWith("video/")&&s.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(s&&s.type.startsWith("image/")&&s.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const i=new FormData(e.target);i.append("user_id",nt);const r=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:i,credentials:"same-origin",headers:{"X-CSRFToken":ae}});if(!r.ok){if(r.status===403){const l=await r.json();throw l.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(l.message||`Server responded with status ${r.status}`)}throw new Error(`Server responded with status ${r.status}`)}const a=await r.json();if(!a.success)throw new Error(a.message);dt(a.total_points),ce(a),ct(t,a.new_completion_count,a.total_completion_count),re(t),e.target.reset()}catch(o){console.error("Submission error:",o),alert(`Error during submission: ${o.message}`)}finally{R=!1,n&&(n.disabled=!1)}}async function me(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const n=await t.json(),o=document.getElementById("twitterLink"),s=document.getElementById("facebookLink"),i=document.getElementById("instagramLink");if(n&&n.length){const a=n[0],l=document.getElementById("submissionImage"),m=document.getElementById("submissionVideo"),d=document.getElementById("submissionVideoSource"),c=document.getElementById("submissionComment"),p=document.getElementById("submitterProfileLink"),u=document.getElementById("submitterProfileImage"),g=document.getElementById("submitterProfileCaption");a.video_url?(l.hidden=!0,m.hidden=!1,d.src=a.video_url,m.load()):(m.hidden=!0,l.hidden=!1,l.src=a.image_url||I),c.textContent=a.comment||"No comment provided.",p.href=`/profile/${a.user_id}`,u.src=a.user_profile_picture||I,g.textContent=a.user_display_name||a.user_username||`User ${a.user_id}`,ce(a)}else[o,s,i].forEach(a=>{a&&(a.style.display="none")});const r=n.slice().reverse().map(a=>({id:a.id,url:a.image_url||(a.video_url?null:I),video_url:a.video_url,alt:"Submission Image",comment:a.comment,user_id:a.user_id,user_display_name:a.user_display_name,user_username:a.user_username,user_profile_picture:a.user_profile_picture,twitter_url:a.twitter_url,fb_url:a.fb_url,instagram_url:a.instagram_url,quest_id:e}));ut(r)}catch(t){console.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function X(e){if(!e)return console.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(o=>t.pathname.toLowerCase().endsWith(o))}catch{return console.error(`Invalid URL detected: ${e}`),!1}return!1}function ut(e){var l;const t=document.getElementById("submissionBoard");if(!t){console.error("submissionBoard element not found");return}t.innerHTML="";const n=((l=document.getElementById("questDetailModal"))==null?void 0:l.getAttribute("data-placeholder-url"))||I,o=X(n)?n:I,s=m=>m.startsWith("/static/"),i=m=>m.replace(/^\/static\//,""),r=window.innerWidth<=480?70:100,a=r*(window.devicePixelRatio||2);e.forEach(m=>{let d;if(m.video_url)d=document.createElement("video"),d.src=m.video_url,d.preload="metadata",d.muted=!0,d.playsInline=!0,d.style.objectFit="cover";else{d=document.createElement("img");const c=X(m.url)?m.url:o,p=s(c)?`/resize_image?path=${encodeURIComponent(i(c))}&width=${a}`:c;d.setAttribute("data-src",p),d.classList.add("lazyload"),d.alt=m.alt||"Submission Image"}d.style.width=`${r}px`,d.style.height="auto",d.style.marginRight="10px",m.video_url||(d.onerror=()=>{s(o)?d.src=`/resize_image?path=${encodeURIComponent(i(o))}&width=${a}`:d.src=o}),d.onclick=()=>showSubmissionDetail(m),t.appendChild(d)}),G()}window.openQuestDetailModal=ot;window.refreshQuestDetailModal=re;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;e.closest("form");const t=e.closest(".form-group"),n=document.getElementById("registerModal"),o=(n==null?void 0:n.dataset.checkUrl)||"/auth/check_email",s=document.createElement("div");s.id="existingUserLogin",s.style.display="none",s.innerHTML=`  
    <div class="alert alert-info">This email is already registered. Enter your password to log in.</div>  
    <div class="form-group">  
      <label for="existingUserPassword">Password</label>  
      <input type="password" id="existingUserPassword" class="form-control" autocomplete="current-password">
      <div id="loginError" class="text-danger mt-1" style="display: none;"></div>  
    </div>  
    <div class="form-group">  
      <button type="button" id="loginWithExistingBtn" class="btn btn-primary">Login</button>  
    </div>  
  `,t.insertAdjacentElement("afterend",s),e.addEventListener("blur",()=>{const i=e.value.trim();i&&fetch(`${o}?email=${encodeURIComponent(i)}`).then(r=>r.json()).then(r=>{r.exists?s.style.display="block":s.style.display="none"}).catch(r=>{console.error("Error checking email:",r),s.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const i=e.value.trim(),r=document.getElementById("existingUserPassword").value,a=document.getElementById("loginError"),l=document.getElementById("gameIdField").value,m=document.getElementById("questIdField").value,d=document.getElementById("nextField").value,c=new FormData;c.append("email",i),c.append("password",r),c.append("remember_me","true"),l&&c.append("game_id",l),m&&c.append("quest_id",m),d&&c.append("next",d),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:c,credentials:"same-origin"}).then(p=>p.json().then(u=>({status:p.status,payload:u}))).then(({status:p,payload:u})=>{u.success?window.location.href=u.redirect:(a.textContent=u.error,a.style.display="block")}).catch(p=>{console.error("Login error:",p),a.textContent="An error occurred. Please try again.",a.style.display="block"})}),e.addEventListener("input",()=>{s.style.display="none",document.getElementById("loginError").style.display="none"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),n=document.getElementById("resetSuccess"),o=document.getElementById("resetButton");e.addEventListener("submit",s=>{s.preventDefault(),t.style.display="none",n.style.display="none",window.submitFormJson(e).then(({json:i})=>{i.success?(n.textContent=i.message,n.style.display="block",o.disabled=!0,i.redirect&&setTimeout(()=>{window.location.href=i.redirect},1200)):(t.textContent=i.error||"Unable to reset password.",t.style.display="block")}).catch(i=>{console.error("Reset-password AJAX error:",i),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),n=document.getElementById("shoutSubmitBtn"),o=document.getElementById("shoutMessageInput");window.addEventListener("openModal",s=>{s.detail===e&&o&&(o.value="")}),n.addEventListener("click",()=>{const s=o?o.value.trim():"";if(!s){alert("Please enter a message.");return}if(s.length>500){alert("Message must be 500 characters or fewer.");return}const i=new FormData(t);fetch(t.action,{method:"POST",body:i,credentials:"same-origin"}).then(r=>{if(!r.ok)throw new Error(`Server responded ${r.status}`);return r.text()}).then(()=>{closeModal(e),location.reload()}).catch(r=>{console.error("Failed to post shout:",r),alert("Could not post. Please try again.")})})});document.addEventListener("DOMContentLoaded",()=>{const e=a=>document.querySelector(a);if(!e("#submissionDetailModal"))return;const n=()=>getCSRFToken(),o=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.showSubmissionDetail=function(a){const l=e("#submissionDetailModal");l.dataset.submissionId=a.id,l.dataset.questId=a.quest_id||"";const m=Number(l.dataset.currentUserId),d=Number(a.user_id)===m,c=l.dataset.isAdmin==="True"||l.dataset.isAdmin==="true",p=e("#editPhotoBtn"),u=e("#photoEditControls"),g=e("#submissionPhotoInput"),f=e("#savePhotoBtn"),y=e("#cancelPhotoBtn"),b=e("#deleteSubmissionBtn");p.hidden=!d,b.hidden=!(d||c),u.hidden=!0,p.addEventListener("click",()=>{u.hidden=!1,p.hidden=!0}),y.addEventListener("click",()=>{g.value="",u.hidden=!0,p.hidden=!1}),b.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const v=l.dataset.submissionId;fetch(`/quests/quest/delete_submission/${v}`,{method:"DELETE",headers:{"X-CSRF-Token":n()}}).then(w=>w.json()).then(w=>{if(!w.success)throw new Error(w.message||"Delete failed");S("submissionDetailModal"),O(),l.dataset.questId&&refreshQuestDetailModal(l.dataset.questId),alert("Submission deleted successfully.")}).catch(w=>alert("Error deleting submission: "+w.message))}),f.addEventListener("click",()=>{const v=l.dataset.submissionId,w=g.files[0];if(!w)return alert("Please select an image first.");if(w.type.startsWith("video/")&&w.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(w.type.startsWith("image/")&&w.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const D=new FormData;w.type.startsWith("video/")?D.append("video",w):D.append("photo",w),fetch(`/quests/submission/${v}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":n()},body:D}).then(C=>C.json()).then(C=>{if(!C.success)throw new Error(C.message||"Upload failed");C.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=C.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=C.image_url),y.click()}).catch(C=>alert(C.message))}),e("#submissionReplyEdit").hidden=d,e("#postReplyBtn").hidden=d,e("#ownerNotice").hidden=!d;const M=e("#submissionRepliesContainer");d?M.hidden=!0:M.hidden=!1;const h={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};h.profileImg.src=a.user_profile_picture||o,h.profileImgOverlay.src=h.profileImg.src,h.profileCap.textContent=a.user_display_name||a.user_username||"—",h.profileLink.onclick=v=>{v.preventDefault(),showUserProfileModal(a.user_id)},h.imgOverlay.parentElement.onclick=h.profileLink.onclick;const ue=o;a.video_url?(h.img.hidden=!0,h.video.hidden=!1,h.videoSource.src=a.video_url,h.video.load()):(h.video.hidden=!0,h.img.hidden=!1,h.img.src=a.url||ue),h.commentRead.textContent=a.comment||"No comment provided.",["tw","fb","ig"].forEach(v=>{const w=v==="tw"?"twitter_url":v==="fb"?"fb_url":"instagram_url";try{new URL(a[w]),h.social[v].href=a[w],h.social[v].style.display="inline-block"}catch{h.social[v].style.display="none"}}),d?(h.editBtn.hidden=!1,h.readBox.hidden=!1):h.editBtn.hidden=h.readBox.hidden=h.commentEdit.hidden=h.editBox.hidden=!0,i(),E("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),s(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const a=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${a}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(l=>{if(!l.ok)throw new Error(l.status);return l.json()}).then(l=>{if(!l.success)throw new Error(l.message||"Save failed");e("#submissionComment").textContent=l.comment||"No comment provided.",s(!1)}).catch(l=>alert(`Could not save comment: ${l.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>s(!1));function s(a){e("#submissionComment").hidden=a,e("#commentReadButtons").hidden=a,e("#submissionCommentEdit").hidden=!a,e("#commentEditButtons").hidden=!a}function i(){const a=e("#submissionDetailModal").dataset.submissionId;a&&(fetch(`/quests/submissions/${a}`,{credentials:"same-origin"}).then(l=>l.json()).then(l=>{e("#submissionLikeCount").textContent=l.like_count||0,e("#submissionLikeBtn").classList.toggle("active",l.liked_by_current_user)}),fetch(`/quests/submission/${a}/replies`,{credentials:"same-origin"}).then(l=>l.json()).then(l=>{const m=e("#submissionRepliesList");m.innerHTML="",l.replies.forEach(u=>{const g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${u.user_id}">
              <strong>${u.user_display}</strong>
            </a>: ${u.content}
          `,g.querySelector(".reply-user-link").addEventListener("click",y=>{y.preventDefault(),showUserProfileModal(u.user_id)}),m.appendChild(g)});const d=e("#submissionReplyEdit"),c=e("#postReplyBtn"),p=e("#replyLimitMessage");if(l.replies.length>=10){if(d.disabled=!0,c.disabled=!0,!p){const u=document.createElement("div");u.id="replyLimitMessage",u.className="text-muted mt-2",u.textContent="Maximum replies reached, sorry.",d.parentNode.insertBefore(u,d)}}else d.disabled=!1,c.disabled=!1,p&&p.remove()}))}e("#submissionLikeBtn").addEventListener("click",()=>{const a=e("#submissionLikeBtn"),l=e("#submissionDetailModal").dataset.submissionId,m=a.classList.contains("active");fetch(`/quests/submission/${l}/like`,{method:m?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()}}).then(d=>{if(!d.ok)throw new Error(d.status);return d.json()}).then(d=>{if(!d.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=d.like_count,a.classList.toggle("active",d.liked)}).catch(d=>alert(d.message))}),e("#postReplyBtn").addEventListener("click",()=>{const a=e("#submissionDetailModal").dataset.submissionId,l=e("#submissionReplyEdit");e("#postReplyBtn");const m=l.value.trim();!a||!m||fetch(`/quests/submission/${a}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({content:m})}).then(d=>d.json().then(c=>({ok:d.ok,status:d.status,body:c}))).then(({ok:d,status:c,body:p})=>{if(!p.success){if(p.message==="Reply limit of 10 reached"){r();return}if(c===409&&p.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(p.message||"Error")}const u=e("#submissionRepliesList"),g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`<strong>${p.reply.user_display}</strong>: ${p.reply.content}`,u.insertBefore(g,u.firstChild),l.value="",u.children.length>=10&&r()}).catch(d=>alert(d.message))});function r(){const a=e("#submissionReplyEdit"),l=e("#postReplyBtn");if(a.disabled=!0,l.disabled=!0,!e("#replyLimitMessage")){const m=document.createElement("div");m.id="replyLimitMessage",m.className="text-muted mt-2",m.textContent="Maximum replies reached, sorry.",a.parentNode.insertBefore(m,a)}}});document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("submitPhotoForm");if(!e){console.error("submitPhotoForm element not found on page.");return}let t=!1;e.addEventListener("submit",function(o){if(o.preventDefault(),t)return;t=!0;const s=e.querySelector('input[name="photo"]'),i=s?s.files[0]:null;if(i&&i.type.startsWith("video/")&&i.size>10*1024*1024){n("Video must be 10 MB or smaller.","error"),t=!1;return}if(i&&i.type.startsWith("image/")&&i.size>8*1024*1024){n("Image must be 8 MB or smaller.","error"),t=!1;return}oe();const r=new FormData(e),a=getCSRFToken();r.append("csrf_token",a),fetch(e.action,{method:"POST",body:r,credentials:"same-origin",headers:{"X-CSRF-Token":a}}).then(l=>l.ok?l.json():l.json().then(m=>{throw new Error(m.message)})).then(l=>{l.success?(n(l.message,"success"),window.location.href=l.redirect_url):n(l.message,"error")}).catch(l=>{console.error("Submission error:",l),n("Error during submission: "+l.message,"error")}).finally(()=>{t=!1,se()})});function n(o,s){const i=document.getElementById("flash-messages");i?i.innerHTML=`
                <div class="flash-message ${s}">
                    ${o}
                </div>
            `:console.warn("Flash messages container not found.")}});var Y;(Y=document.getElementById("gameFilter"))==null||Y.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});function x(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){console.error("Riding preferences choices missing.");return}const n=document.getElementById("userProfileDetails");if(!n){console.error("Profile details containers not found");return}const o=t.current_user_id===t.user.id;n.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${o?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="window.toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((c,p)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${p}" name="riding_preferences"
                                      value="${c[0]}"
                                      ${t.user.riding_preferences.includes(c[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${p}">${c[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${o?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(c=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${c.image}" alt="${c.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${c.name}</h3>
                          <p>${c.description}</p>
                          <p><strong>Category:</strong> ${c.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(c=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${c.title}</h3>
                        <p class="text-muted">${c.description}</p>
                        <p><strong>Start Date:</strong> ${c.start_date}</p>
                        <p><strong>End Date:</strong> ${c.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(c=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${c.image_url?`<img src="${c.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${c.quest.title}</p>
                        <p class="text-muted">${c.comment}</p>
                        <p><strong>Submitted At:</strong> ${c.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${c.twitter_url?`<a href="${c.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${c.fb_url?`<a href="${c.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${c.instagram_url?`<a href="${c.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${o?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${c.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const s=document.getElementById("userProfileModalLabel");s.textContent=`${t.user.display_name||t.user.username}'s Profile`;const i=document.getElementById("followBtn");i&&(i.style.display="");const r=document.getElementById("followerCount");let a=t.user.follower_count;function l(){r&&(r.textContent=`${a} follower${a===1?"":"s"}`)}if(l(),!o&&i){let p=function(){c?(i.textContent="Following",i.classList.remove("btn-primary"),i.classList.add("btn-outline-primary")):(i.textContent="Follow",i.classList.remove("btn-outline-primary"),i.classList.add("btn-primary"))};var d=p;i&&(i.style.display="",i.classList.remove("d-none"));let c=t.current_user_following;p(),i.onclick=async()=>{const u=c?"unfollow":"follow",g=await fetch(`/profile/${t.user.username}/${u}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()},credentials:"same-origin"});if(!g.ok){console.error("Follow toggle failed:",await g.text());return}c=!c,a+=c?1:-1,p(),l()}}else{const c=document.getElementById("followBtn");c&&(c.style.display="none")}E("userProfileModal");const m=document.getElementById("profileTabSelect");m&&(m.addEventListener("change",c=>{const p=c.target.value,u=document.querySelector(`#profileTabs a[href="#${p}"]`);u&&new bootstrap.Tab(u).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(c=>{c.addEventListener("shown.bs.tab",p=>{m.value=p.target.getAttribute("href").slice(1)})}))}).catch(t=>{console.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function pt(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){console.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function gt(e){x(e)}function ft(e){const t=document.getElementById("editProfileForm");if(!t){console.error("Edit profile form not found");return}const n=new FormData(t),o=document.getElementById("profilePictureInput");o.files.length>0&&n.append("profile_picture",o.files[0]);const s=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(i=>{s.push(i.value)}),n.delete("riding_preferences"),s.forEach(i=>{n.append("riding_preferences",i)}),fetch(`/profile/${e}/edit`,{method:"POST",headers:{"X-CSRFToken":getCSRFToken()},body:n}).then(i=>i.json()).then(i=>{if(i.error){let r=`Error: ${i.error}`;if(i.details){const a=[];Object.values(i.details).forEach(l=>{a.push(l.join(", "))}),a.length&&(r+=` - ${a.join("; ")}`)}alert(r)}else alert("Profile updated successfully."),x(e)}).catch(i=>{console.error("Error updating profile:",i),alert("Failed to update profile. Please try again.")})}function ht(e){const t=document.getElementById("editBikeForm");if(!t){console.error("Edit bike form not found");return}const n=new FormData(t),o=document.getElementById("bikePicture");o.files.length>0&&n.append("bike_picture",o.files[0]),fetch(`/profile/${e}/edit-bike`,{method:"POST",headers:{"X-CSRFToken":getCSRFToken()},body:n}).then(s=>s.json()).then(s=>{s.error?alert(`Error: ${s.error}`):(alert("Bike details updated successfully."),x(e))}).catch(s=>{console.error("Error updating bike details:",s),alert("Failed to update bike details. Please try again.")})}function bt(e,t,n){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(o=>o.json()).then(o=>{if(o.success)alert("Submission deleted successfully."),t==="profileSubmissions"&&x(n);else throw new Error(o.message)}).catch(o=>{console.error("Error deleting submission:",o),alert("Error during deletion: "+o.message)})}function yt(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&fetch("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()}}).then(e=>{if(e.redirected)window.location.href=e.url;else return e.json()}).then(e=>{if(e&&e.error)throw new Error(e.error);alert("Your account has been successfully deleted."),window.location.href="/"}).catch(e=>{console.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}window.showUserProfileModal=x;window.toggleProfileEditMode=pt;window.cancelProfileEdit=gt;window.saveProfile=ft;window.saveBike=ht;window.deleteSubmission=bt;window.deleteAccount=yt;document.addEventListener("DOMContentLoaded",()=>{_e()});
