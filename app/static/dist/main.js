const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunk-ChfucAsL.js","chunk-NMvYiMni.js"])))=>i.map(i=>d[i]);
import{l as m,c as v,f as k,e as M,s as Y,h as J,g as be}from"./chunk-NMvYiMni.js";const ye="modulepreload",he=function(e){return"/static/dist/"+e},z={},G=function(t,o,n){let s=Promise.resolve();if(o&&o.length>0){let i=function(c){return Promise.all(c.map(l=>Promise.resolve(l).then(g=>({status:"fulfilled",value:g}),g=>({status:"rejected",reason:g}))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),d=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));s=i(o.map(c=>{if(c=he(c),c in z)return;z[c]=!0;const l=c.endsWith(".css"),g=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${g}`))return;const f=document.createElement("link");if(f.rel=l?"stylesheet":ye,l||(f.as="script"),f.crossOrigin="",f.href=c,d&&f.setAttribute("nonce",d),document.head.appendChild(f),l)return new Promise((u,b)=>{f.addEventListener("load",u),f.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${c}`)))})}))}function a(i){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=i,window.dispatchEvent(r),!r.defaultPrevented)throw i}return s.then(i=>{for(const r of i||[])r.status==="rejected"&&a(r.reason);return t().catch(a)})};let T=3e3,U=0;function B(e){var n;const t=document.getElementById(e);if(!t){m.error(`Modal ${e} not found`);return}document.body.appendChild(t),(n=document.querySelector(".container"))==null||n.classList.add("modal-open"),U=window.scrollY||window.pageYOffset,document.body.style.top=`-${U}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",T+=10,t.style.zIndex=T;const o=t.querySelector(".modal-backdrop");o&&(o.style.display="block",o.style.zIndex=T-1),document.body.classList.add("body-no-scroll")}function D(e){var n;const t=document.getElementById(e);if(!t)return;const o=t.querySelector(".modal-backdrop");t.style.display="none",o&&(o.style.display="none"),T=Math.max(1050,T-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(n=document.querySelector(".container"))==null||n.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,U)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function ae(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const o=document.getElementById("instagramLink");o&&(o.style.display="none",o.href="#");const n=document.getElementById("modalQuestActions");n&&(n.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(s=>s.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(s=>s.remove()),document.body.classList.remove("body-no-scroll")}function ie({gameId:e,questId:t=""}){const o=document.getElementById("loginForm"),n=document.getElementById("loginGameId"),s=document.getElementById("loginQuestId"),a=document.getElementById("loginNext"),i=document.getElementById("loginShowJoinCustom"),r=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;n.value=e,s.value=t,i.value="0",a.value=r;const d=o.getAttribute("action").split("?")[0],c=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:r});o.setAttribute("action",`${d}?${c.toString()}`),B("loginModal")}function Ee(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",o=document.getElementById("loginNext").value||"",n=document.getElementById("loginShowJoinCustom").value||"",s=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=o,document.getElementById("registerShowJoinCustom").value=n,document.getElementById("registerCustomGameCode").value=s;const a=document.getElementById("registerForm"),i=a.getAttribute("action").split("?")[0],r=new URLSearchParams;e&&r.set("game_id",e),t&&r.set("quest_id",t),o&&r.set("next",o),n&&r.set("show_join_custom",n),s&&r.set("custom_game_code",s),a.setAttribute("action",`${i}?${r.toString()}`),D("loginModal"),B("registerModal")}function ve(){var a;const e=((a=document.getElementById("loginEmail"))==null?void 0:a.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const o=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),s=document.getElementById("forgotButton");o&&(o.style.display="none"),n&&(n.style.display="none"),s&&(s.disabled=!1),B("forgotPasswordModal")}function we(e){const t=document.getElementById("resetForm"),o=document.getElementById("resetToken"),n=t.dataset.baseAction;t.setAttribute("action",n+encodeURIComponent(e)),o.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,B("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(we(t),history.replaceState(null,"",window.location.pathname)):m.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",o=e.has("game_id");t&&!o&&B("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(G(()=>Promise.resolve().then(()=>St),void 0).then(o=>o.openQuestDetailModal(t)),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let o=e.get("game_id")||"";if(!o){const n=e.get("next");if(n)try{const a=new URL(n,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(a)&&(o=a)}catch(s){m.warn("Failed to parse next URL for gameId:",s)}}ie({gameId:o,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let o=e.get("game_id")||"";if(!o)try{const s=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(o=s)}catch(n){m.warn("Could not parse next URL for gameId:",n)}o&&ie({gameId:o,questId:""})});async function Be(e,t){try{const o=await fetch(e,{credentials:"same-origin"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const n=await o.text(),s=document.getElementById(t);s&&s.parentNode.removeChild(s);const a=document.createElement("div");a.innerHTML=n.trim();const i=a.firstElementChild;(!i||i.id!==t)&&m.warn(`Expected first element to be #${t}`,i),document.body.appendChild(i),B(t)}catch(o){m.error(`Error loading ${t} from ${e}:`,o),alert("Failed to load data. Please try again later.")}}async function H(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),o=await t.json();return{status:t.status,json:o}}document.addEventListener("click",e=>{const t=e.target.closest("[data-close-modal]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-close-modal");o&&D(o)});document.addEventListener("click",e=>{const t=e.target.closest("[data-open-modal]");t&&(e.preventDefault(),B(t.getAttribute("data-open-modal")))});document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-modal-url"),n=t.getAttribute("data-modal-id");if(!o||!n){m.error("data-modal-url or data-modal-id missing",t);return}Be(o,n)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});function X(e){e.waiting&&e.waiting.postMessage({type:"SKIP_WAITING"})}function Le(){if("serviceWorker"in navigator){let a=!1;navigator.serviceWorker.addEventListener("controllerchange",()=>{a||(a=!0,window.location.reload())}),navigator.serviceWorker.register("/sw.js").then(i=>{i.addEventListener("updatefound",()=>{const r=i.installing;r.addEventListener("statechange",()=>{r.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&X(i)})}),"SyncManager"in window&&i.sync.register("sync-notifications").catch(r=>m.error("Sync registration failed:",r)),i.periodicSync&&i.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(r=>m.error("Periodic sync registration failed:",r)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in i&&i.sync.register("sync-requests").catch(r=>{m.error("Background sync registration failed:",r)})}).catch(i=>m.error("Service Worker registration failed:",i)),navigator.serviceWorker.addEventListener("message",i=>{i.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&navigator.serviceWorker.getRegistration().then(r=>{r&&X(r)})})}const e=document.getElementById("install"),t=document.getElementById("manual-install"),o=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let n=null;const s=document.getElementById("leaderboardNavbarLink");if(t&&(o?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",a=>{a.preventDefault(),n=a,e.hidden=!1,e.addEventListener("click",()=>{n&&(n.prompt(),n.userChoice.then(()=>{n=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!o&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(a=>{a.length&&(e.hidden=!0)})),s&&s.addEventListener("click",async a=>{a.preventDefault();const i=s.getAttribute("data-game-id")||0;(await G(()=>import("./chunk-ChfucAsL.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(i)}),"windowControlsOverlay"in navigator){let a=function(){const i=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=i.height+"px"};navigator.windowControlsOverlay.addEventListener("geometrychange",a),a()}document.querySelectorAll(".modal").forEach(a=>{a.parentNode!==document.body&&document.body.appendChild(a)})}function _e(e){const t=e.value;t==="join_custom_game"?B("joinCustomGameModal"):window.location.href=t}document.addEventListener("click",e=>{const t=e.target.closest("[data-game-selection]");t&&(e.preventDefault(),_e({value:t.getAttribute("data-game-selection")}))});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});function I(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){m.error("Riding preferences choices missing.");return}const o=document.getElementById("userProfileDetails");if(!o){m.error("Profile details containers not found");return}const n=t.current_user_id===t.user.id;o.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${n?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" id="editProfileBtn">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((p,h)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${h}" name="riding_preferences"
                                      value="${p[0]}"
                                      ${t.user.riding_preferences.includes(p[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${h}">${p[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" id="saveProfileBtn">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" id="cancelProfileBtn">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" id="updatePasswordBtn">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${n?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" id="saveBikeBtn">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(p=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${p.image}" alt="${p.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${p.name}</h3>
                          <p>${p.description}</p>
                          <p><strong>Category:</strong> ${p.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(p=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${p.title}</h3>
                        <p class="text-muted">${p.description}</p>
                        <p><strong>Start Date:</strong> ${p.start_date}</p>
                        <p><strong>End Date:</strong> ${p.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(p=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${p.image_url?`<img src="${p.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${p.quest.title}</p>
                        <p class="text-muted">${p.comment}</p>
                        <p><strong>Submitted At:</strong> ${p.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${p.twitter_url?`<a href="${p.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${p.fb_url?`<a href="${p.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${p.instagram_url?`<a href="${p.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${n?`<button class="btn btn-danger btn-sm mt-2" data-delete-submission="${p.id}">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const s=document.getElementById("userProfileModalLabel");s.textContent=`${t.user.display_name||t.user.username}'s Profile`;const a=document.getElementById("followBtn");a&&(a.style.display="");const i=document.getElementById("followerCount");let r=t.user.follower_count;function d(){i&&(i.textContent=`${r} follower${r===1?"":"s"}`)}if(d(),!n&&a){let h=function(){p?(a.textContent="Following",a.classList.remove("btn-primary"),a.classList.add("btn-outline-primary")):(a.textContent="Follow",a.classList.remove("btn-outline-primary"),a.classList.add("btn-primary"))};a&&(a.style.display="",a.classList.remove("d-none"));let p=t.current_user_following;h(),a.onclick=async()=>{const L=p?"unfollow":"follow",{status:E}=await v(`/profile/${t.user.username}/${L}`,{method:"POST",headers:{"Content-Type":"application/json"}});if(E!==200){m.error("Follow toggle failed");return}p=!p,r+=p?1:-1,h(),d()}}else{const p=document.getElementById("followBtn");p&&(p.style.display="none")}B("userProfileModal");const c=document.getElementById("editProfileBtn");c&&c.addEventListener("click",Ie);const l=document.getElementById("saveProfileBtn");l&&l.addEventListener("click",()=>ke(e));const g=document.getElementById("cancelProfileBtn");g&&g.addEventListener("click",()=>Ce(e));const f=document.getElementById("updatePasswordBtn");f&&f.addEventListener("click",()=>{window.location.href="/auth/update_password"});const u=document.getElementById("saveBikeBtn");u&&u.addEventListener("click",()=>$e(e)),document.querySelectorAll("[data-delete-submission]").forEach(p=>{p.addEventListener("click",()=>{const h=p.getAttribute("data-delete-submission");Se(h,"profileSubmissions",t.user.id)})});const b=document.getElementById("deleteAccountForm");b&&b.addEventListener("submit",p=>{p.preventDefault(),xe()});const y=document.getElementById("profileTabSelect");y&&(y.addEventListener("change",p=>{const h=p.target.value,L=document.querySelector(`#profileTabs a[href="#${h}"]`);L&&new bootstrap.Tab(L).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(p=>{p.addEventListener("shown.bs.tab",h=>{y.value=h.target.getAttribute("href").slice(1)})}))}).catch(t=>{m.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function Ie(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){m.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function Ce(e){I(e)}function ke(e){const t=document.getElementById("editProfileForm");if(!t){m.error("Edit profile form not found");return}const o=new FormData(t),n=document.getElementById("profilePictureInput");n.files.length>0&&o.append("profile_picture",n.files[0]);const s=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(a=>{s.push(a.value)}),o.delete("riding_preferences"),s.forEach(a=>{o.append("riding_preferences",a)}),v(`/profile/${e}/edit`,{method:"POST",body:o}).then(({json:a})=>{if(a.error){let i=`Error: ${a.error}`;if(a.details){const r=[];Object.values(a.details).forEach(d=>{r.push(d.join(", "))}),r.length&&(i+=` - ${r.join("; ")}`)}alert(i)}else alert("Profile updated successfully."),I(e)}).catch(a=>{m.error("Error updating profile:",a),alert("Failed to update profile. Please try again.")})}function $e(e){const t=document.getElementById("editBikeForm");if(!t){m.error("Edit bike form not found");return}const o=new FormData(t),n=document.getElementById("bikePicture");n.files.length>0&&o.append("bike_picture",n.files[0]),v(`/profile/${e}/edit-bike`,{method:"POST",body:o}).then(({json:s})=>{s.error?alert(`Error: ${s.error}`):(alert("Bike details updated successfully."),I(e))}).catch(s=>{m.error("Error updating bike details:",s),alert("Failed to update bike details. Please try again.")})}function Se(e,t,o){v(`/quests/quest/delete_submission/${e}`,{method:"DELETE"}).then(({json:n})=>{if(n.success)alert("Submission deleted successfully."),I(o);else throw new Error(n.message)}).catch(n=>{m.error("Error deleting submission:",n),alert("Error during deletion: "+n.message)})}function xe(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&v("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json"}}).then(()=>{window.location.href="/"}).catch(e=>{m.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}document.addEventListener("click",e=>{const t=e.target.closest("[data-user-profile]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-user-profile");o&&I(o)});let x;document.addEventListener("DOMContentLoaded",()=>{const e=r=>document.querySelector(r);if(!e("#submissionDetailModal"))return;const o=document.getElementById("replyLimitMessage"),n=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");x=function(r){const d=e("#submissionDetailModal");d.dataset.submissionId=r.id,d.dataset.questId=r.quest_id||"";const c=Number(d.dataset.currentUserId),l=Number(r.user_id)===c,g=d.dataset.isAdmin==="True"||d.dataset.isAdmin==="true",f=e("#editPhotoBtn"),u=e("#photoEditControls"),b=e("#submissionPhotoInput"),y=e("#savePhotoBtn"),p=e("#cancelPhotoBtn"),h=e("#deleteSubmissionBtn");f.hidden=!l,h.hidden=!(l||g),u.hidden=!0,f.addEventListener("click",()=>{u.hidden=!1,f.hidden=!0}),p.addEventListener("click",()=>{b.value="",u.hidden=!0,f.hidden=!1}),h.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const _=d.dataset.submissionId;v(`/quests/quest/delete_submission/${_}`,{method:"DELETE"}).then(({json:w})=>{if(!w.success)throw new Error(w.message||"Delete failed");D("submissionDetailModal"),ae(),d.dataset.questId&&refreshQuestDetailModal(d.dataset.questId),alert("Submission deleted successfully.")}).catch(w=>alert("Error deleting submission: "+w.message))}),y.addEventListener("click",()=>{const _=d.dataset.submissionId,w=b.files[0];if(!w)return alert("Please select an image first.");if(w.type.startsWith("video/")&&w.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(w.type.startsWith("image/")&&w.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const N=new FormData;w.type.startsWith("video/")?N.append("video",w):N.append("photo",w),v(`/quests/submission/${_}/photo`,{method:"PUT",body:N}).then(({json:$})=>{if(!$.success)throw new Error($.message||"Upload failed");$.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=$.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=$.image_url),p.click()}).catch($=>alert($.message))}),e("#submissionReplyEdit").hidden=l,e("#postReplyBtn").hidden=l,e("#ownerNotice").hidden=!l;const L=e("#submissionRepliesContainer");l?L.hidden=!0:L.hidden=!1;const E={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};E.profileImg.src=r.user_profile_picture||n,E.profileImgOverlay.src=E.profileImg.src,E.profileCap.textContent=r.user_display_name||r.user_username||"—",E.profileLink.onclick=_=>{_.preventDefault(),I(r.user_id)},E.imgOverlay.parentElement.onclick=E.profileLink.onclick;const F=n;r.video_url?(E.img.hidden=!0,E.video.hidden=!1,E.videoSource.src=r.video_url,E.video.load()):(E.video.hidden=!0,E.img.hidden=!1,E.img.src=r.url||F),E.commentRead.textContent=r.comment||"No comment provided.",["tw","fb","ig"].forEach(_=>{const w=_==="tw"?"twitter_url":_==="fb"?"fb_url":"instagram_url";try{new URL(r[w]),E.social[_].href=r[w],E.social[_].style.display="inline-block"}catch{E.social[_].style.display="none"}}),l?(E.editBtn.hidden=!1,E.readBox.hidden=!1):E.editBtn.hidden=E.readBox.hidden=E.commentEdit.hidden=E.editBox.hidden=!0,a(),B("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),s(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId;v(`/quests/submission/${r}/comment`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(({json:d})=>{if(!d.success)throw new Error(d.message||"Save failed");e("#submissionComment").textContent=d.comment||"No comment provided.",s(!1)}).catch(d=>alert(`Could not save comment: ${d.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>s(!1));function s(r){e("#submissionComment").hidden=r,e("#commentReadButtons").hidden=r,e("#submissionCommentEdit").hidden=!r,e("#commentEditButtons").hidden=!r}function a(){const r=e("#submissionDetailModal").dataset.submissionId;r&&(k(`/quests/submissions/${r}`).then(({json:d})=>{e("#submissionLikeCount").textContent=d.like_count||0,e("#submissionLikeBtn").classList.toggle("active",d.liked_by_current_user)}),k(`/quests/submission/${r}/replies`).then(({json:d})=>{const c=e("#submissionRepliesList");c.innerHTML="",d.replies.forEach(f=>{const u=document.createElement("div");u.className="reply mb-1",u.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${f.user_id}">
              <strong>${f.user_display}</strong>
            </a>: ${f.content}
          `,u.querySelector(".reply-user-link").addEventListener("click",y=>{y.preventDefault(),I(f.user_id)}),c.appendChild(u)});const l=e("#submissionReplyEdit"),g=e("#postReplyBtn");d.replies.length>=10?(l.disabled=!0,g.disabled=!0,o&&(o.style.display="block")):(l.disabled=!1,g.disabled=!1,o&&(o.style.display="none"))}))}e("#submissionLikeBtn").addEventListener("click",()=>{const r=e("#submissionLikeBtn"),d=e("#submissionDetailModal").dataset.submissionId,c=r.classList.contains("active");v(`/quests/submission/${d}/like`,{method:c?"DELETE":"POST",headers:{"Content-Type":"application/json"}}).then(({json:l})=>{if(!l.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=l.like_count,r.classList.toggle("active",l.liked)}).catch(l=>alert(l.message))}),e("#postReplyBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId,d=e("#submissionReplyEdit"),c=d.value.trim();!r||!c||v(`/quests/submission/${r}/replies`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:c})}).then(({status:l,json:g})=>{if(!g.success){if(g.message==="Reply limit of 10 reached"){i();return}if(l===409&&g.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(g.message||"Error")}const f=e("#submissionRepliesList"),u=document.createElement("div");u.className="reply mb-1",u.innerHTML=`<strong>${g.reply.user_display}</strong>: ${g.reply.content}`,f.insertBefore(u,f.firstChild),d.value="",f.children.length>=10&&i()}).catch(l=>alert(l.message))});function i(){const r=e("#submissionReplyEdit"),d=e("#postReplyBtn");r.disabled=!0,d.disabled=!0,o&&(o.style.display="block")}});const qe=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");let A=0,re=null,K=!1,Z=!1;function Te(e){A=0,re=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),B("allSubmissionsModal"),le()}function le(){const e=A*10;k(`/quests/quest/all_submissions?game_id=${re}&offset=${e}&limit=10`).then(({json:t})=>{if(t.error)throw new Error(t.error);K=t.is_admin,Z=t.has_more,De(t.submissions,K,A>0),Me(Z),A+=1}).catch(t=>{m.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function De(e,t,o=!1){const n=document.getElementById("allSubmissionsContainer");if(!n){m.error("allSubmissionsContainer element not found.");return}o||(n.innerHTML=""),e.forEach(s=>{const a=document.createElement("div");a.className="submission-card";const i=document.createElement("img");i.src=s.image_url||qe,i.alt="Quest Submission",i.className="submission-image";const r=document.createElement("div");r.className="submission-info";const d=document.createElement("p");d.textContent=`User: ${s.user_display_name||s.user_username}`,d.className="submission-user-details";const c=document.createElement("p"),l=new Date(s.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});c.textContent=`Submitted on: ${l}`,c.className="submission-timestamp";const g=document.createElement("p");g.textContent=`Comment: ${s.comment}`,g.className="submission-comment";const f=document.createElement("p");f.textContent=`Twitter: ${s.twitter_url||"N/A"}`,f.className="submission-comment";const u=document.createElement("p");u.textContent=`Facebook: ${s.fb_url||"N/A"}`,u.className="submission-comment";const b=document.createElement("p");if(b.textContent=`Instagram: ${s.instagram_url||"N/A"}`,b.className="submission-comment",r.appendChild(d),r.appendChild(c),r.appendChild(g),r.appendChild(f),r.appendChild(u),r.appendChild(b),t){const y=document.createElement("button");y.textContent="Delete",y.className="button delete-button",y.addEventListener("click",function(p){p.stopPropagation(),Pe(s.id)}),a.appendChild(y)}a.appendChild(i),a.appendChild(r),a.addEventListener("click",function(){x({url:s.image_url||s.video_url,video_url:s.video_url,comment:s.comment,user_id:s.user_id,user_display_name:s.user_display_name||s.user_username,user_profile_picture:s.user_profile_picture,twitter_url:s.twitter_url,fb_url:s.fb_url,instagram_url:s.instagram_url,verification_type:"image"}),B("submissionDetailModal")}),n.appendChild(a)})}function Pe(e){v(`/quests/quest/delete_submission/${e}`,{method:"DELETE"}).then(({json:t})=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{m.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Me(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{le()})});document.addEventListener("DOMContentLoaded",()=>{Ae(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>Fe(e.dataset.toggleForm))})});function Ae(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(o=>{const n=document.createElement("tr");n.dataset.badgeId=o.id;const s=o.image?`<img src="${o.image}" height="50" alt="Badge Image">`:"No Image";n.innerHTML=`
                    <td class="badge-image-manage">${s}</td>
                    <td class="badge-name">${o.name}</td>
                    <td class="badge-description">${o.description}</td>
                    <td class="badge-category">${o.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${o.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${o.id}">Delete</button>
                    </td>
                `,n.querySelector(".edit-badge").addEventListener("click",()=>Re(o.id)),n.querySelector(".delete-badge").addEventListener("click",()=>Oe(o.id)),e.appendChild(n)})}).catch(t=>m.error("Failed to load badges:",t))}function Fe(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function Ne(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const o=t.categories||[],n=document.createElement("select");n.className="form-control badge-category-select";const s=document.createElement("option");return s.value="none",s.textContent="None",(!e||e==="none")&&(s.selected=!0),n.appendChild(s),o.forEach(a=>{const i=document.createElement("option");i.value=a,i.textContent=a,a===e&&(i.selected=!0),n.appendChild(i)}),n}).catch(t=>{m.error("Error fetching categories:",t);const o=document.createElement("select");o.className="form-control badge-category-select";const n=document.createElement("option");return n.value="none",n.textContent="None",n.selected=!0,o.appendChild(n),o})}function Re(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){m.error(`Badge row with ID ${e} not found.`);return}const o=t.querySelector(".badge-name"),n=t.querySelector(".badge-description"),s=t.querySelector(".badge-category"),a=t.querySelector(".badge-image-manage");o.textContent="";const i=document.createElement("input");i.type="text",i.value=o.innerText.trim(),i.className="form-control badge-name-input",o.appendChild(i),n.textContent="";const r=document.createElement("textarea");if(r.className="form-control badge-description-textarea",r.value=n.innerText.trim(),n.appendChild(r),a){a.textContent="";const d=document.createElement("input");d.type="file",d.className="form-control-file badge-image-input",a.appendChild(d)}else m.error("Could not find badge-image-manage cell");Ne(s.innerText.trim()).then(d=>{s.textContent="",s.appendChild(d);const c=t.querySelector("button.edit-badge");c.innerText="Save",c.onclick=()=>Qe(e)})}function Qe(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),o=new FormData;o.append("name",t.querySelector(".badge-name-input").value.trim()),o.append("description",t.querySelector(".badge-description-textarea").value.trim()),o.append("category",t.querySelector(".badge-category-select").value);const n=t.querySelector(".badge-image-input");n&&n.files.length>0&&o.append("image",n.files[0]);const s=document.querySelector("[name=csrf_token]").value;o.append("csrf_token",s),v(`/badges/update/${e}`,{method:"POST",body:o}).then(({json:a})=>{a.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+a.message)}).catch(a=>m.error("Error updating badge:",a))}function Oe(e){confirm("Are you sure you want to delete this badge?")&&v(`/badges/delete/${e}`,{method:"DELETE"}).then(({json:t})=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{m.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}let q=[];const V=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");function Ue(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return V}async function Ge(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,n=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,s=await fetch(n,{credentials:"same-origin"});if(!s.ok)throw new Error("Error fetching badges");return q=(await s.json()).badges,q}async function de(){if(!q||q.length===0)try{await Ge()}catch(e){m.error("Error loading badges:",e),q=[]}}function He(e){return e?`<ul>${e.split(",").map(o=>`<li>${M(o.trim())}</li>`).join("")}</ul>`:""}function Ve(e){return q.find(t=>t.id==e)}function je(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||V}}async function We(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const o=await t.json();return o.userCompletion?o.userCompletion.completions:0}function Ye(e,t,o,n,s,a,i){const r=document.getElementById("badgeModalTitle"),d=document.getElementById("badgeModalImage"),c=document.getElementById("badgeModalText");if(!r||!d||!c){m.error("Badge modal elements missing");return}r.textContent=e.name,d.src=Ue(e.image)||V;let l="";if(a){const f=`<a href="#" data-quest-detail="${a}">${M(i)}</a>`;l=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${o}</p><p>${s?"You have earned this badge.":"Complete "+f+" to earn this badge."}</p>`}else l=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${o}</p>${n}<p>${s?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const g=e.description||"No description available.";s?(d.style.filter="none",d.oncontextmenu=null,c.innerHTML=`<p><strong>Awarded!</strong></p>${l}<p>${M(g)}</p>`):(d.style.filter="grayscale(100%) opacity(0.5)",d.oncontextmenu=f=>(f.preventDefault(),!1),c.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${l}<p>${M(g)}</p>`)}async function Je(e){const t=e.getAttribute("data-badge-id"),o=e.getAttribute("data-task-name"),n=e.getAttribute("data-task-id"),s=e.getAttribute("data-badge-awarded-count"),a=e.getAttribute("data-user-completions"),i=parseInt(s,10),r=parseInt(a,10)||0,d=He(o),c=n?n.split(",").map(b=>b.trim()).filter(Boolean):[],l=c.length===1?c[0]:null;await de();const g=Ve(t)||je(e);let f=r;if(l)try{f=await We(l)}catch(b){m.error("Error fetching user completions:",b)}const u=f>=i;Ye(g,i,f,d,u,l,o),B("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{de()});document.addEventListener("click",e=>{const t=e.target.closest("[data-open-badge]");t&&(e.preventDefault(),Je(t))});document.addEventListener("DOMContentLoaded",()=>{});let R;function ze(e){const t=document.getElementById("deleteGameModal"),o=document.getElementById("deleteGameForm"),n=document.getElementById("deleteGameConfirmInput"),s=document.getElementById("deleteGameCountdown"),a=document.getElementById("deleteGameTimer"),i=document.getElementById("deleteGameConfirmBtn");if(!t||!o||!n||!s||!a||!i){m.warn("Delete game modal elements missing");return}t.dataset.gameId=e,o.action=`/games/delete_game/${e}`,n.value="",i.disabled=!0,s.hidden=!0,a.textContent="5",B("deleteGameModal")}function ee(){const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),o=document.getElementById("deleteGameCountdown"),n=document.getElementById("deleteGameTimer"),s=document.getElementById("deleteGameUndo"),a=document.getElementById("deleteGameForm");!e||!t||!o||!n||!s||!a||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let i=5;o.hidden=!1,n.textContent=i.toString(),R=setInterval(()=>{i-=1,n.textContent=i.toString(),i<=0&&(clearInterval(R),a.submit())},1e3)}),s.addEventListener("click",()=>{clearInterval(R),o.hidden=!0,n.textContent="5",e.value="",t.disabled=!0}))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",ee):ee();document.addEventListener("click",e=>{const t=e.target.closest("[data-delete-game-id]");t&&(e.preventDefault(),ze(t.getAttribute("data-delete-game-id")))});document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[o,n]=t[0],s=document.getElementById("flash-overlay");s.querySelector(".flash-content").textContent=n,s.querySelector(".flash-modal").classList.add(`flash-${o}`),requestAnimationFrame(()=>{s.classList.add("visible")});function a(){s.classList.remove("visible"),e.removeAttribute("data-messages")}s.querySelector(".flash-close").addEventListener("click",a),s.querySelector(".flash-ok-btn").addEventListener("click",a)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),n=document.getElementById("forgotButton"),s=document.getElementById("forgotEmail"),a=document.getElementById("forgotEmailDisplay"),i=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{i.style.display==="block"&&(a.textContent=s.value)}).observe(i,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",d=>{d.preventDefault(),t.style.display="none",o.style.display="none",H(e).then(({json:c})=>{c.success?(o.textContent=c.message,o.style.display="block",n.disabled=!0):(t.textContent=c.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("button[data-game-id]").forEach(o=>{o.addEventListener("click",function(){t(this)})});function t(o){const n=document.getElementById("questCreationForm"),s=o.getAttribute("data-game-id");n?n.addEventListener("submit",function(a){a.preventDefault();const i=document.getElementById("questDescription").value;v("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({description:i,game_id:s})}).then(({json:r})=>{const d=r;if(d.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=d.generated_quest_html,B("generateAIQuestModal");const c=document.getElementById("generateAIQuestModalForm");c&&c.setAttribute("data-game-id",s),c&&c.addEventListener("submit",function(b){b.preventDefault();const y=new FormData(c);v("/ai/create_quest",{method:"POST",body:y}).then(({json:p})=>{window.location.href="/",m.log(p)}).catch(p=>{m.error("Error:",p)})});const l=document.getElementById("generateAIImage"),g=document.getElementById("badge_description"),f=document.getElementById("aiBadgeImage"),u=document.getElementById("aiBadgeFilename");if(!l||!g||!f||!u){m.error("One or more elements not found in the DOM");return}l.addEventListener("click",function(){m.log("Generate AI Image button clicked");const b=g.value;if(m.log("Badge Description:",b),!b){alert("Please enter a badge description first.");return}v("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({badge_description:b})}).then(({json:y})=>{if(m.log("Response data:",y),y.error)alert("Error generating badge image: "+y.error);else{const p=`${y.filename}`,h=`static/images/badge_images/${y.filename}`;f.src=h,f.style.display="block",u.value=p}}).catch(y=>{m.error("Fetch error:",y),alert("Error: "+y)})})}}).catch(r=>{alert("Error generating quest: "+r.message)})}):m.error("Form '#questCreationForm' not found.")}});const Xe=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){m.error("Error refreshing CSRF token:",e)}};setInterval(Xe,9e5);const Ke=async e=>{try{const o=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),n=o.total_game_points,s=o.game_goal,a=s-n,i=Math.min(n/s*100,100),r=document.getElementById("meterBar"),d=document.querySelector(".meter-label");r&&(r.style.height=`${i}%`),document.documentElement.style.setProperty("--meter-fill-height",`${i}%`),d&&(d.innerText=`Remaining Reduction: ${a} / ${s}`)}catch(t){m.error("Failed to update meter:",t)}};function Ze(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const o=e.getAttribute("data-game-id");fetch(`/games/get_game/${o}`,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw m.error(`Failed fetching game name; URL returned status ${n.status} (${n.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${n.status}: ${n.statusText}`);return n.json()}).then(n=>{t.textContent=n.name||"Game Not Found"}).catch(n=>{m.error("Error retrieving game name:",n),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",async()=>{const f=e.getAttribute("data-game-id");(await G(()=>import("./chunk-ChfucAsL.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(f),Ke(f)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&Te(currentUserId)});const o=document.getElementById("contactForm");o&&o.addEventListener("submit",async f=>{f.preventDefault();const u=new FormData(o);Y();try{const b=await fetch(o.action,{method:"POST",body:u,headers:{"X-Requested-With":"XMLHttpRequest"}}),y=await b.json();b.ok&&y.success?(alert("Your message has been sent successfully."),D("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{J()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(f=>{f.innerHTML=f.innerHTML.replace(/<\/?p[^>]*>/g,"")});const s=document.getElementById("questSearchInput"),a=document.getElementById("questCategoryDropdown");s&&s.addEventListener("input",te),a&&a.addEventListener("change",te);const i=document.querySelector("#whats-happening-step");if(i){const f=i.querySelectorAll(".wh-tab-button"),u=i.querySelectorAll(".wh-tab-content");f.forEach(b=>{b.addEventListener("click",()=>{const y=b.getAttribute("data-wh-tab");f.forEach(p=>p.classList.remove("active")),u.forEach(p=>p.classList.remove("active")),b.classList.add("active"),i.querySelector(`#wh-${y}-tab`).classList.add("active")})})}const r=document.querySelectorAll(".quest-tab-navigation .quest-tab-button"),d=document.querySelectorAll(".quest-tab-content"),c=document.getElementById("questSearchInput"),l=document.getElementById("questCategoryGroup");r.length&&d.length&&r.forEach(f=>{f.addEventListener("click",()=>{const u=f.getAttribute("data-quest-tab");r.forEach(b=>b.classList.remove("active")),d.forEach(b=>b.classList.remove("active")),f.classList.add("active"),document.getElementById(`${u}-tab`).classList.add("active"),u==="calendar-quests"?(c&&(c.style.display="none"),l&&(l.style.display="none")):(c&&(c.style.display=""),l&&(l.style.display=""))})}),Ze();const g=document.getElementById("clearCalendarQuestsBtn");g&&g.addEventListener("click",async()=>{if(!confirm("Delete all upcoming calendar quests?"))return;const f=g.getAttribute("data-game-id");Y();try{const{status:u,json:b}=await v(`/quests/game/${f}/clear_calendar`,{method:"DELETE"});u===200&&b.success?window.location.reload():alert(b.message||"Failed to clear quests")}catch(u){m.error("Failed to clear calendar quests",u),alert("Failed to clear calendar quests.")}finally{J()}})});function te(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(n=>{const s=n.querySelector(".quest-title").textContent.toLowerCase(),a=n.dataset.category||"Not Set",i=s.includes(e),r=t==="all"||a===t;n.style.display=i&&r?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(s){s.addEventListener("click",function(){const a=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=a,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",o=e.dataset.joinDemoUrl;let n=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{n=!0}),e.addEventListener("hidden.bs.modal",function(){!n&&!t&&(window.location.href=o)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const o=document.getElementById("passwordError"),n=document.getElementById("forgotPasswordLink"),s=t.querySelector("[data-register-from-login]"),a=t.dataset.checkUrl;e.addEventListener("submit",l=>{l.preventDefault(),o.style.display="none",n&&(n.style.display="none"),H(e).then(({json:g})=>{g.success?window.location.href=g.redirect:(o.textContent=g.error,o.style.display="block",g.show_forgot&&n&&(n.style.display="block"))}).catch(()=>e.submit())});const i=document.getElementById("loginEmail"),r=document.getElementById("loginButton"),d=document.getElementById("emailError");function c(){r.disabled=!0,d.style.display="none",d.textContent="",n&&(n.style.display="none")}c(),n&&n.addEventListener("click",l=>{l.preventDefault(),ve()}),s&&s.addEventListener("click",l=>{l.preventDefault(),Ee()}),i.addEventListener("blur",()=>{const l=i.value.trim();if(!l)return c();fetch(`${a}?email=${encodeURIComponent(l)}`).then(g=>g.json()).then(g=>{g.exists?r.disabled=!1:(r.disabled=!0,d.textContent="This email is not registered. Please register first.",d.style.display="block")}).catch(()=>r.disabled=!1)}),i.addEventListener("input",c)});let C=null;const et={qr_code:"QR Code",photo:"Photo Upload",comment:"Comment",photo_comment:"Photo Upload and Comment",video:"Video Upload"};let ce=[];function ne(){const e=document.getElementById("game_Data");if(!e)return;C=e.dataset.gameId;const t=document.getElementById("deleteAllQuestsBtn");t&&t.addEventListener("click",nt);const o=document.getElementById("importQuestsBtn");o&&o.addEventListener("click",ut),tt().then(()=>P(C))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",ne):ne();async function tt(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");ce=(await e.json()).badges||[]}catch(e){m.error("Error fetching badges:",e)}}function me(e){const t=document.querySelector(`#quest-${e}`),o={};t.querySelectorAll(".editable").forEach(n=>{o[n.getAttribute("data-name")]=n.innerHTML}),ot(t),st(t),at(t),it(t),lt(t,e,o)}function nt(){confirm("Are you sure you want to delete all quests? This action cannot be undone.")&&k(`/quests/game/${C}/get_title`).then(({json:e})=>{const t=e.title;confirm(`This will delete all quests for the game: "${t}". Are you absolutely sure? This action cannot be undone.`)&&v(`/quests/game/${C}/delete_all`,{method:"DELETE"}).then(({json:o})=>{o.success?(alert("All quests deleted successfully"),P(C)):alert(`Failed to delete quests: ${o.message}`)}).catch(o=>{m.error("Error:",o),alert("Failed to delete all quests. Please check the console for more details.")})}).catch(e=>{m.error("Error fetching game title:",e),alert("Failed to fetch game title. Please check the console for more details.")})}function ot(e){const t=e.querySelector('.editable[data-name="verification_type"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="verification_type" class="editable-select">';Object.entries(et).forEach(([s,a])=>{const i=o===s.toLowerCase()?"selected":"";n+=`<option value="${s}" ${i}>${a}</option>`}),n+="</select>",t.innerHTML=n}function st(e){const t=e.querySelector('.editable[data-name="frequency"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="frequency" class="editable-select">';Object.entries({daily:"Daily",weekly:"Weekly",monthly:"Monthly"}).forEach(([a,i])=>{const r=o===a.toLowerCase()?"selected":"";n+=`<option value="${a}" ${r}>${i}</option>`}),n+="</select>",t.innerHTML=n}function at(e){const t=e.querySelector('.editable[data-name="badge_name"]');let o=t.innerText.trim(),n='<select name="badge_id" class="editable-select"><option value="">None</option>';ce.forEach(s=>{const a=o===s.name?"selected":"";n+=`<option value="${s.id}" ${a}>${s.name}</option>`}),n+="</select>",t.innerHTML=n}function it(e){[{name:"title",type:"text"},{name:"description",type:"textarea"},{name:"tips",type:"textarea"},{name:"points",type:"number"},{name:"badge_awarded",type:"number"},{name:"completion_limit",type:"number"},{name:"category",type:"text"},{name:"enabled",type:"select",options:["Yes","No"]},{name:"is_sponsored",type:"select",options:["Yes","No"]}].forEach(o=>{const n=e.querySelector(`.editable[data-name="${o.name}"]`);n&&rt(n,o)})}function rt(e,t){let o=e.getAttribute("data-value")||e.innerHTML.trim(),n;t.type==="select"?(n=document.createElement("select"),n.name=t.name,t.options.forEach(s=>{const a=document.createElement("option");a.value=s,a.text=s,o===a.text&&(a.selected=!0),n.appendChild(a)})):t.type==="textarea"?(n=document.createElement("textarea"),n.name=t.name,n.value=o):(n=document.createElement("input"),n.type=t.type,n.name=t.name,n.value=o),e.innerHTML="",e.appendChild(n)}function lt(e,t,o){const n=e.querySelector(".edit-button");n.innerText="Save",n.onclick=()=>ct(t);const s=document.createElement("button");s.innerText="Cancel",s.className="btn btn-secondary ms-2 cancel-button",s.onclick=()=>{dt(e,o,n,t)},n.parentNode.insertBefore(s,n.nextSibling)}function dt(e,t,o,n){Object.entries(t).forEach(([s,a])=>{const i=e.querySelector(`.editable[data-name="${s}"]`);i&&(i.innerHTML=a)}),o.innerText="Edit",o.onclick=()=>me(n),e.querySelector(".cancel-button").remove()}function ct(e){const t=document.querySelector(`#quest-${e}`);let o={};t.querySelectorAll("input, select, textarea").forEach(n=>{let s=n.value;n.name==="enabled"||n.name==="is_sponsored"?s=n.value==="Yes":n.name==="badge_id"&&s===""&&(s=null),o[n.name]=s}),v(`/quests/quest/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then(({json:n})=>{n.success?(alert("Quest updated successfully."),P(C)):alert("Failed to update quest. Error: "+n.message)}).catch(n=>{m.error("Error updating quest:",n),alert("Error updating quest. Please check console for details.")})}function P(e){k(`/quests/game/${e}/quests`).then(({json:t})=>{const o=document.getElementById("questsBody");o.innerHTML="",t.quests.forEach(n=>{const s=document.createElement("div");s.className="card",s.id=`quest-${n.id}`;const a=n.verification_type.toLowerCase(),i=n.badge_name||"None",r=n.frequency||"Not Set",d=n.category||"Not Set",c=n.badge_awarded||"Not Set";s.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${n.title}</h5>
                        <div class="card-text editable" data-name="description">${n.description}</div>
                        <div class="card-text editable" data-name="tips">${n.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${n.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${n.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${n.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${n.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${n.verification_type}">${a}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${i}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${c}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${n.frequency}">${r}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${d}</span></p>
                        <p class="card-text"><strong>Quest ID:</strong> ${n.id}</p>
                        <p class="card-text"><strong>Completed:</strong> ${n.completed?"Yes":"No"}</p>
                        <p class="card-text"><strong>User ID:</strong> ${n.user_id??"N/A"}</p>
                        <p class="card-text"><strong>Evidence URL:</strong> ${n.evidence_url||"N/A"}</p>
                        <p class="card-text"><strong>Verification Comment:</strong> ${n.verification_comment||""}</p>
                        <p class="card-text"><strong>Game ID:</strong> ${n.game_id}</p>
                        <p class="card-text"><strong>Badge ID:</strong> ${n.badge_id??"N/A"}</p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" data-quest-id="${n.id}">Edit</button>
                            <button class="btn btn-danger delete-button" data-quest-id="${n.id}">Delete</button>
                            <button class="btn btn-info qr-button" data-quest-id="${n.id}">Generate QR Code</button>
                        </div>
                    </div>
                `,o.appendChild(s);const l=s.querySelector(".edit-button"),g=s.querySelector(".delete-button"),f=s.querySelector(".qr-button");l&&l.addEventListener("click",()=>me(n.id)),g&&g.addEventListener("click",()=>mt(n.id)),f&&f.addEventListener("click",()=>pt(n.id))})}).catch(t=>m.error("Failed to load quests:",t))}function mt(e){v(`/quests/quest/${e}/delete`,{method:"DELETE"}).then(({json:t})=>{t.success?(alert("Quest deleted successfully"),P(C)):alert(`Failed to delete quest: ${t.message}`)}).catch(t=>{m.error("Error:",t),alert("Failed to delete quest. Please check the console for more details.")})}function ut(){const e=document.getElementById("importQuestsForm"),t=new FormData(e);v(`/quests/game/${C}/import_quests`,{method:"POST",body:t}).then(({json:o})=>{o.success&&o.redirectUrl?(alert("Quests imported successfully"),P(C)):alert("Failed to import quests: "+o.message)}).catch(o=>{m.error("Error importing quests:",o)})}function pt(e){const t=`/quests/generate_qr/${e}`;fetch(t).then(o=>{if(!o.ok)throw new Error("Failed to generate QR code");return o.blob()}).then(o=>{const n=URL.createObjectURL(o);window.open(n,"_blank")}).catch(o=>{m.error("Error generating QR code:",o),alert("Failed to generate QR code. Please check console for more details.")})}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),o=e.querySelector("#notifLoading"),n=e.querySelector("li.dropdown-footer"),s=n.querySelector("#loadMoreBtn"),a=e.dataset.url;let i=0,r=1;const d=parseInt(e.dataset.perPage,10)||10,c={follow:({from_user_name:u,from_user_id:b})=>({text:`Now following ${u}`,onClick:()=>I(b)}),followed_by:({follower_name:u,follower_id:b})=>({text:`${u} is now following you`,onClick:()=>I(b)}),submission:({actor_name:u,quest_name:b,submission_id:y})=>({text:`${u} submitted a new “${b}” quest`,onClick:async()=>{const h=await(await fetch(`/quests/submissions/${y}`)).json();x(h)}}),profile_message:({from_user_name:u,content:b,profile_user_id:y})=>({text:`${u} says “${b}”`,onClick:()=>I(y)}),profile_reply:({from_user_name:u,content:b,profile_user_id:y})=>({text:`${u} replied “${b}”`,onClick:()=>I(y)}),submission_like:({liker_name:u,submission_id:b})=>({text:`${u} liked your submission`,onClick:async()=>{const p=await(await fetch(`/quests/submissions/${b}`,{credentials:"same-origin"})).json();x(p)}}),submission_reply:({actor_name:u,content:b,submission_id:y})=>({text:`${u} replied “${b}”`,onClick:async()=>{const h=await(await fetch(`/quests/submissions/${y}`,{credentials:"same-origin"})).json();x(h)}})};function l(u){const b=c[u.type];let y,p;if(b&&u.payload)try{({text:y,onClick:p}=b(u.payload))}catch(E){m.error(`Error in handler for ${u.type}:`,E)}(!y||!p)&&(y=u.payload.summary||JSON.stringify(u.payload),p=()=>{window.location.href="/notifications/"});const h=u.is_read?"":"fw-bold",L=document.createElement("a");return L.href="#",L.className=`dropdown-item ${h}`,L.innerHTML=`
      ${y}
      <small class="text-muted d-block text-center">
        ${new Date(u.when).toLocaleString()}
      </small>`,L.addEventListener("click",async E=>{E.preventDefault();try{await p()}catch(F){m.error(F)}}),L}function g(u){u&&u.parentNode===e&&e.removeChild(u)}async function f(u){u===1&&(Array.from(e.children).forEach(h=>{h!==o&&h!==n&&e.removeChild(h)}),i=0),g(o),g(n),e.appendChild(o),e.appendChild(n),o.style.display="",s.disabled=!0;let b;try{b=await fetch(`${a}?page=${u}&per_page=${d}`,{credentials:"include"})}catch(h){o.textContent="Network error.",m.error(h);return}if(!b.ok){o.textContent="Error loading.",m.error("Status:",b.status,b.statusText);return}const y=await b.json();i=y.page,r=y.total_pages,g(o),g(n);const p=t.querySelector(".badge");p&&p.remove(),y.items.forEach(h=>{e.appendChild(l(h))}),e.appendChild(o),e.appendChild(n),o.style.display="none",s.disabled=i>=r}t.addEventListener("show.bs.dropdown",()=>{i===0&&f(1)}),s.addEventListener("click",u=>{u.preventDefault(),u.stopPropagation(),i<r&&f(i+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let o;try{({public_key:o}=await t.json())}catch(a){m.error("Push setup failed",a);return}if(!o||await e.pushManager.getSubscription())return;const s=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:gt(o)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:s})})}catch(t){m.error("Push setup failed",t)}})});function gt(e){const t="=".repeat((4-e.length%4)%4),o=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=atob(o),s=new Uint8Array(n.length);for(let a=0;a<n.length;++a)s[a]=n.charCodeAt(a);return s}function ft(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const bt=Number(ft("current-user-id")||0),yt=be(),S=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");function j(e){ae(),k(`/quests/detail/${e}/user_completion`).then(({json:t})=>{const{quest:o,userCompletion:n,canVerify:s,nextEligibleTime:a}=t;if(!ue(o,n.completions,s,e,a)){m.error("populateQuestDetails – required element missing");return}pe(o,n.completions,a,s),B("questDetailModal"),W(),fe(e)}).catch(t=>{m.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}window.openQuestDetailModal=j;function ht(e){k(`/quests/detail/${e}/user_completion`).then(({json:t})=>{const{quest:o,userCompletion:n,canVerify:s,nextEligibleTime:a}=t;if(!ue(o,n.completions,s,e,a)){m.error("populateQuestDetails - required element missing");return}pe(o,n.completions,a,s),W(),fe(e)}).catch(t=>{m.error("Failed to refresh quest detail modal:",t)})}function W(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((o,n)=>{o.forEach(s=>{if(s.isIntersecting){const a=s.target;a.src=a.getAttribute("data-src"),a.classList.remove("lazyload"),n.unobserve(a)}})});e.forEach(o=>{t.observe(o)})}function ue(e,t,o,n,s){const a=t>=e.completion_limit?" - complete":"",i={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let g in i)if(!i[g])return m.error(`Error: Missing element ${g}`),!1;i.modalQuestTitle.innerText=`${e.title}${a}`,i.modalQuestDescription.textContent=e.description,i.modalQuestTips.textContent=e.tips||"No tips available",i.modalQuestPoints.innerText=`${e.points}`,i.modalQuestCategory.innerText=e.category||"No category set";const r=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;i.modalQuestCompletionLimit.innerText=`${r} ${e.frequency}`;const d=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?i.modalQuestBadgeAwarded.innerText=`After ${d}`:i.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":i.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":i.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":i.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":i.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:i.modalQuestVerificationType.innerText="Not specified";break}const c=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:S;i.modalQuestBadgeImage.setAttribute("data-src",c),i.modalQuestBadgeImage.src=S,i.modalQuestBadgeImage.classList.add("lazyload"),i.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",i.modalQuestCompletions.innerText=`Total Completions: ${t}`;const l=s&&new Date(s);return!o&&l&&l>new Date?(i.modalCountdown.innerText=`Next eligible time: ${l.toLocaleString()}`,i.modalCountdown.style.color="red"):(i.modalCountdown.innerText="You are currently eligible to verify!",i.modalCountdown.style.color="green"),wt(n,o,e.verification_type),!0}function pe(e,t,o,n){const s=document.querySelector(".user-quest-data");if(!s){m.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(i=>{let r=document.getElementById(i.id);r||(r=document.createElement("p"),r.id=i.id,s.appendChild(r)),r.innerText=i.value}),Et(document.getElementById("modalCountdown"),o,n)}function Et(e,t,o){if(!o&&t){const n=new Date(t),s=new Date;if(n>s){const a=n-s;e.innerText=`Next eligible time: ${vt(a)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function vt(e){const t=Math.floor(e/1e3%60),o=Math.floor(e/(1e3*60)%60),n=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${n}h ${o}m ${t}s`}function wt(e,t,o){const n=document.querySelector(".user-quest-data");if(!n){m.error("Parent element .user-quest-data not found");return}if(n.innerHTML="",t){const s=document.createElement("div");s.id=`verifyQuestForm-${e}`,s.className="verify-quest-form",s.style.display="block";const a=Bt(o.trim().toLowerCase(),e);s.innerHTML=a,n.appendChild(s),Lt(e)}}function Bt(e,t){let o=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${yt}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":o+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":o+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":o+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":o+='<p class="epic-message">Quest is currently paused.</p>';break;default:o+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return o+="</form>",o}function Lt(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){m.error("Form container not found for quest ID:",e);return}const o=t.querySelector("form");if(!o){m.error("Form element missing for quest ID:",e);return}o.addEventListener("submit",function(n){Ct(n,e)})}function Q(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function _t(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function It(e,t,o){const n=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!n)return;const s=n.querySelectorAll(".quest-stats-cell");s.length>=2&&(s[0].innerText=t,s[1].innerText=o)}function ge(e){Q(document.getElementById("twitterLink"),e.twitter_url),Q(document.getElementById("facebookLink"),e.fb_url),Q(document.getElementById("instagramLink"),e.instagram_url)}let O=!1;async function Ct(e,t){if(e.preventDefault(),O)return;O=!0;const o=e.target.querySelector('[type="submit"]');o&&(o.disabled=!0);try{const n=e.target.querySelector('input[type="file"]'),s=n?n.files[0]:null;if(s&&s.type.startsWith("video/")&&s.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(s&&s.type.startsWith("image/")&&s.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const a=new FormData(e.target);a.append("user_id",bt);const{status:i,json:r}=await v(`/quests/quest/${t}/submit`,{method:"POST",body:a});if(i!==200)throw i===403&&r.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(r.message||`Server responded with status ${i}`);if(!r.success)throw new Error(r.message);if(!r.success)throw new Error(r.message);_t(r.total_points),ge(r),It(t,r.new_completion_count,r.total_completion_count),ht(t),e.target.reset()}catch(n){m.error("Submission error:",n),alert(`Error during submission: ${n.message}`)}finally{O=!1,o&&(o.disabled=!1)}}async function fe(e){try{const{json:t}=await k(`/quests/quest/${e}/submissions`),o=document.getElementById("twitterLink"),n=document.getElementById("facebookLink"),s=document.getElementById("instagramLink");if(t&&t.length){const i=t[0],r=document.getElementById("submissionImage"),d=document.getElementById("submissionVideo"),c=document.getElementById("submissionVideoSource"),l=document.getElementById("submissionComment"),g=document.getElementById("submitterProfileLink"),f=document.getElementById("submitterProfileImage"),u=document.getElementById("submitterProfileCaption");i.video_url?(r.hidden=!0,d.hidden=!1,c.src=i.video_url,d.load()):(d.hidden=!0,r.hidden=!1,r.src=i.image_url||S),l.textContent=i.comment||"No comment provided.",g.href=`/profile/${i.user_id}`,f.src=i.user_profile_picture||S,u.textContent=i.user_display_name||i.user_username||`User ${i.user_id}`,ge(i)}else[o,n,s].forEach(i=>{i&&(i.style.display="none")});const a=t.slice().reverse().map(i=>({id:i.id,url:i.image_url||(i.video_url?null:S),video_url:i.video_url,alt:"Submission Image",comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name,user_username:i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,quest_id:e}));kt(a)}catch(t){m.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function oe(e){if(!e)return m.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(n=>t.pathname.toLowerCase().endsWith(n))}catch{return m.error(`Invalid URL detected: ${e}`),!1}return!1}function kt(e){var d;const t=document.getElementById("submissionBoard");if(!t){m.error("submissionBoard element not found");return}t.innerHTML="";const o=((d=document.getElementById("questDetailModal"))==null?void 0:d.getAttribute("data-placeholder-url"))||S,n=oe(o)?o:S,s=c=>c.startsWith("/static/"),a=c=>c.replace(/^\/static\//,""),i=window.innerWidth<=480?70:100,r=i*(window.devicePixelRatio||2);e.forEach(c=>{let l;if(c.video_url)l=document.createElement("video"),l.src=c.video_url,l.preload="metadata",l.muted=!0,l.playsInline=!0,l.style.objectFit="cover";else{l=document.createElement("img");const g=oe(c.url)?c.url:n,f=s(g)?`/resize_image?path=${encodeURIComponent(a(g))}&width=${r}`:g;l.setAttribute("data-src",f),l.classList.add("lazyload"),l.alt=c.alt||"Submission Image"}l.style.width=`${i}px`,l.style.height="auto",l.style.marginRight="10px",c.video_url||(l.onerror=()=>{s(n)?l.src=`/resize_image?path=${encodeURIComponent(a(n))}&width=${r}`:l.src=n}),l.onclick=()=>x(c),t.appendChild(l)}),W()}function $t(e){e.querySelectorAll("span, img").forEach(o=>{o.classList.toggle("hidden")})}document.addEventListener("click",e=>{const t=e.target.closest("[data-quest-detail]");if(t){e.preventDefault(),j(t.getAttribute("data-quest-detail"));return}const o=e.target.closest("[data-toggle-content]");o&&o.closest("#questDetailModal")&&(e.preventDefault(),$t(o))});const St=Object.freeze(Object.defineProperty({__proto__:null,openQuestDetailModal:j},Symbol.toStringTag,{value:"Module"}));document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;const t=document.getElementById("registerModal"),o=(t==null?void 0:t.dataset.checkUrl)||"/auth/check_email",n=document.getElementById("existingUserLogin");n&&(e.addEventListener("blur",()=>{const s=e.value.trim();s&&fetch(`${o}?email=${encodeURIComponent(s)}`).then(a=>a.json()).then(a=>{a.exists?n.style.display="block":n.style.display="none"}).catch(a=>{m.error("Error checking email:",a),n.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const s=e.value.trim(),a=document.getElementById("existingUserPassword").value,i=document.getElementById("loginError"),r=document.getElementById("gameIdField").value,d=document.getElementById("questIdField").value,c=document.getElementById("nextField").value,l=new FormData;l.append("email",s),l.append("password",a),l.append("remember_me","true"),r&&l.append("game_id",r),d&&l.append("quest_id",d),c&&l.append("next",c),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:l,credentials:"same-origin"}).then(g=>g.json().then(f=>({payload:f}))).then(({payload:g})=>{g.success?window.location.href=g.redirect:(i.textContent=g.error,i.style.display="block")}).catch(g=>{m.error("Login error:",g),i.textContent="An error occurred. Please try again.",i.style.display="block"})}),e.addEventListener("input",()=>{n.style.display="none",document.getElementById("loginError").style.display="none"}))});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),o=document.getElementById("resetSuccess"),n=document.getElementById("resetButton");e.addEventListener("submit",s=>{s.preventDefault(),t.style.display="none",o.style.display="none",H(e).then(({json:a})=>{a.success?(o.textContent=a.message,o.style.display="block",n.disabled=!0,a.redirect&&setTimeout(()=>{window.location.href=a.redirect},1200)):(t.textContent=a.error||"Unable to reset password.",t.style.display="block")}).catch(a=>{m.error("Reset-password AJAX error:",a),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),o=document.getElementById("shoutSubmitBtn"),n=document.getElementById("shoutMessageInput");window.addEventListener("openModal",s=>{s.detail===e&&n&&(n.value="")}),o.addEventListener("click",()=>{const s=n?n.value.trim():"";if(!s){alert("Please enter a message.");return}if(s.length>500){alert("Message must be 500 characters or fewer.");return}const a=new FormData(t);fetch(t.action,{method:"POST",body:a,credentials:"same-origin"}).then(i=>{if(!i.ok)throw new Error(`Server responded ${i.status}`);return i.text()}).then(()=>{D(e),location.reload()}).catch(i=>{m.error("Failed to post shout:",i),alert("Could not post. Please try again.")})})});var se;(se=document.getElementById("gameFilter"))==null||se.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});document.addEventListener("DOMContentLoaded",()=>{Le()});export{I as a,B as o,Te as s};
