let B=3e3,F=0;function v(e){var o;const t=document.getElementById(e);if(!t){console.error(`Modal ${e} not found`);return}document.body.appendChild(t),(o=document.querySelector(".container"))==null||o.classList.add("modal-open"),F=window.scrollY||window.pageYOffset,document.body.style.top=`-${F}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",B+=10,t.style.zIndex=B;const n=t.querySelector(".modal-backdrop");n&&(n.style.display="block",n.style.zIndex=B-1),document.body.classList.add("body-no-scroll")}function R(e){var o;const t=document.getElementById(e);if(!t)return;const n=t.querySelector(".modal-backdrop");t.style.display="none",n&&(n.style.display="none"),B=Math.max(1050,B-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(o=document.querySelector(".container"))==null||o.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,F)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function N(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const n=document.getElementById("instagramLink");n&&(n.style.display="none",n.href="#");const o=document.getElementById("modalQuestActions");o&&(o.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(s=>s.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(s=>s.remove()),document.body.classList.remove("body-no-scroll")}function ue(e,t){const n=document.getElementById(e);if(n){if(t.gameId!==void 0){const o=n.querySelector('input[name="game_id"]');o&&(o.value=t.gameId)}if(t.questId!==void 0){const o=n.querySelector('input[name="quest_id"]');o&&(o.value=t.questId)}if(t.next!==void 0){const o=n.querySelector('input[name="next"]');o&&(o.value=t.next)}}}function pe(e){ue("loginModal",e),v("loginModal")}function ge(e={}){const t=document.getElementById("registerForm"),n=t.getAttribute("action").split("?")[0],o=[];e.gameId&&o.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&o.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&o.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&o.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",n+(o.length?`?${o.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),R("loginModal"),v("registerModal")}function Q({gameId:e,questId:t=""}){const n=document.getElementById("loginForm"),o=document.getElementById("loginGameId"),s=document.getElementById("loginQuestId"),l=document.getElementById("loginNext"),a=document.getElementById("loginShowJoinCustom"),i=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;o.value=e,s.value=t,a.value="0",l.value=i;const r=n.getAttribute("action").split("?")[0],d=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:i});n.setAttribute("action",`${r}?${d.toString()}`),v("loginModal")}function fe(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",n=document.getElementById("loginNext").value||"",o=document.getElementById("loginShowJoinCustom").value||"",s=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=n,document.getElementById("registerShowJoinCustom").value=o,document.getElementById("registerCustomGameCode").value=s;const l=document.getElementById("registerForm"),a=l.getAttribute("action").split("?")[0],i=new URLSearchParams;e&&i.set("game_id",e),t&&i.set("quest_id",t),n&&i.set("next",n),o&&i.set("show_join_custom",o),s&&i.set("custom_game_code",s),l.setAttribute("action",`${a}?${i.toString()}`),R("loginModal"),v("registerModal")}function be(){var l;const e=((l=document.getElementById("loginEmail"))==null?void 0:l.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const n=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),s=document.getElementById("forgotButton");n&&(n.style.display="none"),o&&(o.style.display="none"),s&&(s.disabled=!1),v("forgotPasswordModal")}function Y(e){const t=document.getElementById("resetForm"),n=document.getElementById("resetToken"),o=t.dataset.baseAction;t.setAttribute("action",o+encodeURIComponent(e)),n.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,v("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(Y(t),history.replaceState(null,"",window.location.pathname)):console.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",n=e.has("game_id");t&&!n&&v("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let n=e.get("game_id")||"";if(!n){const o=e.get("next");if(o)try{const l=new URL(o,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(l)&&(n=l)}catch(s){console.warn("Failed to parse next URL for gameId:",s)}}Q({gameId:n,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let n=e.get("game_id")||"";if(!n)try{const s=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(n=s)}catch(o){console.warn("Could not parse next URL for gameId:",o)}n&&Q({gameId:n,questId:""})});async function O(e,t){try{const n=await fetch(e,{credentials:"same-origin"});if(!n.ok)throw new Error(`HTTP ${n.status}`);const o=await n.text(),s=document.getElementById(t);s&&s.parentNode.removeChild(s);const l=document.createElement("div");l.innerHTML=o.trim();const a=l.firstElementChild;(!a||a.id!==t)&&console.warn(`Expected first element to be #${t}`,a),document.body.appendChild(a),v(t)}catch(n){console.error(`Error loading ${t} from ${e}:`,n),alert("Failed to load data. Please try again later.")}}async function he(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),n=await t.json();return{status:t.status,json:n}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const n=t.getAttribute("data-modal-url"),o=t.getAttribute("data-modal-id");if(!n||!o){console.error("data-modal-url or data-modal-id missing",t);return}O(n,o)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=v;window.closeModal=R;window.openLoginModalWithOptions=pe;window.openRegisterModalWithOptions=ge;window.openLoginModalWithGame=Q;window.registerFromLogin=fe;window.openForgotPasswordModal=be;window.openResetPasswordModal=Y;window.fetchAndShowModal=O;window.submitFormJson=he;window.resetModalContent=N;let L=null,k="points",_;function U(e){const t=document.getElementById("leaderboardModalContent");if(!t){console.error("Leaderboard modal content element not found. Cannot proceed with displaying leaderboard."),alert("Leaderboard modal content element not found. Please ensure the page has loaded completely and the correct ID is used.");return}fetch("/leaderboard_partial?game_id="+e).then(n=>{if(!n.ok)throw new Error("Failed to fetch leaderboard data");return n.json()}).then(n=>{t.innerHTML="",L=n,k="points",ye(t,n,e),Ee(t,n,e),we(t),ve(t),z(),v("leaderboardModal")}).catch(n=>{console.error("Failed to load leaderboard:",n),alert("Failed to load leaderboard data. Please try again.")})}function ye(e,t,n){if(t.games&&t.games.length>1){const o=document.createElement("form");o.method="get",o.action="#";const s=document.createElement("label");s.for="game_Select",s.textContent="Select Game:",o.appendChild(s);const l=document.createElement("select");l.name="game_id",l.id="game_Select",l.className="form-control",l.onchange=()=>o.submit(),t.games.forEach(a=>{const i=document.createElement("option");i.value=a.id,i.textContent=a.title,i.selected=a.id===n,l.appendChild(i)}),o.appendChild(l),e.appendChild(o)}}function we(e){const t=document.createElement("div");t.className="form-check form-switch my-3";const n=document.createElement("input");n.className="form-check-input",n.type="checkbox",n.id="metricToggle";const o=document.createElement("label");o.className="form-check-label",o.htmlFor="metricToggle",o.textContent="Show Completed Quests",n.addEventListener("change",()=>{k=n.checked?"quests":"points",z()}),t.appendChild(n),t.appendChild(o),e.appendChild(t)}function ve(e){const t=document.createElement("table");t.className="table table-striped";const n=document.createElement("thead"),o=document.createElement("tr");["Rank","Player","Points"].forEach((s,l)=>{const a=document.createElement("th");l===2&&(a.id="leaderboardMetricHeader"),a.textContent=s,o.appendChild(a)}),n.appendChild(o),t.appendChild(n),_=document.createElement("tbody"),t.appendChild(_),e.appendChild(t)}function D(e,t,n=!1,o=null){const s=document.createElement("td");if(n){const l=document.createElement("a");l.href="javascript:void(0)",l.onclick=()=>showUserProfileModal(o),l.textContent=t,s.appendChild(l)}else s.textContent=t;e.appendChild(s)}function Ee(e,t,n){if(t.total_game_points&&t.game_goal){const o=document.createElement("div");o.className="completion-meter-container";const s=document.createElement("div");s.className="inspirational-text",s.textContent="It takes a village to enact change…",o.appendChild(s);const l=t.game_goal-t.total_game_points,a=Math.min(t.total_game_points/t.game_goal*100,100),i=document.createElement("div");i.className="meter-label",i.textContent=`Carbon Reduction Points: ${t.total_game_points} / ${t.game_goal} (Remaining: ${l})`,o.appendChild(i);const r=document.createElement("div");r.className="completion-meter",r.id="completionMeter",r.addEventListener("click",()=>showAllSubmissionsModal(n));const d=document.createElement("div");d.className="click-text",d.textContent="Click to view all game submissions!",r.appendChild(d);const c=document.createElement("div");c.className="meter-bar",c.id="meterBar",c.style.height="0%",c.style.opacity="1",c.dataset.label=`${a.toFixed(1)}% Reduced`,r.appendChild(c),o.appendChild(r),e.appendChild(o),setTimeout(()=>{c.style.height=`${a}%`,c.style.opacity=`${1-a/100}`,Ce(a,n)},100)}}function Ce(e,t){const n=document.getElementById("completionMeter"),o=9-Math.min(Math.floor(e/10),9);n.style.backgroundImage=`url('/static/images/leaderboard/smoggy_skyline_${t}_${o}.png')`}function z(){if(!L||!_)return;if(!L.top_users||L.top_users.length===0){_.innerHTML="";const n=document.createElement("tr"),o=document.createElement("td");o.colSpan=3,o.textContent="Join a game to see the leaderboard!",n.appendChild(o),_.appendChild(n);return}_.innerHTML="";const e=document.getElementById("leaderboardMetricHeader");e&&(e.textContent=k==="quests"?"Quests Completed":"Points");const t=[...L.top_users];t.sort((n,o)=>k==="quests"?o.completed_quests-n.completed_quests:o.total_points-n.total_points),t.forEach((n,o)=>{const s=document.createElement("tr");D(s,o+1);const l=n.display_name||n.username;D(s,l,!0,n.user_id);const a=k==="quests"?n.completed_quests:n.total_points;D(s,a),_.appendChild(s)})}window.showLeaderboardModal=U;function Ie(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(a=>{a.addEventListener("updatefound",()=>{const i=a.installing;i.addEventListener("statechange",()=>{i.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&a.sync.register("sync-notifications").catch(i=>console.error("Sync registration failed:",i)),a.periodicSync&&a.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(i=>console.error("Periodic sync registration failed:",i)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in a&&a.sync.register("sync-requests").catch(i=>{console.error("Background sync registration failed:",i)})}).catch(a=>console.error("Service Worker registration failed:",a)),navigator.serviceWorker.addEventListener("message",a=>{a.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),n=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let o=null;const s=document.getElementById("leaderboardNavbarLink");if(t&&(n?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",a=>{a.preventDefault(),o=a,e.hidden=!1,e.addEventListener("click",()=>{o&&(o.prompt(),o.userChoice.then(()=>{o=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!n&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(a=>{a.length&&(e.hidden=!0)})),s&&s.addEventListener("click",a=>{a.preventDefault();const i=s.getAttribute("data-game-id")||0;U(i)}),"windowControlsOverlay"in navigator){let a=function(){const i=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=i.height+"px"};var l=a;navigator.windowControlsOverlay.addEventListener("geometrychange",a),a()}document.querySelectorAll(".modal").forEach(a=>{a.parentNode!==document.body&&document.body.appendChild(a)})}function _e(e){const t=e.value;t==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=t}window.handleGameSelection=_e;function Le(){const e=document.querySelector('meta[name="csrf-token"]');return e?e.getAttribute("content"):""}async function Be(e,t={}){const n={credentials:"same-origin",...t},o=await fetch(e,n),s=await o.json().catch(()=>({}));return{status:o.status,json:s}}function ke(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}typeof window<"u"&&(window.getCSRFToken=Le,window.fetchJson=Be,window.escapeHTML=ke);document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});const K=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=K;let x=0,Z=null,G=!1,H=!1;function $e(e){x=0,Z=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),v("allSubmissionsModal"),ee()}function ee(){const e=x*10;fetch(`/quests/quest/all_submissions?game_id=${Z}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);G=t.is_admin,H=t.has_more,Me(t.submissions,G,x>0),Se(H),x+=1}).catch(t=>{console.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function Me(e,t,n=!1){const o=document.getElementById("allSubmissionsContainer");if(!o){console.error("allSubmissionsContainer element not found.");return}n||(o.innerHTML=""),e.forEach(s=>{const l=document.createElement("div");l.className="submission-card";const a=document.createElement("img");a.src=s.image_url||K,a.alt="Quest Submission",a.className="submission-image";const i=document.createElement("div");i.className="submission-info";const r=document.createElement("p");r.textContent=`User: ${s.user_display_name||s.user_username}`,r.className="submission-user-details";const d=document.createElement("p"),c=new Date(s.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});d.textContent=`Submitted on: ${c}`,d.className="submission-timestamp";const u=document.createElement("p");u.textContent=`Comment: ${s.comment}`,u.className="submission-comment";const g=document.createElement("p");g.textContent=`Twitter: ${s.twitter_url||"N/A"}`,g.className="submission-comment";const m=document.createElement("p");m.textContent=`Facebook: ${s.fb_url||"N/A"}`,m.className="submission-comment";const p=document.createElement("p");if(p.textContent=`Instagram: ${s.instagram_url||"N/A"}`,p.className="submission-comment",i.appendChild(r),i.appendChild(d),i.appendChild(u),i.appendChild(g),i.appendChild(m),i.appendChild(p),t){const f=document.createElement("button");f.textContent="Delete",f.className="button delete-button",f.addEventListener("click",function(y){y.stopPropagation(),xe(s.id)}),l.appendChild(f)}l.appendChild(a),l.appendChild(i),l.addEventListener("click",function(){showSubmissionDetail({url:s.image_url||s.video_url,video_url:s.video_url,comment:s.comment,user_id:s.user_id,user_display_name:s.user_display_name||s.user_username,user_profile_picture:s.user_profile_picture,twitter_url:s.twitter_url,fb_url:s.fb_url,instagram_url:s.instagram_url,verification_type:"image"}),v("submissionDetailModal")}),o.appendChild(l)})}function xe(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{console.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Se(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{ee()})});window.showAllSubmissionsModal=$e;document.addEventListener("DOMContentLoaded",function(){Te()});function Te(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(n=>{const o=document.createElement("tr");o.setAttribute("data-badge-id",n.id);const s=n.image?`<img src="${n.image}" height="50" alt="Badge Image">`:"No Image";o.innerHTML=`
                    <td class="badge-image-manage">${s}</td>
                    <td class="badge-name">${n.name}</td>
                    <td class="badge-description">${n.description}</td>
                    <td class="badge-category">${n.category||"None"}</td>
                    <td>
                        <button class="edit-badge" onclick="editBadge(${n.id})">Edit</button>
                        <button onclick="deleteBadge(${n.id})">Delete</button>
                    </td>
                `,e.appendChild(o)})}).catch(t=>console.error("Failed to load badges:",t))}window.allBadges=window.allBadges||[];const S=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=S;function De(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return S}async function Pe(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,o=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,s=await fetch(o,{credentials:"same-origin"});if(!s.ok)throw new Error("Error fetching badges");const l=await s.json();return window.allBadges=l.badges,window.allBadges}async function te(){if(!window.allBadges||window.allBadges.length===0)try{await Pe()}catch(e){console.error("Error loading badges:",e),window.allBadges=[]}}function Ae(e){return e?`<ul>${e.split(",").map(n=>`<li>${escapeHTML(n.trim())}</li>`).join("")}</ul>`:""}function qe(e){return window.allBadges.find(t=>t.id==e)}function Fe(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||S}}async function Re(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const n=await t.json();return n.userCompletion?n.userCompletion.completions:0}function Ne(e,t,n,o,s,l,a){const i=document.getElementById("badgeModalTitle"),r=document.getElementById("badgeModalImage"),d=document.getElementById("badgeModalText");i.textContent=e.name,r.src=De(e.image)||S;let c="";if(l){const g=`<a href="#" onclick="openQuestDetailModal('${l}')">${escapeHTML(a)}</a>`;c=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${n}</p><p>${s?"You have earned this badge.":"Complete "+g+" to earn this badge."}</p>`}else c=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${n}</p>${o}<p>${s?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const u=e.description||"No description available.";s?(r.style.filter="none",r.oncontextmenu=null,d.innerHTML=`<p><strong>Awarded!</strong></p>${c}<p>${escapeHTML(u)}</p>`):(r.style.filter="grayscale(100%) opacity(0.5)",r.oncontextmenu=g=>(g.preventDefault(),!1),d.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${c}<p>${escapeHTML(u)}</p>`)}async function Qe(e){const t=e.getAttribute("data-badge-id"),n=e.getAttribute("data-task-name"),o=e.getAttribute("data-task-id"),s=e.getAttribute("data-badge-awarded-count"),l=e.getAttribute("data-user-completions"),a=parseInt(s,10),i=parseInt(l,10)||0,r=Ae(n),d=o?o.split(",").map(p=>p.trim()).filter(Boolean):[],c=d.length===1?d[0]:null;await te();const u=qe(t)||Fe(e);let g=i;if(c)try{g=await Re(c)}catch(p){console.error("Error fetching user completions:",p)}const m=g>=a;Ne(u,a,g,r,m,c,n),v("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{te()});window.openBadgeModal=Qe;document.addEventListener("DOMContentLoaded",()=>{});let P;function Oe(e){const t=document.getElementById("deleteGameModal"),n=document.getElementById("deleteGameForm"),o=document.getElementById("deleteGameConfirmInput"),s=document.getElementById("deleteGameCountdown"),l=document.getElementById("deleteGameTimer"),a=document.getElementById("deleteGameConfirmBtn");t.dataset.gameId=e,n.action=`/games/delete_game/${e}`,o.value="",a.disabled=!0,s.hidden=!0,l.textContent="5",v("deleteGameModal")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),n=document.getElementById("deleteGameCountdown"),o=document.getElementById("deleteGameTimer"),s=document.getElementById("deleteGameUndo"),l=document.getElementById("deleteGameForm");e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let a=5;n.hidden=!1,o.textContent=a.toString(),P=setInterval(()=>{a-=1,o.textContent=a.toString(),a<=0&&(clearInterval(P),l.submit())},1e3)}),s.addEventListener("click",()=>{clearInterval(P),n.hidden=!0,o.textContent="5",e.value="",t.disabled=!0})});window.openDeleteGameModal=Oe;document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[n,o]=t[0],s=document.getElementById("flash-overlay");s.querySelector(".flash-content").textContent=o,s.querySelector(".flash-modal").classList.add(`flash-${n}`),requestAnimationFrame(()=>{s.classList.add("visible")});function l(){s.classList.remove("visible"),e.removeAttribute("data-messages")}s.querySelector(".flash-close").addEventListener("click",l),s.querySelector(".flash-ok-btn").addEventListener("click",l)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),o=document.getElementById("forgotButton"),s=document.getElementById("forgotEmail"),l=document.getElementById("forgotEmailDisplay"),a=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{a.style.display==="block"&&(l.textContent=s.value)}).observe(a,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",r=>{r.preventDefault(),t.style.display="none",n.style.display="none",window.submitFormJson(e).then(({json:d})=>{d.success?(n.textContent=d.message,n.style.display="block",o.disabled=!0):(t.textContent=d.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function Ue(e){const t="/games/game-info/"+e+"?modal=1";O(t,"gameInfoModal")}window.showGameInfoModal=Ue;$(document).ready(function(){$("#generateAIQuestModal").modal({show:!1})});document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("button[data-game-id]").forEach(n=>{n.addEventListener("click",function(){t(this)})});function t(n){const o=document.getElementById("questCreationForm"),s=n.getAttribute("data-game-id");o?o.addEventListener("submit",function(l){l.preventDefault();const a=document.getElementById("questDescription").value,i=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":i},body:JSON.stringify({description:a,game_id:s})}).then(r=>r.ok?r.json():r.json().then(d=>Promise.reject({status:r.status,statusText:r.statusText,errorMessage:d.error}))).then(r=>{if(r.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=r.generated_quest_html,$("#generateAIQuestModal").modal("show");const d=document.getElementById("generateAIQuestModalForm");d&&d.setAttribute("data-game-id",s),d&&d.addEventListener("submit",function(p){p.preventDefault();const f=new FormData(d),y=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":y},body:f}).then(h=>h.json()).then(h=>{window.location.href="/",console.log(h)}).catch(h=>{console.error("Error:",h)})});const c=document.getElementById("generateAIImage"),u=document.getElementById("badge_description"),g=document.getElementById("aiBadgeImage"),m=document.getElementById("aiBadgeFilename");if(!c||!u||!g||!m){console.error("One or more elements not found in the DOM");return}c.addEventListener("click",function(){console.log("Generate AI Image button clicked");const p=u.value;if(console.log("Badge Description:",p),!p){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:p})}).then(f=>f.json()).then(f=>{if(console.log("Response data:",f),f.error)alert("Error generating badge image: "+f.error);else{const y=`${f.filename}`,h=`static/images/badge_images/${f.filename}`;g.src=h,g.style.display="block",m.value=y}}).catch(f=>{console.error("Fetch error:",f),alert("Error: "+f)})})}}).catch(r=>{alert("Error generating quest: "+(r.errorMessage||r.statusText))})}):console.error("Form '#questCreationForm' not found.")}});function ne(){console.debug("Showing loading modal"),document.getElementById("loadingModal").style.display="flex"}function oe(){console.debug("Hiding loading modal"),document.getElementById("loadingModal").style.display="none"}const je=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){console.error("Error refreshing CSRF token:",e)}};setInterval(je,9e5);const Ge=async e=>{try{const n=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),o=n.total_game_points,s=n.game_goal,l=s-o,a=Math.min(o/s*100,100),i=document.getElementById("meterBar"),r=document.querySelector(".meter-label");i&&(i.style.height=`${a}%`),document.documentElement.style.setProperty("--meter-fill-height",`${a}%`),r&&(r.innerText=`Remaining Reduction: ${l} / ${s}`)}catch(t){console.error("Failed to update meter:",t)}};function He(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const n=e.getAttribute("data-game-id");fetch(`/games/get_game/${n}`,{credentials:"same-origin"}).then(o=>{if(!o.ok)throw console.error(`Failed fetching game name; URL returned status ${o.status} (${o.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${o.status}: ${o.statusText}`);return o.json()}).then(o=>{t.textContent=o.name||"Game Not Found"}).catch(o=>{console.error("Error retrieving game name:",o),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",()=>{const i=e.getAttribute("data-game-id");U(i),Ge(i)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&showMySubmissionsModal(currentUserId)});const n=document.getElementById("contactForm");n&&n.addEventListener("submit",async i=>{i.preventDefault();const r=new FormData(n);ne();try{const d=await fetch(n.action,{method:"POST",body:r,headers:{"X-Requested-With":"XMLHttpRequest"}}),c=await d.json();d.ok&&c.success?(alert("Your message has been sent successfully."),closeModal("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{oe()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(i=>{i.innerHTML=i.innerHTML.replace(/<\/?p[^>]*>/g,"")});const s=document.getElementById("questSearchInput"),l=document.getElementById("questCategoryDropdown");s&&s.addEventListener("input",V),l&&l.addEventListener("change",V);const a=document.querySelector("#whats-happening-step");if(a){const i=a.querySelectorAll(".wh-tab-button"),r=a.querySelectorAll(".wh-tab-content");i.forEach(d=>{d.addEventListener("click",()=>{const c=d.getAttribute("data-wh-tab");i.forEach(u=>u.classList.remove("active")),r.forEach(u=>u.classList.remove("active")),d.classList.add("active"),a.querySelector(`#wh-${c}-tab`).classList.add("active")})})}He()});function V(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(o=>{const s=o.querySelector(".quest-title").textContent.toLowerCase(),l=o.dataset.category||"Not Set",a=s.includes(e),i=t==="all"||l===t;o.style.display=a&&i?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(s){s.addEventListener("click",function(){const l=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=l,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",n=e.dataset.joinDemoUrl;let o=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{o=!0}),e.addEventListener("hidden.bs.modal",function(){!o&&!t&&(window.location.href=n)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const n=document.getElementById("passwordError"),o=document.getElementById("forgotContainer"),s=t.dataset.checkUrl;e.addEventListener("submit",d=>{d.preventDefault(),n.style.display="none",o.innerHTML="",window.submitFormJson(e).then(({json:c})=>{if(c.success)window.location.href=c.redirect;else if(n.textContent=c.error,n.style.display="block",c.show_forgot){const u=document.createElement("a");u.href="javascript:void(0)",u.textContent="Forgot password?",u.className="d-block mt-1",u.onclick=window.openForgotPasswordModal,o.appendChild(u)}}).catch(()=>e.submit())});const l=document.getElementById("loginEmail"),a=document.getElementById("loginButton"),i=document.getElementById("emailError");function r(){a.disabled=!0,i.style.display="none",i.textContent=""}r(),l.addEventListener("blur",()=>{const d=l.value.trim();if(!d)return r();fetch(`${s}?email=${encodeURIComponent(d)}`).then(c=>c.json()).then(c=>{c.exists?a.disabled=!1:(a.disabled=!0,i.textContent="This email is not registered. Please register first.",i.style.display="block")}).catch(()=>a.disabled=!1)}),l.addEventListener("input",r)});let W=null,Ve=[];document.addEventListener("DOMContentLoaded",async function(){const e=document.getElementById("game_Data");e&&(W=e.dataset.gameId,await We(),Je(W))});async function We(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");Ve=(await e.json()).badges||[]}catch(e){console.error("Error fetching badges:",e)}}function Je(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const n=document.getElementById("questsBody");n.innerHTML="",t.quests.forEach(o=>{const s=document.createElement("div");s.className="card",s.id=`quest-${o.id}`;const l=o.verification_type.toLowerCase(),a=o.badge_name||"None",i=o.frequency||"Not Set",r=o.category||"Not Set",d=o.badge_awarded||"Not Set";s.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${o.title}</h5>
                        <div class="card-text editable" data-name="description">${o.description}</div>
                        <div class="card-text editable" data-name="tips">${o.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${o.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${o.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${o.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${o.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${o.verification_type}">${l}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${a}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${d}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${o.frequency}">${i}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${r}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" onclick="editQuest(${o.id})">Edit</button>
                            <button class="btn btn-danger" onclick="deleteQuest(${o.id})">Delete</button>
                            <button class="btn btn-info" onclick="window.location.href = '/quests/generate_qr/${o.id}'">Generate QR Code</button>
                        </div>
                    </div>
                `,n.appendChild(s)})}).catch(t=>console.error("Failed to load quests:",t))}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),n=e.querySelector("#notifLoading"),o=e.querySelector("li.dropdown-footer"),s=o.querySelector("#loadMoreBtn"),l=e.dataset.url;let a=0,i=1;const r=parseInt(e.dataset.perPage,10)||10,d={follow:({from_user_name:m,from_user_id:p})=>({text:`Now following ${m}`,onclick:`showUserProfileModal(${p}); return false;`}),followed_by:({follower_name:m,follower_id:p})=>({text:`${m} is now following you`,onclick:`showUserProfileModal(${p}); return false;`}),submission:({actor_name:m,quest_name:p,submission_id:f})=>({text:`${m} submitted a new “${p}” quest`,onclick:`fetch('/quests/submissions/${f}').then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),profile_message:({from_user_name:m,content:p,profile_user_id:f})=>({text:`${m} says “${p}”`,onclick:`showUserProfileModal(${f}); return false;`}),profile_reply:({from_user_name:m,content:p,profile_user_id:f})=>({text:`${m} replied “${p}”`,onclick:`showUserProfileModal(${f}); return false;`}),submission_like:({liker_name:m,submission_id:p})=>({text:`${m} liked your submission`,onclick:`fetch('/quests/submissions/${p}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),submission_reply:({actor_name:m,content:p,submission_id:f})=>({text:`${m} replied “${p}”`,onclick:`fetch('/quests/submissions/${f}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`})};function c(m){const p=d[m.type];let f,y;if(p&&m.payload)try{({text:f,onclick:y}=p(m.payload))}catch(M){console.error(`Error in handler for ${m.type}:`,M)}return(!f||!y)&&(f=m.payload.summary||JSON.stringify(m.payload),y="location.href='/notifications/';"),`
      <a href="#" class="dropdown-item ${m.is_read?"":"fw-bold"}" onclick="${y}">
        ${f}
        <small class="text-muted d-block text-center">
          ${new Date(m.when).toLocaleString()}
        </small>
      </a>
    `}function u(m){m&&m.parentNode===e&&e.removeChild(m)}async function g(m){m===1&&(Array.from(e.children).forEach(h=>{h!==n&&h!==o&&e.removeChild(h)}),a=0),u(n),u(o),e.appendChild(n),e.appendChild(o),n.style.display="",s.disabled=!0;let p;try{p=await fetch(`${l}?page=${m}&per_page=${r}`,{credentials:"include"})}catch(h){n.textContent="Network error.",console.error(h);return}if(!p.ok){n.textContent="Error loading.",console.error("Status:",p.status,p.statusText);return}const f=await p.json();a=f.page,i=f.total_pages,u(n),u(o);const y=t.querySelector(".badge");y&&y.remove(),f.items.forEach(h=>{e.insertAdjacentHTML("beforeend",c(h))}),e.appendChild(n),e.appendChild(o),n.style.display="none",s.disabled=a>=i}t.addEventListener("show.bs.dropdown",()=>{a===0&&g(1)}),s.addEventListener("click",m=>{m.preventDefault(),m.stopPropagation(),a<i&&g(a+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let n;try{({public_key:n}=await t.json())}catch(l){console.error("Push setup failed",l);return}if(!n||await e.pushManager.getSubscription())return;const s=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:Xe(n)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:s})})}catch(t){console.error("Push setup failed",t)}})});function Xe(e){const t="=".repeat((4-e.length%4)%4),n=(e+t).replace(/-/g,"+").replace(/_/g,"/"),o=atob(n),s=new Uint8Array(o.length);for(let l=0;l<o.length;++l)s[l]=o.charCodeAt(l);return s}function se(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const Ye=Number(se("current-user-id")||0),ie=getCSRFToken(),I=window.PLACEHOLDER_IMAGE||se("placeholder-image");window.PLACEHOLDER_IMAGE=I;function ze(e){N(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:n,userCompletion:o,canVerify:s,nextEligibleTime:l}=t;if(!re(n,o.completions,s,e,l)){console.error("populateQuestDetails – required element missing");return}le(n,o.completions,l,s),v("questDetailModal"),j(),ce(e)}).catch(t=>{console.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function ae(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:n,userCompletion:o,canVerify:s,nextEligibleTime:l}=t;if(!re(n,o.completions,s,e,l)){console.error("populateQuestDetails – required element missing");return}le(n,o.completions,l,s),j(),ce(e)}).catch(t=>{console.error("Failed to refresh quest detail modal:",t)})}function j(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((n,o)=>{n.forEach(s=>{if(s.isIntersecting){const l=s.target;l.src=l.getAttribute("data-src"),l.classList.remove("lazyload"),o.unobserve(l)}})});e.forEach(n=>{t.observe(n)})}function re(e,t,n,o,s){const l=t>=e.completion_limit?" - complete":"",a={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let u in a)if(!a[u])return console.error(`Error: Missing element ${u}`),!1;a.modalQuestTitle.innerText=`${e.title}${l}`,a.modalQuestDescription.textContent=e.description,a.modalQuestTips.textContent=e.tips||"No tips available",a.modalQuestPoints.innerText=`${e.points}`,a.modalQuestCategory.innerText=e.category||"No category set";const i=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;a.modalQuestCompletionLimit.innerText=`${i} ${e.frequency}`;const r=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?a.modalQuestBadgeAwarded.innerText=`After ${r}`:a.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":a.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":a.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":a.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":a.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:a.modalQuestVerificationType.innerText="Not specified";break}const d=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:I;a.modalQuestBadgeImage.setAttribute("data-src",d),a.modalQuestBadgeImage.src=I,a.modalQuestBadgeImage.classList.add("lazyload"),a.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",a.modalQuestCompletions.innerText=`Total Completions: ${t}`;const c=s&&new Date(s);return!n&&c&&c>new Date?(a.modalCountdown.innerText=`Next eligible time: ${c.toLocaleString()}`,a.modalCountdown.style.color="red"):(a.modalCountdown.innerText="You are currently eligible to verify!",a.modalCountdown.style.color="green"),et(o,n,e.verification_type),!0}function le(e,t,n,o){const s=document.querySelector(".user-quest-data");[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(a=>{let i=document.getElementById(a.id);i||(i=document.createElement("p"),i.id=a.id,s.appendChild(i)),i.innerText=a.value}),Ke(document.getElementById("modalCountdown"),n,o)}function Ke(e,t,n){if(!n&&t){const o=new Date(t),s=new Date;if(o>s){const l=o-s;e.innerText=`Next eligible time: ${Ze(l)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function Ze(e){const t=Math.floor(e/1e3%60),n=Math.floor(e/(1e3*60)%60),o=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${o}h ${n}m ${t}s`}function et(e,t,n,o){const s=document.querySelector(".user-quest-data");if(s.innerHTML="",t){const l=document.createElement("div");l.id=`verifyQuestForm-${e}`,l.className="verify-quest-form",l.style.display="block";const a=tt(n.trim().toLowerCase(),e);l.innerHTML=a,s.appendChild(l),nt(e)}}function tt(e,t){let n=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${ie}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":n+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":n+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":n+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":n+='<p class="epic-message">Quest is currently paused.</p>';break;default:n+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return n+="</form>",n}function nt(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){console.error("Form container not found for quest ID:",e);return}const n=t.querySelector("form");if(!n){console.error("Form element missing for quest ID:",e);return}n.addEventListener("submit",function(o){it(o,e)})}function A(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function ot(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function st(e,t,n){const o=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!o)return;const s=o.querySelectorAll(".quest-stats-cell");s.length>=2&&(s[0].innerText=t,s[1].innerText=n)}function de(e){A(document.getElementById("twitterLink"),e.twitter_url),A(document.getElementById("facebookLink"),e.fb_url),A(document.getElementById("instagramLink"),e.instagram_url)}let q=!1;async function it(e,t){if(e.preventDefault(),q)return;q=!0;const n=e.target.querySelector('[type="submit"]');n&&(n.disabled=!0);try{const o=e.target.querySelector('input[type="file"]'),s=o?o.files[0]:null;if(s&&s.type.startsWith("video/")&&s.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(s&&s.type.startsWith("image/")&&s.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const l=new FormData(e.target);l.append("user_id",Ye);const a=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:l,credentials:"same-origin",headers:{"X-CSRFToken":ie}});if(!a.ok){if(a.status===403){const r=await a.json();throw r.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(r.message||`Server responded with status ${a.status}`)}throw new Error(`Server responded with status ${a.status}`)}const i=await a.json();if(!i.success)throw new Error(i.message);ot(i.total_points),de(i),st(t,i.new_completion_count,i.total_completion_count),ae(t),e.target.reset()}catch(o){console.error("Submission error:",o),alert(`Error during submission: ${o.message}`)}finally{q=!1,n&&(n.disabled=!1)}}async function ce(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const n=await t.json(),o=document.getElementById("twitterLink"),s=document.getElementById("facebookLink"),l=document.getElementById("instagramLink");if(n&&n.length){const i=n[0],r=document.getElementById("submissionImage"),d=document.getElementById("submissionVideo"),c=document.getElementById("submissionVideoSource"),u=document.getElementById("submissionComment"),g=document.getElementById("submitterProfileLink"),m=document.getElementById("submitterProfileImage"),p=document.getElementById("submitterProfileCaption");i.video_url?(r.hidden=!0,d.hidden=!1,c.src=i.video_url,d.load()):(d.hidden=!0,r.hidden=!1,r.src=i.image_url||I),u.textContent=i.comment||"No comment provided.",g.href=`/profile/${i.user_id}`,m.src=i.user_profile_picture||I,p.textContent=i.user_display_name||i.user_username||`User ${i.user_id}`,de(i)}else[o,s,l].forEach(i=>{i&&(i.style.display="none")});const a=n.slice().reverse().map(i=>({id:i.id,url:i.image_url||(i.video_url?null:I),video_url:i.video_url,alt:"Submission Image",comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name,user_username:i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,quest_id:e}));at(a)}catch(t){console.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function J(e){if(!e)return console.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(o=>t.pathname.toLowerCase().endsWith(o))}catch{return console.error(`Invalid URL detected: ${e}`),!1}return!1}function at(e){const t=document.getElementById("submissionBoard");t.innerHTML="";const n=document.getElementById("questDetailModal").getAttribute("data-placeholder-url")||I,o=J(n)?n:I,s=r=>r.startsWith("/static/"),l=r=>r.replace(/^\/static\//,""),a=window.innerWidth<=480?70:100,i=a*(window.devicePixelRatio||2);e.forEach(r=>{let d;if(r.video_url)d=document.createElement("video"),d.src=r.video_url,d.preload="metadata",d.muted=!0,d.playsInline=!0,d.style.objectFit="cover";else{d=document.createElement("img");const c=J(r.url)?r.url:o,u=s(c)?`/resize_image?path=${encodeURIComponent(l(c))}&width=${i}`:c;d.setAttribute("data-src",u),d.classList.add("lazyload"),d.alt=r.alt||"Submission Image"}d.style.width=`${a}px`,d.style.height="auto",d.style.marginRight="10px",r.video_url||(d.onerror=()=>{s(o)?d.src=`/resize_image?path=${encodeURIComponent(l(o))}&width=${i}`:d.src=o}),d.onclick=()=>showSubmissionDetail(r),t.appendChild(d)}),j()}window.openQuestDetailModal=ze;window.refreshQuestDetailModal=ae;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;e.closest("form");const t=e.closest(".form-group"),n=document.getElementById("registerModal"),o=(n==null?void 0:n.dataset.checkUrl)||"/auth/check_email",s=document.createElement("div");s.id="existingUserLogin",s.style.display="none",s.innerHTML=`  
    <div class="alert alert-info">This email is already registered. Enter your password to log in.</div>  
    <div class="form-group">  
      <label for="existingUserPassword">Password</label>  
      <input type="password" id="existingUserPassword" class="form-control" autocomplete="current-password">
      <div id="loginError" class="text-danger mt-1" style="display: none;"></div>  
    </div>  
    <div class="form-group">  
      <button type="button" id="loginWithExistingBtn" class="btn btn-primary">Login</button>  
    </div>  
  `,t.insertAdjacentElement("afterend",s),e.addEventListener("blur",()=>{const l=e.value.trim();l&&fetch(`${o}?email=${encodeURIComponent(l)}`).then(a=>a.json()).then(a=>{a.exists?s.style.display="block":s.style.display="none"}).catch(a=>{console.error("Error checking email:",a),s.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const l=e.value.trim(),a=document.getElementById("existingUserPassword").value,i=document.getElementById("loginError"),r=document.getElementById("gameIdField").value,d=document.getElementById("questIdField").value,c=document.getElementById("nextField").value,u=new FormData;u.append("email",l),u.append("password",a),u.append("remember_me","true"),r&&u.append("game_id",r),d&&u.append("quest_id",d),c&&u.append("next",c),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:u,credentials:"same-origin"}).then(g=>g.json().then(m=>({status:g.status,payload:m}))).then(({status:g,payload:m})=>{m.success?window.location.href=m.redirect:(i.textContent=m.error,i.style.display="block")}).catch(g=>{console.error("Login error:",g),i.textContent="An error occurred. Please try again.",i.style.display="block"})}),e.addEventListener("input",()=>{s.style.display="none",document.getElementById("loginError").style.display="none"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),n=document.getElementById("resetSuccess"),o=document.getElementById("resetButton");e.addEventListener("submit",s=>{s.preventDefault(),t.style.display="none",n.style.display="none",window.submitFormJson(e).then(({json:l})=>{l.success?(n.textContent=l.message,n.style.display="block",o.disabled=!0,l.redirect&&setTimeout(()=>{window.location.href=l.redirect},1200)):(t.textContent=l.error||"Unable to reset password.",t.style.display="block")}).catch(l=>{console.error("Reset-password AJAX error:",l),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),n=document.getElementById("shoutSubmitBtn"),o=document.getElementById("shoutMessageInput");window.addEventListener("openModal",s=>{s.detail===e&&o&&(o.value="")}),n.addEventListener("click",()=>{const s=o?o.value.trim():"";if(!s){alert("Please enter a message.");return}if(s.length>500){alert("Message must be 500 characters or fewer.");return}const l=new FormData(t);fetch(t.action,{method:"POST",body:l,credentials:"same-origin"}).then(a=>{if(!a.ok)throw new Error(`Server responded ${a.status}`);return a.text()}).then(()=>{closeModal(e),location.reload()}).catch(a=>{console.error("Failed to post shout:",a),alert("Could not post. Please try again.")})})});document.addEventListener("DOMContentLoaded",()=>{const e=i=>document.querySelector(i);if(!e("#submissionDetailModal"))return;const n=()=>getCSRFToken(),o=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.showSubmissionDetail=function(i){const r=e("#submissionDetailModal");r.dataset.submissionId=i.id,r.dataset.questId=i.quest_id||"";const d=Number(r.dataset.currentUserId),c=Number(i.user_id)===d,u=r.dataset.isAdmin==="True"||r.dataset.isAdmin==="true",g=e("#editPhotoBtn"),m=e("#photoEditControls"),p=e("#submissionPhotoInput"),f=e("#savePhotoBtn"),y=e("#cancelPhotoBtn"),h=e("#deleteSubmissionBtn");g.hidden=!c,h.hidden=!(c||u),m.hidden=!0,g.addEventListener("click",()=>{m.hidden=!1,g.hidden=!0}),y.addEventListener("click",()=>{p.value="",m.hidden=!0,g.hidden=!1}),h.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const E=r.dataset.submissionId;fetch(`/quests/quest/delete_submission/${E}`,{method:"DELETE",headers:{"X-CSRF-Token":n()}}).then(w=>w.json()).then(w=>{if(!w.success)throw new Error(w.message||"Delete failed");closeModal("submissionDetailModal"),N(),r.dataset.questId&&refreshQuestDetailModal(r.dataset.questId),alert("Submission deleted successfully.")}).catch(w=>alert("Error deleting submission: "+w.message))}),f.addEventListener("click",()=>{const E=r.dataset.submissionId,w=p.files[0];if(!w)return alert("Please select an image first.");if(w.type.startsWith("video/")&&w.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(w.type.startsWith("image/")&&w.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const T=new FormData;w.type.startsWith("video/")?T.append("video",w):T.append("photo",w),fetch(`/quests/submission/${E}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":n()},body:T}).then(C=>C.json()).then(C=>{if(!C.success)throw new Error(C.message||"Upload failed");C.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=C.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=C.image_url),y.click()}).catch(C=>alert(C.message))}),e("#submissionReplyEdit").hidden=c,e("#postReplyBtn").hidden=c,e("#ownerNotice").hidden=!c;const M=e("#submissionRepliesContainer");c?M.hidden=!0:M.hidden=!1;const b={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};b.profileImg.src=i.user_profile_picture||o,b.profileImgOverlay.src=b.profileImg.src,b.profileCap.textContent=i.user_display_name||i.user_username||"—",b.profileLink.onclick=E=>{E.preventDefault(),showUserProfileModal(i.user_id)},b.imgOverlay.parentElement.onclick=b.profileLink.onclick;const me=o;i.video_url?(b.img.hidden=!0,b.video.hidden=!1,b.videoSource.src=i.video_url,b.video.load()):(b.video.hidden=!0,b.img.hidden=!1,b.img.src=i.url||me),b.commentRead.textContent=i.comment||"No comment provided.",["tw","fb","ig"].forEach(E=>{const w=E==="tw"?"twitter_url":E==="fb"?"fb_url":"instagram_url";try{new URL(i[w]),b.social[E].href=i[w],b.social[E].style.display="inline-block"}catch{b.social[E].style.display="none"}}),c?(b.editBtn.hidden=!1,b.readBox.hidden=!1):b.editBtn.hidden=b.readBox.hidden=b.commentEdit.hidden=b.editBox.hidden=!0,l(),v("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),s(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const i=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${i}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(r=>{if(!r.ok)throw new Error(r.status);return r.json()}).then(r=>{if(!r.success)throw new Error(r.message||"Save failed");e("#submissionComment").textContent=r.comment||"No comment provided.",s(!1)}).catch(r=>alert(`Could not save comment: ${r.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>s(!1));function s(i){e("#submissionComment").hidden=i,e("#commentReadButtons").hidden=i,e("#submissionCommentEdit").hidden=!i,e("#commentEditButtons").hidden=!i}function l(){const i=e("#submissionDetailModal").dataset.submissionId;i&&(fetch(`/quests/submissions/${i}`,{credentials:"same-origin"}).then(r=>r.json()).then(r=>{e("#submissionLikeCount").textContent=r.like_count||0,e("#submissionLikeBtn").classList.toggle("active",r.liked_by_current_user)}),fetch(`/quests/submission/${i}/replies`,{credentials:"same-origin"}).then(r=>r.json()).then(r=>{const d=e("#submissionRepliesList");d.innerHTML="",r.replies.forEach(m=>{const p=document.createElement("div");p.className="reply mb-1",p.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${m.user_id}">
              <strong>${m.user_display}</strong>
            </a>: ${m.content}
          `,p.querySelector(".reply-user-link").addEventListener("click",y=>{y.preventDefault(),showUserProfileModal(m.user_id)}),d.appendChild(p)});const c=e("#submissionReplyEdit"),u=e("#postReplyBtn"),g=e("#replyLimitMessage");if(r.replies.length>=10){if(c.disabled=!0,u.disabled=!0,!g){const m=document.createElement("div");m.id="replyLimitMessage",m.className="text-muted mt-2",m.textContent="Maximum replies reached, sorry.",c.parentNode.insertBefore(m,c)}}else c.disabled=!1,u.disabled=!1,g&&g.remove()}))}e("#submissionLikeBtn").addEventListener("click",()=>{const i=e("#submissionLikeBtn"),r=e("#submissionDetailModal").dataset.submissionId,d=i.classList.contains("active");fetch(`/quests/submission/${r}/like`,{method:d?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()}}).then(c=>{if(!c.ok)throw new Error(c.status);return c.json()}).then(c=>{if(!c.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=c.like_count,i.classList.toggle("active",c.liked)}).catch(c=>alert(c.message))}),e("#postReplyBtn").addEventListener("click",()=>{const i=e("#submissionDetailModal").dataset.submissionId,r=e("#submissionReplyEdit");e("#postReplyBtn");const d=r.value.trim();!i||!d||fetch(`/quests/submission/${i}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({content:d})}).then(c=>c.json().then(u=>({ok:c.ok,status:c.status,body:u}))).then(({ok:c,status:u,body:g})=>{if(!g.success){if(g.message==="Reply limit of 10 reached"){a();return}if(u===409&&g.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(g.message||"Error")}const m=e("#submissionRepliesList"),p=document.createElement("div");p.className="reply mb-1",p.innerHTML=`<strong>${g.reply.user_display}</strong>: ${g.reply.content}`,m.insertBefore(p,m.firstChild),r.value="",m.children.length>=10&&a()}).catch(c=>alert(c.message))});function a(){const i=e("#submissionReplyEdit"),r=e("#postReplyBtn");if(i.disabled=!0,r.disabled=!0,!e("#replyLimitMessage")){const d=document.createElement("div");d.id="replyLimitMessage",d.className="text-muted mt-2",d.textContent="Maximum replies reached, sorry.",i.parentNode.insertBefore(d,i)}}});document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("submitPhotoForm");let t=!1;e.addEventListener("submit",function(o){if(o.preventDefault(),t)return;t=!0;const s=e.querySelector('input[name="photo"]'),l=s?s.files[0]:null;if(l&&l.type.startsWith("video/")&&l.size>10*1024*1024){n("Video must be 10 MB or smaller.","error"),t=!1;return}if(l&&l.type.startsWith("image/")&&l.size>8*1024*1024){n("Image must be 8 MB or smaller.","error"),t=!1;return}ne();const a=new FormData(e),i=getCSRFToken();a.append("csrf_token",i),fetch(e.action,{method:"POST",body:a,credentials:"same-origin",headers:{"X-CSRF-Token":i}}).then(r=>r.ok?r.json():r.json().then(d=>{throw new Error(d.message)})).then(r=>{r.success?(n(r.message,"success"),window.location.href=r.redirect_url):n(r.message,"error")}).catch(r=>{console.error("Submission error:",r),n("Error during submission: "+r.message,"error")}).finally(()=>{t=!1,oe()})});function n(o,s){const l=document.getElementById("flash-messages");l?l.innerHTML=`
                <div class="flash-message ${s}">
                    ${o}
                </div>
            `:console.warn("Flash messages container not found.")}});var X;(X=document.getElementById("gameFilter"))==null||X.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});function rt(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){console.error("Riding preferences choices missing.");return}const n=document.getElementById("userProfileDetails");if(!n){console.error("Profile details containers not found");return}const o=t.current_user_id===t.user.id;n.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${o?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((r,d)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${d}" name="riding_preferences"
                                      value="${r[0]}"
                                      ${t.user.riding_preferences.includes(r[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${d}">${r[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${o?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(r=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${r.image}" alt="${r.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${r.name}</h3>
                          <p>${r.description}</p>
                          <p><strong>Category:</strong> ${r.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(r=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${r.title}</h3>
                        <p class="text-muted">${r.description}</p>
                        <p><strong>Start Date:</strong> ${r.start_date}</p>
                        <p><strong>End Date:</strong> ${r.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(r=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${r.image_url?`<img src="${r.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${r.quest.title}</p>
                        <p class="text-muted">${r.comment}</p>
                        <p><strong>Submitted At:</strong> ${r.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${r.twitter_url?`<a href="${r.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${r.fb_url?`<a href="${r.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${r.instagram_url?`<a href="${r.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${o?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${r.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const s=document.getElementById("userProfileModalLabel");s.textContent=`${t.user.display_name||t.user.username}'s Profile`;const l=document.getElementById("followBtn");if(l&&(l.style.display=""),!o&&l){let d=function(){r?(l.textContent="Following",l.classList.remove("btn-primary"),l.classList.add("btn-outline-primary")):(l.textContent="Follow",l.classList.remove("btn-outline-primary"),l.classList.add("btn-primary"))};var i=d;l&&(l.style.display="",l.classList.remove("d-none"));let r=t.current_user_following;d(),l.onclick=async()=>{const c=r?"unfollow":"follow",u=await fetch(`/profile/${t.user.username}/${c}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()},credentials:"same-origin"});if(!u.ok){console.error("Follow toggle failed:",await u.text());return}r=!r,d()}}else{const r=document.getElementById("followBtn");r&&(r.style.display="none")}v("userProfileModal");const a=document.getElementById("profileTabSelect");a&&(a.addEventListener("change",r=>{const d=r.target.value,c=document.querySelector(`#profileTabs a[href="#${d}"]`);c&&new bootstrap.Tab(c).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(r=>{r.addEventListener("shown.bs.tab",d=>{a.value=d.target.getAttribute("href").slice(1)})}))}).catch(t=>{console.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});window.showUserProfileModal=rt;document.addEventListener("DOMContentLoaded",()=>{Ie()});
