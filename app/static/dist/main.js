import{s as ge,h as fe}from"./chunk-BU1GfmET.js";let I=3e3,O=0;function w(e){var n;const t=document.getElementById(e);if(!t){console.error(`Modal ${e} not found`);return}document.body.appendChild(t),(n=document.querySelector(".container"))==null||n.classList.add("modal-open"),O=window.scrollY||window.pageYOffset,document.body.style.top=`-${O}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",I+=10,t.style.zIndex=I;const o=t.querySelector(".modal-backdrop");o&&(o.style.display="block",o.style.zIndex=I-1),document.body.classList.add("body-no-scroll")}function x(e){var n;const t=document.getElementById(e);if(!t)return;const o=t.querySelector(".modal-backdrop");t.style.display="none",o&&(o.style.display="none"),I=Math.max(1050,I-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(n=document.querySelector(".container"))==null||n.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,O)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function j(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const o=document.getElementById("instagramLink");o&&(o.style.display="none",o.href="#");const n=document.getElementById("modalQuestActions");n&&(n.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(s=>s.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(s=>s.remove()),document.body.classList.remove("body-no-scroll")}function he(e,t){const o=document.getElementById(e);if(o){if(t.gameId!==void 0){const n=o.querySelector('input[name="game_id"]');n&&(n.value=t.gameId)}if(t.questId!==void 0){const n=o.querySelector('input[name="quest_id"]');n&&(n.value=t.questId)}if(t.next!==void 0){const n=o.querySelector('input[name="next"]');n&&(n.value=t.next)}}}function be(e){he("loginModal",e),w("loginModal")}function ye(e={}){const t=document.getElementById("registerForm"),o=t.getAttribute("action").split("?")[0],n=[];e.gameId&&n.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&n.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&n.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&n.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",o+(n.length?`?${n.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),x("loginModal"),w("registerModal")}function U({gameId:e,questId:t=""}){const o=document.getElementById("loginForm"),n=document.getElementById("loginGameId"),s=document.getElementById("loginQuestId"),i=document.getElementById("loginNext"),a=document.getElementById("loginShowJoinCustom"),r=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;n.value=e,s.value=t,a.value="0",i.value=r;const d=o.getAttribute("action").split("?")[0],c=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:r});o.setAttribute("action",`${d}?${c.toString()}`),w("loginModal")}function Ee(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",o=document.getElementById("loginNext").value||"",n=document.getElementById("loginShowJoinCustom").value||"",s=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=o,document.getElementById("registerShowJoinCustom").value=n,document.getElementById("registerCustomGameCode").value=s;const i=document.getElementById("registerForm"),a=i.getAttribute("action").split("?")[0],r=new URLSearchParams;e&&r.set("game_id",e),t&&r.set("quest_id",t),o&&r.set("next",o),n&&r.set("show_join_custom",n),s&&r.set("custom_game_code",s),i.setAttribute("action",`${a}?${r.toString()}`),x("loginModal"),w("registerModal")}function we(){var i;const e=((i=document.getElementById("loginEmail"))==null?void 0:i.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const o=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),s=document.getElementById("forgotButton");o&&(o.style.display="none"),n&&(n.style.display="none"),s&&(s.disabled=!1),w("forgotPasswordModal")}function K(e){const t=document.getElementById("resetForm"),o=document.getElementById("resetToken"),n=t.dataset.baseAction;t.setAttribute("action",n+encodeURIComponent(e)),o.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,w("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(K(t),history.replaceState(null,"",window.location.pathname)):console.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",o=e.has("game_id");t&&!o&&w("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(openQuestDetailModal(t),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let o=e.get("game_id")||"";if(!o){const n=e.get("next");if(n)try{const i=new URL(n,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(o=i)}catch(s){console.warn("Failed to parse next URL for gameId:",s)}}U({gameId:o,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let o=e.get("game_id")||"";if(!o)try{const s=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(o=s)}catch(n){console.warn("Could not parse next URL for gameId:",n)}o&&U({gameId:o,questId:""})});async function H(e,t){try{const o=await fetch(e,{credentials:"same-origin"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const n=await o.text(),s=document.getElementById(t);s&&s.parentNode.removeChild(s);const i=document.createElement("div");i.innerHTML=n.trim();const a=i.firstElementChild;(!a||a.id!==t)&&console.warn(`Expected first element to be #${t}`,a),document.body.appendChild(a),w(t)}catch(o){console.error(`Error loading ${t} from ${e}:`,o),alert("Failed to load data. Please try again later.")}}async function ve(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),o=await t.json();return{status:t.status,json:o}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-modal-url"),n=t.getAttribute("data-modal-id");if(!o||!n){console.error("data-modal-url or data-modal-id missing",t);return}H(o,n)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=w;window.closeModal=x;window.openLoginModalWithOptions=be;window.openRegisterModalWithOptions=ye;window.openLoginModalWithGame=U;window.registerFromLogin=Ee;window.openForgotPasswordModal=we;window.openResetPasswordModal=K;window.fetchAndShowModal=H;window.submitFormJson=ve;window.resetModalContent=j;let B=null,S="points",k;function G(e){const t=document.getElementById("leaderboardModalContent");if(!t){console.error("Leaderboard modal content element not found. Cannot proceed with displaying leaderboard."),alert("Leaderboard modal content element not found. Please ensure the page has loaded completely and the correct ID is used.");return}fetch("/leaderboard_partial?game_id="+e).then(o=>{if(!o.ok)throw new Error("Failed to fetch leaderboard data");return o.json()}).then(o=>{t.innerHTML="",B=o,S="points",Ce(t,o,e),ke(t,o,e),_e(t),Le(t),Z(),w("leaderboardModal")}).catch(o=>{console.error("Failed to load leaderboard:",o),alert("Failed to load leaderboard data. Please try again.")})}function Ce(e,t,o){if(t.games&&t.games.length>1){const n=document.createElement("form");n.method="get",n.action="#";const s=document.createElement("label");s.for="game_Select",s.textContent="Select Game:",n.appendChild(s);const i=document.createElement("select");i.name="game_id",i.id="game_Select",i.className="form-control",i.onchange=()=>n.submit(),t.games.forEach(a=>{const r=document.createElement("option");r.value=a.id,r.textContent=a.title,r.selected=a.id===o,i.appendChild(r)}),n.appendChild(i),e.appendChild(n)}}function _e(e){const t=document.createElement("div");t.className="form-check form-switch my-3";const o=document.createElement("input");o.className="form-check-input",o.type="checkbox",o.id="metricToggle";const n=document.createElement("label");n.className="form-check-label",n.htmlFor="metricToggle",n.textContent="Show Completed Quests",o.addEventListener("change",()=>{S=o.checked?"quests":"points",Z()}),t.appendChild(o),t.appendChild(n),e.appendChild(t)}function Le(e){const t=document.createElement("table");t.className="table table-striped";const o=document.createElement("thead"),n=document.createElement("tr");["Rank","Player","Points"].forEach((s,i)=>{const a=document.createElement("th");i===2&&(a.id="leaderboardMetricHeader"),a.textContent=s,n.appendChild(a)}),o.appendChild(n),t.appendChild(o),k=document.createElement("tbody"),t.appendChild(k),e.appendChild(t)}function F(e,t,o=!1,n=null){const s=document.createElement("td");if(o){const i=document.createElement("a");i.href="javascript:void(0)",i.onclick=()=>showUserProfileModal(n),i.textContent=t,s.appendChild(i)}else s.textContent=t;e.appendChild(s)}function ke(e,t,o){if(t.total_game_points&&t.game_goal){const n=document.createElement("div");n.className="completion-meter-container";const s=document.createElement("div");s.className="inspirational-text",s.textContent="It takes a village to enact change…",n.appendChild(s);const i=t.game_goal-t.total_game_points,a=Math.min(t.total_game_points/t.game_goal*100,100),r=document.createElement("div");r.className="meter-label",r.textContent=`Carbon Reduction Points: ${t.total_game_points} / ${t.game_goal} (Remaining: ${i})`,n.appendChild(r);const d=document.createElement("div");d.className="completion-meter",d.id="completionMeter",d.addEventListener("click",()=>showAllSubmissionsModal(o));const c=document.createElement("div");c.className="click-text",c.textContent="Click to view all game submissions!",d.appendChild(c);const l=document.createElement("div");l.className="meter-bar",l.id="meterBar",l.style.height="0%",l.style.opacity="1",l.dataset.label=`${a.toFixed(1)}% Reduced`,d.appendChild(l),n.appendChild(d),e.appendChild(n),setTimeout(()=>{l.style.height=`${a}%`,l.style.opacity=`${1-a/100}`,Be(a,o)},100)}}function Be(e,t){const o=document.getElementById("completionMeter"),n=9-Math.min(Math.floor(e/10),9);o.style.backgroundImage=`url('/static/images/leaderboard/smoggy_skyline_${t}_${n}.png')`}function Z(){if(!B||!k)return;if(!B.top_users||B.top_users.length===0){k.innerHTML="";const o=document.createElement("tr"),n=document.createElement("td");n.colSpan=3,n.textContent="Join a game to see the leaderboard!",o.appendChild(n),k.appendChild(o);return}k.innerHTML="";const e=document.getElementById("leaderboardMetricHeader");e&&(e.textContent=S==="quests"?"Quests Completed":"Points");const t=[...B.top_users];t.sort((o,n)=>S==="quests"?n.completed_quests-o.completed_quests:n.total_points-o.total_points),t.forEach((o,n)=>{const s=document.createElement("tr");F(s,n+1);const i=o.display_name||o.username;F(s,i,!0,o.user_id);const a=S==="quests"?o.completed_quests:o.total_points;F(s,a),k.appendChild(s)})}window.showLeaderboardModal=G;function Ie(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(i=>{i.addEventListener("updatefound",()=>{const a=i.installing;a.addEventListener("statechange",()=>{a.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&i.sync.register("sync-notifications").catch(a=>console.error("Sync registration failed:",a)),i.periodicSync&&i.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(a=>console.error("Periodic sync registration failed:",a)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in i&&i.sync.register("sync-requests").catch(a=>{console.error("Background sync registration failed:",a)})}).catch(i=>console.error("Service Worker registration failed:",i)),navigator.serviceWorker.addEventListener("message",i=>{i.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),o=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let n=null;const s=document.getElementById("leaderboardNavbarLink");if(t&&(o?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",i=>{i.preventDefault(),n=i,e.hidden=!1,e.addEventListener("click",()=>{n&&(n.prompt(),n.userChoice.then(()=>{n=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!o&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(i=>{i.length&&(e.hidden=!0)})),s&&s.addEventListener("click",i=>{i.preventDefault();const a=s.getAttribute("data-game-id")||0;G(a)}),"windowControlsOverlay"in navigator){let i=function(){const a=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=a.height+"px"};navigator.windowControlsOverlay.addEventListener("geometrychange",i),i()}document.querySelectorAll(".modal").forEach(i=>{i.parentNode!==document.body&&document.body.appendChild(i)})}function $e(e){const t=e.value;t==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=t}window.handleGameSelection=$e;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});const ee=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=ee;let P=0,te=null,W=!1,J=!1;function Se(e){P=0,te=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),w("allSubmissionsModal"),ne()}function ne(){const e=P*10;fetch(`/quests/quest/all_submissions?game_id=${te}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);W=t.is_admin,J=t.has_more,xe(t.submissions,W,P>0),Te(J),P+=1}).catch(t=>{console.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function xe(e,t,o=!1){const n=document.getElementById("allSubmissionsContainer");if(!n){console.error("allSubmissionsContainer element not found.");return}o||(n.innerHTML=""),e.forEach(s=>{const i=document.createElement("div");i.className="submission-card";const a=document.createElement("img");a.src=s.image_url||ee,a.alt="Quest Submission",a.className="submission-image";const r=document.createElement("div");r.className="submission-info";const d=document.createElement("p");d.textContent=`User: ${s.user_display_name||s.user_username}`,d.className="submission-user-details";const c=document.createElement("p"),l=new Date(s.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});c.textContent=`Submitted on: ${l}`,c.className="submission-timestamp";const u=document.createElement("p");u.textContent=`Comment: ${s.comment}`,u.className="submission-comment";const p=document.createElement("p");p.textContent=`Twitter: ${s.twitter_url||"N/A"}`,p.className="submission-comment";const m=document.createElement("p");m.textContent=`Facebook: ${s.fb_url||"N/A"}`,m.className="submission-comment";const g=document.createElement("p");if(g.textContent=`Instagram: ${s.instagram_url||"N/A"}`,g.className="submission-comment",r.appendChild(d),r.appendChild(c),r.appendChild(u),r.appendChild(p),r.appendChild(m),r.appendChild(g),t){const f=document.createElement("button");f.textContent="Delete",f.className="button delete-button",f.addEventListener("click",function(y){y.stopPropagation(),Me(s.id)}),i.appendChild(f)}i.appendChild(a),i.appendChild(r),i.addEventListener("click",function(){showSubmissionDetail({url:s.image_url||s.video_url,video_url:s.video_url,comment:s.comment,user_id:s.user_id,user_display_name:s.user_display_name||s.user_username,user_profile_picture:s.user_profile_picture,twitter_url:s.twitter_url,fb_url:s.fb_url,instagram_url:s.instagram_url,verification_type:"image"}),w("submissionDetailModal")}),n.appendChild(i)})}function Me(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{console.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Te(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{ne()})});window.showAllSubmissionsModal=Se;document.addEventListener("DOMContentLoaded",()=>{qe(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>Pe(e.dataset.toggleForm))})});function qe(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(o=>{const n=document.createElement("tr");n.dataset.badgeId=o.id;const s=o.image?`<img src="${o.image}" height="50" alt="Badge Image">`:"No Image";n.innerHTML=`
                    <td class="badge-image-manage">${s}</td>
                    <td class="badge-name">${o.name}</td>
                    <td class="badge-description">${o.description}</td>
                    <td class="badge-category">${o.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${o.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${o.id}">Delete</button>
                    </td>
                `,n.querySelector(".edit-badge").addEventListener("click",()=>Ae(o.id)),n.querySelector(".delete-badge").addEventListener("click",()=>Re(o.id)),e.appendChild(n)})}).catch(t=>console.error("Failed to load badges:",t))}function Pe(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function De(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const o=t.categories||[],n=document.createElement("select");n.className="form-control badge-category-select";const s=document.createElement("option");return s.value="none",s.textContent="None",(!e||e==="none")&&(s.selected=!0),n.appendChild(s),o.forEach(i=>{const a=document.createElement("option");a.value=i,a.textContent=i,i===e&&(a.selected=!0),n.appendChild(a)}),n}).catch(t=>{console.error("Error fetching categories:",t);const o=document.createElement("select");o.className="form-control badge-category-select";const n=document.createElement("option");return n.value="none",n.textContent="None",n.selected=!0,o.appendChild(n),o})}function Ae(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){console.error(`Badge row with ID ${e} not found.`);return}const o=t.querySelector(".badge-name"),n=t.querySelector(".badge-description"),s=t.querySelector(".badge-category"),i=t.querySelector(".badge-image-manage");o.textContent="";const a=document.createElement("input");a.type="text",a.value=o.innerText.trim(),a.className="form-control badge-name-input",o.appendChild(a),n.textContent="";const r=document.createElement("textarea");if(r.className="form-control badge-description-textarea",r.value=n.innerText.trim(),n.appendChild(r),i){i.textContent="";const d=document.createElement("input");d.type="file",d.className="form-control-file badge-image-input",i.appendChild(d)}else console.error("Could not find badge-image-manage cell");De(s.innerText.trim()).then(d=>{s.textContent="",s.appendChild(d);const c=t.querySelector("button.edit-badge");c.innerText="Save",c.onclick=()=>Fe(e)})}function Fe(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),o=new FormData;o.append("name",t.querySelector(".badge-name-input").value.trim()),o.append("description",t.querySelector(".badge-description-textarea").value.trim()),o.append("category",t.querySelector(".badge-category-select").value);const n=t.querySelector(".badge-image-input");n&&n.files.length>0&&o.append("image",n.files[0]);const s=document.querySelector("[name=csrf_token]").value;fetch(`/badges/update/${e}`,{method:"POST",body:o,headers:{"X-CSRFToken":s}}).then(i=>i.json()).then(i=>{i.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+i.message)}).catch(i=>console.error("Error updating badge:",i))}function Re(e){confirm("Are you sure you want to delete this badge?")&&fetch(`/badges/delete/${e}`,{method:"DELETE",headers:{"X-CSRFToken":getCSRFToken()}}).then(t=>t.json()).then(t=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{console.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}window.allBadges=window.allBadges||[];const D=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=D;function Ne(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return D}async function Qe(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,n=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,s=await fetch(n,{credentials:"same-origin"});if(!s.ok)throw new Error("Error fetching badges");const i=await s.json();return window.allBadges=i.badges,window.allBadges}async function oe(){if(!window.allBadges||window.allBadges.length===0)try{await Qe()}catch(e){console.error("Error loading badges:",e),window.allBadges=[]}}function Oe(e){return e?`<ul>${e.split(",").map(o=>`<li>${escapeHTML(o.trim())}</li>`).join("")}</ul>`:""}function je(e){return window.allBadges.find(t=>t.id==e)}function Ue(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||D}}async function He(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const o=await t.json();return o.userCompletion?o.userCompletion.completions:0}function Ge(e,t,o,n,s,i,a){const r=document.getElementById("badgeModalTitle"),d=document.getElementById("badgeModalImage"),c=document.getElementById("badgeModalText");if(!r||!d||!c){console.error("Badge modal elements missing");return}r.textContent=e.name,d.src=Ne(e.image)||D;let l="";if(i){const p=`<a href="#" onclick="openQuestDetailModal('${i}')">${escapeHTML(a)}</a>`;l=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${o}</p><p>${s?"You have earned this badge.":"Complete "+p+" to earn this badge."}</p>`}else l=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${o}</p>${n}<p>${s?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const u=e.description||"No description available.";s?(d.style.filter="none",d.oncontextmenu=null,c.innerHTML=`<p><strong>Awarded!</strong></p>${l}<p>${escapeHTML(u)}</p>`):(d.style.filter="grayscale(100%) opacity(0.5)",d.oncontextmenu=p=>(p.preventDefault(),!1),c.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${l}<p>${escapeHTML(u)}</p>`)}async function Ve(e){const t=e.getAttribute("data-badge-id"),o=e.getAttribute("data-task-name"),n=e.getAttribute("data-task-id"),s=e.getAttribute("data-badge-awarded-count"),i=e.getAttribute("data-user-completions"),a=parseInt(s,10),r=parseInt(i,10)||0,d=Oe(o),c=n?n.split(",").map(g=>g.trim()).filter(Boolean):[],l=c.length===1?c[0]:null;await oe();const u=je(t)||Ue(e);let p=r;if(l)try{p=await He(l)}catch(g){console.error("Error fetching user completions:",g)}const m=p>=a;Ge(u,a,p,d,m,l,o),w("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{oe()});window.openBadgeModal=Ve;document.addEventListener("DOMContentLoaded",()=>{});let R;function We(e){const t=document.getElementById("deleteGameModal"),o=document.getElementById("deleteGameForm"),n=document.getElementById("deleteGameConfirmInput"),s=document.getElementById("deleteGameCountdown"),i=document.getElementById("deleteGameTimer"),a=document.getElementById("deleteGameConfirmBtn");if(!t||!o||!n||!s||!i||!a){console.warn("Delete game modal elements missing");return}t.dataset.gameId=e,o.action=`/games/delete_game/${e}`,n.value="",a.disabled=!0,s.hidden=!0,i.textContent="5",w("deleteGameModal")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),o=document.getElementById("deleteGameCountdown"),n=document.getElementById("deleteGameTimer"),s=document.getElementById("deleteGameUndo"),i=document.getElementById("deleteGameForm");!e||!t||!o||!n||!s||!i||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let a=5;o.hidden=!1,n.textContent=a.toString(),R=setInterval(()=>{a-=1,n.textContent=a.toString(),a<=0&&(clearInterval(R),i.submit())},1e3)}),s.addEventListener("click",()=>{clearInterval(R),o.hidden=!0,n.textContent="5",e.value="",t.disabled=!0}))});window.openDeleteGameModal=We;document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[o,n]=t[0],s=document.getElementById("flash-overlay");s.querySelector(".flash-content").textContent=n,s.querySelector(".flash-modal").classList.add(`flash-${o}`),requestAnimationFrame(()=>{s.classList.add("visible")});function i(){s.classList.remove("visible"),e.removeAttribute("data-messages")}s.querySelector(".flash-close").addEventListener("click",i),s.querySelector(".flash-ok-btn").addEventListener("click",i)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),n=document.getElementById("forgotButton"),s=document.getElementById("forgotEmail"),i=document.getElementById("forgotEmailDisplay"),a=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{a.style.display==="block"&&(i.textContent=s.value)}).observe(a,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",d=>{d.preventDefault(),t.style.display="none",o.style.display="none",window.submitFormJson(e).then(({json:c})=>{c.success?(o.textContent=c.message,o.style.display="block",n.disabled=!0):(t.textContent=c.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function Je(e){const t="/games/game-info/"+e+"?modal=1";H(t,"gameInfoModal")}window.showGameInfoModal=Je;$(document).ready(function(){$("#generateAIQuestModal").modal({show:!1})});document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("button[data-game-id]").forEach(o=>{o.addEventListener("click",function(){t(this)})});function t(o){const n=document.getElementById("questCreationForm"),s=o.getAttribute("data-game-id");n?n.addEventListener("submit",function(i){i.preventDefault();const a=document.getElementById("questDescription").value,r=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":r},body:JSON.stringify({description:a,game_id:s})}).then(d=>d.ok?d.json():d.json().then(c=>Promise.reject({status:d.status,statusText:d.statusText,errorMessage:c.error}))).then(d=>{if(d.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=d.generated_quest_html,$("#generateAIQuestModal").modal("show");const c=document.getElementById("generateAIQuestModalForm");c&&c.setAttribute("data-game-id",s),c&&c.addEventListener("submit",function(g){g.preventDefault();const f=new FormData(c),y=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":y},body:f}).then(b=>b.json()).then(b=>{window.location.href="/",console.log(b)}).catch(b=>{console.error("Error:",b)})});const l=document.getElementById("generateAIImage"),u=document.getElementById("badge_description"),p=document.getElementById("aiBadgeImage"),m=document.getElementById("aiBadgeFilename");if(!l||!u||!p||!m){console.error("One or more elements not found in the DOM");return}l.addEventListener("click",function(){console.log("Generate AI Image button clicked");const g=u.value;if(console.log("Badge Description:",g),!g){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:g})}).then(f=>f.json()).then(f=>{if(console.log("Response data:",f),f.error)alert("Error generating badge image: "+f.error);else{const y=`${f.filename}`,b=`static/images/badge_images/${f.filename}`;p.src=b,p.style.display="block",m.value=y}}).catch(f=>{console.error("Fetch error:",f),alert("Error: "+f)})})}}).catch(d=>{alert("Error generating quest: "+(d.errorMessage||d.statusText))})}):console.error("Form '#questCreationForm' not found.")}});const Xe=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){console.error("Error refreshing CSRF token:",e)}};setInterval(Xe,9e5);const Ye=async e=>{try{const o=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),n=o.total_game_points,s=o.game_goal,i=s-n,a=Math.min(n/s*100,100),r=document.getElementById("meterBar"),d=document.querySelector(".meter-label");r&&(r.style.height=`${a}%`),document.documentElement.style.setProperty("--meter-fill-height",`${a}%`),d&&(d.innerText=`Remaining Reduction: ${i} / ${s}`)}catch(t){console.error("Failed to update meter:",t)}};function ze(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const o=e.getAttribute("data-game-id");fetch(`/games/get_game/${o}`,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw console.error(`Failed fetching game name; URL returned status ${n.status} (${n.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${n.status}: ${n.statusText}`);return n.json()}).then(n=>{t.textContent=n.name||"Game Not Found"}).catch(n=>{console.error("Error retrieving game name:",n),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",()=>{const r=e.getAttribute("data-game-id");G(r),Ye(r)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&showAllSubmissionsModal(currentUserId)});const o=document.getElementById("contactForm");o&&o.addEventListener("submit",async r=>{r.preventDefault();const d=new FormData(o);ge();try{const c=await fetch(o.action,{method:"POST",body:d,headers:{"X-Requested-With":"XMLHttpRequest"}}),l=await c.json();c.ok&&l.success?(alert("Your message has been sent successfully."),x("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{fe()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(r=>{r.innerHTML=r.innerHTML.replace(/<\/?p[^>]*>/g,"")});const s=document.getElementById("questSearchInput"),i=document.getElementById("questCategoryDropdown");s&&s.addEventListener("input",X),i&&i.addEventListener("change",X);const a=document.querySelector("#whats-happening-step");if(a){const r=a.querySelectorAll(".wh-tab-button"),d=a.querySelectorAll(".wh-tab-content");r.forEach(c=>{c.addEventListener("click",()=>{const l=c.getAttribute("data-wh-tab");r.forEach(u=>u.classList.remove("active")),d.forEach(u=>u.classList.remove("active")),c.classList.add("active"),a.querySelector(`#wh-${l}-tab`).classList.add("active")})})}ze()});function X(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(n=>{const s=n.querySelector(".quest-title").textContent.toLowerCase(),i=n.dataset.category||"Not Set",a=s.includes(e),r=t==="all"||i===t;n.style.display=a&&r?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(s){s.addEventListener("click",function(){const i=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=i,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",o=e.dataset.joinDemoUrl;let n=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{n=!0}),e.addEventListener("hidden.bs.modal",function(){!n&&!t&&(window.location.href=o)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const o=document.getElementById("passwordError"),n=document.getElementById("forgotContainer"),s=t.dataset.checkUrl;e.addEventListener("submit",c=>{c.preventDefault(),o.style.display="none",n.innerHTML="",window.submitFormJson(e).then(({json:l})=>{if(l.success)window.location.href=l.redirect;else if(o.textContent=l.error,o.style.display="block",l.show_forgot){const u=document.createElement("a");u.href="javascript:void(0)",u.textContent="Forgot password?",u.className="d-block mt-1",u.onclick=window.openForgotPasswordModal,n.appendChild(u)}}).catch(()=>e.submit())});const i=document.getElementById("loginEmail"),a=document.getElementById("loginButton"),r=document.getElementById("emailError");function d(){a.disabled=!0,r.style.display="none",r.textContent=""}d(),i.addEventListener("blur",()=>{const c=i.value.trim();if(!c)return d();fetch(`${s}?email=${encodeURIComponent(c)}`).then(l=>l.json()).then(l=>{l.exists?a.disabled=!1:(a.disabled=!0,r.textContent="This email is not registered. Please register first.",r.style.display="block")}).catch(()=>a.disabled=!1)}),i.addEventListener("input",d)});let _=null;const Ke={qr_code:"QR Code",photo:"Photo Upload",comment:"Comment",photo_comment:"Photo Upload and Comment",video:"Video Upload"};let se=[];document.addEventListener("DOMContentLoaded",async function(){const e=document.getElementById("game_Data");if(!e)return;_=e.dataset.gameId;const t=document.getElementById("deleteAllQuestsBtn");t&&t.addEventListener("click",et);const o=document.getElementById("importQuestsBtn");o&&o.addEventListener("click",ct),await Ze(),M(_)});async function Ze(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");se=(await e.json()).badges||[]}catch(e){console.error("Error fetching badges:",e)}}function ie(e){const t=document.querySelector(`#quest-${e}`),o={};t.querySelectorAll(".editable").forEach(n=>{o[n.getAttribute("data-name")]=n.innerHTML}),tt(t),nt(t),ot(t),st(t),at(t,e,o)}function et(){confirm("Are you sure you want to delete all quests? This action cannot be undone.")&&fetch(`/quests/game/${_}/get_title`,{method:"GET",headers:{Accept:"application/json"}}).then(e=>{if(!e.ok)throw new Error("Failed to fetch game title");return e.json()}).then(e=>{const t=e.title;confirm(`This will delete all quests for the game: "${t}". Are you absolutely sure? This action cannot be undone.`)&&fetch(`/quests/game/${_}/delete_all`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Failed to delete all quests");return o.json()}).then(o=>{o.success?(alert("All quests deleted successfully"),M(_)):alert(`Failed to delete quests: ${o.message}`)}).catch(o=>{console.error("Error:",o),alert("Failed to delete all quests. Please check the console for more details.")})}).catch(e=>{console.error("Error fetching game title:",e),alert("Failed to fetch game title. Please check the console for more details.")})}function tt(e){const t=e.querySelector('.editable[data-name="verification_type"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="verification_type" class="editable-select">';Object.entries(Ke).forEach(([s,i])=>{const a=o===s.toLowerCase()?"selected":"";n+=`<option value="${s}" ${a}>${i}</option>`}),n+="</select>",t.innerHTML=n}function nt(e){const t=e.querySelector('.editable[data-name="frequency"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="frequency" class="editable-select">';Object.entries({daily:"Daily",weekly:"Weekly",monthly:"Monthly"}).forEach(([i,a])=>{const r=o===i.toLowerCase()?"selected":"";n+=`<option value="${i}" ${r}>${a}</option>`}),n+="</select>",t.innerHTML=n}function ot(e){const t=e.querySelector('.editable[data-name="badge_name"]');let o=t.innerText.trim(),n='<select name="badge_id" class="editable-select"><option value="">None</option>';se.forEach(s=>{const i=o===s.name?"selected":"";n+=`<option value="${s.id}" ${i}>${s.name}</option>`}),n+="</select>",t.innerHTML=n}function st(e,t){[{name:"title",type:"text"},{name:"description",type:"textarea"},{name:"tips",type:"textarea"},{name:"points",type:"number"},{name:"badge_awarded",type:"number"},{name:"completion_limit",type:"number"},{name:"category",type:"text"},{name:"enabled",type:"select",options:["Yes","No"]},{name:"is_sponsored",type:"select",options:["Yes","No"]}].forEach(n=>{const s=e.querySelector(`.editable[data-name="${n.name}"]`);s&&it(s,n)})}function it(e,t){let o=e.getAttribute("data-value")||e.innerHTML.trim(),n;t.type==="select"?(n=document.createElement("select"),n.name=t.name,t.options.forEach(s=>{const i=document.createElement("option");i.value=s,i.text=s,o===i.text&&(i.selected=!0),n.appendChild(i)})):t.type==="textarea"?(n=document.createElement("textarea"),n.name=t.name,n.value=o):(n=document.createElement("input"),n.type=t.type,n.name=t.name,n.value=o),e.innerHTML="",e.appendChild(n)}function at(e,t,o){const n=e.querySelector(".edit-button");n.innerText="Save",n.onclick=()=>lt(t);const s=document.createElement("button");s.innerText="Cancel",s.className="btn btn-secondary ms-2 cancel-button",s.onclick=()=>{rt(e,o,n,t)},n.parentNode.insertBefore(s,n.nextSibling)}function rt(e,t,o,n){Object.entries(t).forEach(([s,i])=>{const a=e.querySelector(`.editable[data-name="${s}"]`);a&&(a.innerHTML=i)}),o.innerText="Edit",o.onclick=()=>ie(n),e.querySelector(".cancel-button").remove()}function lt(e){const t=document.querySelector(`#quest-${e}`);let o={};t.querySelectorAll("input, select, textarea").forEach(n=>{let s=n.value;n.name==="enabled"||n.name==="is_sponsored"?s=n.value==="Yes":n.name==="badge_id"&&s===""&&(s=null),o[n.name]=s}),fetch(`/quests/quest/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":getCSRFToken()},body:JSON.stringify(o)}).then(n=>n.json()).then(n=>{n.success?(alert("Quest updated successfully."),M(_)):alert("Failed to update quest. Error: "+n.message)}).catch(n=>{console.error("Error updating quest:",n),alert("Error updating quest. Please check console for details.")})}function M(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const o=document.getElementById("questsBody");o.innerHTML="",t.quests.forEach(n=>{const s=document.createElement("div");s.className="card",s.id=`quest-${n.id}`;const i=n.verification_type.toLowerCase(),a=n.badge_name||"None",r=n.frequency||"Not Set",d=n.category||"Not Set",c=n.badge_awarded||"Not Set";s.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${n.title}</h5>
                        <div class="card-text editable" data-name="description">${n.description}</div>
                        <div class="card-text editable" data-name="tips">${n.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${n.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${n.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${n.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${n.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${n.verification_type}">${i}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${a}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${c}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${n.frequency}">${r}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${d}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" data-quest-id="${n.id}">Edit</button>
                            <button class="btn btn-danger delete-button" data-quest-id="${n.id}">Delete</button>
                            <button class="btn btn-info qr-button" data-quest-id="${n.id}">Generate QR Code</button>
                        </div>
                    </div>
                `,o.appendChild(s);const l=s.querySelector(".edit-button"),u=s.querySelector(".delete-button"),p=s.querySelector(".qr-button");l&&l.addEventListener("click",()=>ie(n.id)),u&&u.addEventListener("click",()=>dt(n.id)),p&&p.addEventListener("click",()=>mt(n.id))})}).catch(t=>console.error("Failed to load quests:",t))}function dt(e){fetch(`/quests/quest/${e}/delete`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken(),Accept:"application/json"}}).then(t=>{if(!t.ok)throw new Error("Failed to delete quest");return t.json()}).then(t=>{t.success?(alert("Quest deleted successfully"),M(_)):alert(`Failed to delete quest: ${t.message}`)}).catch(t=>{console.error("Error:",t),alert("Failed to delete quest. Please check the console for more details.")})}function ct(){const e=document.getElementById("importQuestsForm"),t=new FormData(e);fetch(`/quests/game/${_}/import_quests`,{method:"POST",body:t,headers:{"X-CSRF-Token":getCSRFToken(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Network response was not ok");return o.json()}).then(o=>{o.success&&o.redirectUrl?(alert("Quests imported successfully"),M(_)):alert("Failed to import quests: "+o.message)}).catch(o=>{console.error("Error importing quests:",o)})}function mt(e){const t=`/quests/generate_qr/${e}`;fetch(t).then(o=>{if(!o.ok)throw new Error("Failed to generate QR code");return o.blob()}).then(o=>{const n=URL.createObjectURL(o);window.open(n,"_blank")}).catch(o=>{console.error("Error generating QR code:",o),alert("Failed to generate QR code. Please check console for more details.")})}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),o=e.querySelector("#notifLoading"),n=e.querySelector("li.dropdown-footer"),s=n.querySelector("#loadMoreBtn"),i=e.dataset.url;let a=0,r=1;const d=parseInt(e.dataset.perPage,10)||10,c={follow:({from_user_name:m,from_user_id:g})=>({text:`Now following ${m}`,onclick:`showUserProfileModal(${g}); return false;`}),followed_by:({follower_name:m,follower_id:g})=>({text:`${m} is now following you`,onclick:`showUserProfileModal(${g}); return false;`}),submission:({actor_name:m,quest_name:g,submission_id:f})=>({text:`${m} submitted a new “${g}” quest`,onclick:`fetch('/quests/submissions/${f}').then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),profile_message:({from_user_name:m,content:g,profile_user_id:f})=>({text:`${m} says “${g}”`,onclick:`showUserProfileModal(${f}); return false;`}),profile_reply:({from_user_name:m,content:g,profile_user_id:f})=>({text:`${m} replied “${g}”`,onclick:`showUserProfileModal(${f}); return false;`}),submission_like:({liker_name:m,submission_id:g})=>({text:`${m} liked your submission`,onclick:`fetch('/quests/submissions/${g}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`}),submission_reply:({actor_name:m,content:g,submission_id:f})=>({text:`${m} replied “${g}”`,onclick:`fetch('/quests/submissions/${f}', { credentials: 'same-origin' }).then(r => r.json()).then(img => showSubmissionDetail(img)); return false;`})};function l(m){const g=c[m.type];let f,y;if(g&&m.payload)try{({text:f,onclick:y}=g(m.payload))}catch(q){console.error(`Error in handler for ${m.type}:`,q)}return(!f||!y)&&(f=m.payload.summary||JSON.stringify(m.payload),y="location.href='/notifications/';"),`
      <a href="#" class="dropdown-item ${m.is_read?"":"fw-bold"}" onclick="${y}">
        ${f}
        <small class="text-muted d-block text-center">
          ${new Date(m.when).toLocaleString()}
        </small>
      </a>
    `}function u(m){m&&m.parentNode===e&&e.removeChild(m)}async function p(m){m===1&&(Array.from(e.children).forEach(b=>{b!==o&&b!==n&&e.removeChild(b)}),a=0),u(o),u(n),e.appendChild(o),e.appendChild(n),o.style.display="",s.disabled=!0;let g;try{g=await fetch(`${i}?page=${m}&per_page=${d}`,{credentials:"include"})}catch(b){o.textContent="Network error.",console.error(b);return}if(!g.ok){o.textContent="Error loading.",console.error("Status:",g.status,g.statusText);return}const f=await g.json();a=f.page,r=f.total_pages,u(o),u(n);const y=t.querySelector(".badge");y&&y.remove(),f.items.forEach(b=>{e.insertAdjacentHTML("beforeend",l(b))}),e.appendChild(o),e.appendChild(n),o.style.display="none",s.disabled=a>=r}t.addEventListener("show.bs.dropdown",()=>{a===0&&p(1)}),s.addEventListener("click",m=>{m.preventDefault(),m.stopPropagation(),a<r&&p(a+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let o;try{({public_key:o}=await t.json())}catch(i){console.error("Push setup failed",i);return}if(!o||await e.pushManager.getSubscription())return;const s=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:ut(o)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:s})})}catch(t){console.error("Push setup failed",t)}})});function ut(e){const t="=".repeat((4-e.length%4)%4),o=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=atob(o),s=new Uint8Array(n.length);for(let i=0;i<n.length;++i)s[i]=n.charCodeAt(i);return s}function ae(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const pt=Number(ae("current-user-id")||0),re=getCSRFToken(),L=window.PLACEHOLDER_IMAGE||ae("placeholder-image");window.PLACEHOLDER_IMAGE=L;function gt(e){j(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:s,nextEligibleTime:i}=t;if(!de(o,n.completions,s,e,i)){console.error("populateQuestDetails – required element missing");return}ce(o,n.completions,i,s),w("questDetailModal"),V(),ue(e)}).catch(t=>{console.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function le(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:s,nextEligibleTime:i}=t;if(!de(o,n.completions,s,e,i)){console.error("populateQuestDetails – required element missing");return}ce(o,n.completions,i,s),V(),ue(e)}).catch(t=>{console.error("Failed to refresh quest detail modal:",t)})}function V(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((o,n)=>{o.forEach(s=>{if(s.isIntersecting){const i=s.target;i.src=i.getAttribute("data-src"),i.classList.remove("lazyload"),n.unobserve(i)}})});e.forEach(o=>{t.observe(o)})}function de(e,t,o,n,s){const i=t>=e.completion_limit?" - complete":"",a={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let u in a)if(!a[u])return console.error(`Error: Missing element ${u}`),!1;a.modalQuestTitle.innerText=`${e.title}${i}`,a.modalQuestDescription.textContent=e.description,a.modalQuestTips.textContent=e.tips||"No tips available",a.modalQuestPoints.innerText=`${e.points}`,a.modalQuestCategory.innerText=e.category||"No category set";const r=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;a.modalQuestCompletionLimit.innerText=`${r} ${e.frequency}`;const d=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?a.modalQuestBadgeAwarded.innerText=`After ${d}`:a.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":a.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":a.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":a.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":a.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:a.modalQuestVerificationType.innerText="Not specified";break}const c=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:L;a.modalQuestBadgeImage.setAttribute("data-src",c),a.modalQuestBadgeImage.src=L,a.modalQuestBadgeImage.classList.add("lazyload"),a.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",a.modalQuestCompletions.innerText=`Total Completions: ${t}`;const l=s&&new Date(s);return!o&&l&&l>new Date?(a.modalCountdown.innerText=`Next eligible time: ${l.toLocaleString()}`,a.modalCountdown.style.color="red"):(a.modalCountdown.innerText="You are currently eligible to verify!",a.modalCountdown.style.color="green"),bt(n,o,e.verification_type),!0}function ce(e,t,o,n){const s=document.querySelector(".user-quest-data");if(!s){console.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(a=>{let r=document.getElementById(a.id);r||(r=document.createElement("p"),r.id=a.id,s.appendChild(r)),r.innerText=a.value}),ft(document.getElementById("modalCountdown"),o,n)}function ft(e,t,o){if(!o&&t){const n=new Date(t),s=new Date;if(n>s){const i=n-s;e.innerText=`Next eligible time: ${ht(i)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function ht(e){const t=Math.floor(e/1e3%60),o=Math.floor(e/(1e3*60)%60),n=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${n}h ${o}m ${t}s`}function bt(e,t,o,n){const s=document.querySelector(".user-quest-data");if(!s){console.error("Parent element .user-quest-data not found");return}if(s.innerHTML="",t){const i=document.createElement("div");i.id=`verifyQuestForm-${e}`,i.className="verify-quest-form",i.style.display="block";const a=yt(o.trim().toLowerCase(),e);i.innerHTML=a,s.appendChild(i),Et(e)}}function yt(e,t){let o=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${re}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":o+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":o+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":o+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":o+='<p class="epic-message">Quest is currently paused.</p>';break;default:o+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return o+="</form>",o}function Et(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){console.error("Form container not found for quest ID:",e);return}const o=t.querySelector("form");if(!o){console.error("Form element missing for quest ID:",e);return}o.addEventListener("submit",function(n){Ct(n,e)})}function N(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function wt(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function vt(e,t,o){const n=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!n)return;const s=n.querySelectorAll(".quest-stats-cell");s.length>=2&&(s[0].innerText=t,s[1].innerText=o)}function me(e){N(document.getElementById("twitterLink"),e.twitter_url),N(document.getElementById("facebookLink"),e.fb_url),N(document.getElementById("instagramLink"),e.instagram_url)}let Q=!1;async function Ct(e,t){if(e.preventDefault(),Q)return;Q=!0;const o=e.target.querySelector('[type="submit"]');o&&(o.disabled=!0);try{const n=e.target.querySelector('input[type="file"]'),s=n?n.files[0]:null;if(s&&s.type.startsWith("video/")&&s.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(s&&s.type.startsWith("image/")&&s.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const i=new FormData(e.target);i.append("user_id",pt);const a=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:i,credentials:"same-origin",headers:{"X-CSRFToken":re}});if(!a.ok){if(a.status===403){const d=await a.json();throw d.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(d.message||`Server responded with status ${a.status}`)}throw new Error(`Server responded with status ${a.status}`)}const r=await a.json();if(!r.success)throw new Error(r.message);wt(r.total_points),me(r),vt(t,r.new_completion_count,r.total_completion_count),le(t),e.target.reset()}catch(n){console.error("Submission error:",n),alert(`Error during submission: ${n.message}`)}finally{Q=!1,o&&(o.disabled=!1)}}async function ue(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const o=await t.json(),n=document.getElementById("twitterLink"),s=document.getElementById("facebookLink"),i=document.getElementById("instagramLink");if(o&&o.length){const r=o[0],d=document.getElementById("submissionImage"),c=document.getElementById("submissionVideo"),l=document.getElementById("submissionVideoSource"),u=document.getElementById("submissionComment"),p=document.getElementById("submitterProfileLink"),m=document.getElementById("submitterProfileImage"),g=document.getElementById("submitterProfileCaption");r.video_url?(d.hidden=!0,c.hidden=!1,l.src=r.video_url,c.load()):(c.hidden=!0,d.hidden=!1,d.src=r.image_url||L),u.textContent=r.comment||"No comment provided.",p.href=`/profile/${r.user_id}`,m.src=r.user_profile_picture||L,g.textContent=r.user_display_name||r.user_username||`User ${r.user_id}`,me(r)}else[n,s,i].forEach(r=>{r&&(r.style.display="none")});const a=o.slice().reverse().map(r=>({id:r.id,url:r.image_url||(r.video_url?null:L),video_url:r.video_url,alt:"Submission Image",comment:r.comment,user_id:r.user_id,user_display_name:r.user_display_name,user_username:r.user_username,user_profile_picture:r.user_profile_picture,twitter_url:r.twitter_url,fb_url:r.fb_url,instagram_url:r.instagram_url,quest_id:e}));_t(a)}catch(t){console.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function Y(e){if(!e)return console.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(n=>t.pathname.toLowerCase().endsWith(n))}catch{return console.error(`Invalid URL detected: ${e}`),!1}return!1}function _t(e){var d;const t=document.getElementById("submissionBoard");if(!t){console.error("submissionBoard element not found");return}t.innerHTML="";const o=((d=document.getElementById("questDetailModal"))==null?void 0:d.getAttribute("data-placeholder-url"))||L,n=Y(o)?o:L,s=c=>c.startsWith("/static/"),i=c=>c.replace(/^\/static\//,""),a=window.innerWidth<=480?70:100,r=a*(window.devicePixelRatio||2);e.forEach(c=>{let l;if(c.video_url)l=document.createElement("video"),l.src=c.video_url,l.preload="metadata",l.muted=!0,l.playsInline=!0,l.style.objectFit="cover";else{l=document.createElement("img");const u=Y(c.url)?c.url:n,p=s(u)?`/resize_image?path=${encodeURIComponent(i(u))}&width=${r}`:u;l.setAttribute("data-src",p),l.classList.add("lazyload"),l.alt=c.alt||"Submission Image"}l.style.width=`${a}px`,l.style.height="auto",l.style.marginRight="10px",c.video_url||(l.onerror=()=>{s(n)?l.src=`/resize_image?path=${encodeURIComponent(i(n))}&width=${r}`:l.src=n}),l.onclick=()=>showSubmissionDetail(c),t.appendChild(l)}),V()}window.openQuestDetailModal=gt;window.refreshQuestDetailModal=le;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;e.closest("form");const t=e.closest(".form-group"),o=document.getElementById("registerModal"),n=(o==null?void 0:o.dataset.checkUrl)||"/auth/check_email",s=document.createElement("div");s.id="existingUserLogin",s.style.display="none",s.innerHTML=`  
    <div class="alert alert-info">This email is already registered. Enter your password to log in.</div>  
    <div class="form-group">  
      <label for="existingUserPassword">Password</label>  
      <input type="password" id="existingUserPassword" class="form-control" autocomplete="current-password">
      <div id="loginError" class="text-danger mt-1" style="display: none;"></div>  
    </div>  
    <div class="form-group">  
      <button type="button" id="loginWithExistingBtn" class="btn btn-primary">Login</button>  
    </div>  
  `,t.insertAdjacentElement("afterend",s),e.addEventListener("blur",()=>{const i=e.value.trim();i&&fetch(`${n}?email=${encodeURIComponent(i)}`).then(a=>a.json()).then(a=>{a.exists?s.style.display="block":s.style.display="none"}).catch(a=>{console.error("Error checking email:",a),s.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const i=e.value.trim(),a=document.getElementById("existingUserPassword").value,r=document.getElementById("loginError"),d=document.getElementById("gameIdField").value,c=document.getElementById("questIdField").value,l=document.getElementById("nextField").value,u=new FormData;u.append("email",i),u.append("password",a),u.append("remember_me","true"),d&&u.append("game_id",d),c&&u.append("quest_id",c),l&&u.append("next",l),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:u,credentials:"same-origin"}).then(p=>p.json().then(m=>({status:p.status,payload:m}))).then(({status:p,payload:m})=>{m.success?window.location.href=m.redirect:(r.textContent=m.error,r.style.display="block")}).catch(p=>{console.error("Login error:",p),r.textContent="An error occurred. Please try again.",r.style.display="block"})}),e.addEventListener("input",()=>{s.style.display="none",document.getElementById("loginError").style.display="none"})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),o=document.getElementById("resetSuccess"),n=document.getElementById("resetButton");e.addEventListener("submit",s=>{s.preventDefault(),t.style.display="none",o.style.display="none",window.submitFormJson(e).then(({json:i})=>{i.success?(o.textContent=i.message,o.style.display="block",n.disabled=!0,i.redirect&&setTimeout(()=>{window.location.href=i.redirect},1200)):(t.textContent=i.error||"Unable to reset password.",t.style.display="block")}).catch(i=>{console.error("Reset-password AJAX error:",i),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),o=document.getElementById("shoutSubmitBtn"),n=document.getElementById("shoutMessageInput");window.addEventListener("openModal",s=>{s.detail===e&&n&&(n.value="")}),o.addEventListener("click",()=>{const s=n?n.value.trim():"";if(!s){alert("Please enter a message.");return}if(s.length>500){alert("Message must be 500 characters or fewer.");return}const i=new FormData(t);fetch(t.action,{method:"POST",body:i,credentials:"same-origin"}).then(a=>{if(!a.ok)throw new Error(`Server responded ${a.status}`);return a.text()}).then(()=>{closeModal(e),location.reload()}).catch(a=>{console.error("Failed to post shout:",a),alert("Could not post. Please try again.")})})});document.addEventListener("DOMContentLoaded",()=>{const e=r=>document.querySelector(r);if(!e("#submissionDetailModal"))return;const o=()=>getCSRFToken(),n=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.showSubmissionDetail=function(r){const d=e("#submissionDetailModal");d.dataset.submissionId=r.id,d.dataset.questId=r.quest_id||"";const c=Number(d.dataset.currentUserId),l=Number(r.user_id)===c,u=d.dataset.isAdmin==="True"||d.dataset.isAdmin==="true",p=e("#editPhotoBtn"),m=e("#photoEditControls"),g=e("#submissionPhotoInput"),f=e("#savePhotoBtn"),y=e("#cancelPhotoBtn"),b=e("#deleteSubmissionBtn");p.hidden=!l,b.hidden=!(l||u),m.hidden=!0,p.addEventListener("click",()=>{m.hidden=!1,p.hidden=!0}),y.addEventListener("click",()=>{g.value="",m.hidden=!0,p.hidden=!1}),b.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const v=d.dataset.submissionId;fetch(`/quests/quest/delete_submission/${v}`,{method:"DELETE",headers:{"X-CSRF-Token":o()}}).then(E=>E.json()).then(E=>{if(!E.success)throw new Error(E.message||"Delete failed");x("submissionDetailModal"),j(),d.dataset.questId&&refreshQuestDetailModal(d.dataset.questId),alert("Submission deleted successfully.")}).catch(E=>alert("Error deleting submission: "+E.message))}),f.addEventListener("click",()=>{const v=d.dataset.submissionId,E=g.files[0];if(!E)return alert("Please select an image first.");if(E.type.startsWith("video/")&&E.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(E.type.startsWith("image/")&&E.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const A=new FormData;E.type.startsWith("video/")?A.append("video",E):A.append("photo",E),fetch(`/quests/submission/${v}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":o()},body:A}).then(C=>C.json()).then(C=>{if(!C.success)throw new Error(C.message||"Upload failed");C.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=C.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=C.image_url),y.click()}).catch(C=>alert(C.message))}),e("#submissionReplyEdit").hidden=l,e("#postReplyBtn").hidden=l,e("#ownerNotice").hidden=!l;const q=e("#submissionRepliesContainer");l?q.hidden=!0:q.hidden=!1;const h={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};h.profileImg.src=r.user_profile_picture||n,h.profileImgOverlay.src=h.profileImg.src,h.profileCap.textContent=r.user_display_name||r.user_username||"—",h.profileLink.onclick=v=>{v.preventDefault(),showUserProfileModal(r.user_id)},h.imgOverlay.parentElement.onclick=h.profileLink.onclick;const pe=n;r.video_url?(h.img.hidden=!0,h.video.hidden=!1,h.videoSource.src=r.video_url,h.video.load()):(h.video.hidden=!0,h.img.hidden=!1,h.img.src=r.url||pe),h.commentRead.textContent=r.comment||"No comment provided.",["tw","fb","ig"].forEach(v=>{const E=v==="tw"?"twitter_url":v==="fb"?"fb_url":"instagram_url";try{new URL(r[E]),h.social[v].href=r[E],h.social[v].style.display="inline-block"}catch{h.social[v].style.display="none"}}),l?(h.editBtn.hidden=!1,h.readBox.hidden=!1):h.editBtn.hidden=h.readBox.hidden=h.commentEdit.hidden=h.editBox.hidden=!0,i(),w("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),s(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${r}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(d=>{if(!d.ok)throw new Error(d.status);return d.json()}).then(d=>{if(!d.success)throw new Error(d.message||"Save failed");e("#submissionComment").textContent=d.comment||"No comment provided.",s(!1)}).catch(d=>alert(`Could not save comment: ${d.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>s(!1));function s(r){e("#submissionComment").hidden=r,e("#commentReadButtons").hidden=r,e("#submissionCommentEdit").hidden=!r,e("#commentEditButtons").hidden=!r}function i(){const r=e("#submissionDetailModal").dataset.submissionId;r&&(fetch(`/quests/submissions/${r}`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{e("#submissionLikeCount").textContent=d.like_count||0,e("#submissionLikeBtn").classList.toggle("active",d.liked_by_current_user)}),fetch(`/quests/submission/${r}/replies`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{const c=e("#submissionRepliesList");c.innerHTML="",d.replies.forEach(m=>{const g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${m.user_id}">
              <strong>${m.user_display}</strong>
            </a>: ${m.content}
          `,g.querySelector(".reply-user-link").addEventListener("click",y=>{y.preventDefault(),showUserProfileModal(m.user_id)}),c.appendChild(g)});const l=e("#submissionReplyEdit"),u=e("#postReplyBtn"),p=e("#replyLimitMessage");if(d.replies.length>=10){if(l.disabled=!0,u.disabled=!0,!p){const m=document.createElement("div");m.id="replyLimitMessage",m.className="text-muted mt-2",m.textContent="Maximum replies reached, sorry.",l.parentNode.insertBefore(m,l)}}else l.disabled=!1,u.disabled=!1,p&&p.remove()}))}e("#submissionLikeBtn").addEventListener("click",()=>{const r=e("#submissionLikeBtn"),d=e("#submissionDetailModal").dataset.submissionId,c=r.classList.contains("active");fetch(`/quests/submission/${d}/like`,{method:c?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()}}).then(l=>{if(!l.ok)throw new Error(l.status);return l.json()}).then(l=>{if(!l.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=l.like_count,r.classList.toggle("active",l.liked)}).catch(l=>alert(l.message))}),e("#postReplyBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId,d=e("#submissionReplyEdit");e("#postReplyBtn");const c=d.value.trim();!r||!c||fetch(`/quests/submission/${r}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":o()},body:JSON.stringify({content:c})}).then(l=>l.json().then(u=>({ok:l.ok,status:l.status,body:u}))).then(({ok:l,status:u,body:p})=>{if(!p.success){if(p.message==="Reply limit of 10 reached"){a();return}if(u===409&&p.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(p.message||"Error")}const m=e("#submissionRepliesList"),g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`<strong>${p.reply.user_display}</strong>: ${p.reply.content}`,m.insertBefore(g,m.firstChild),d.value="",m.children.length>=10&&a()}).catch(l=>alert(l.message))});function a(){const r=e("#submissionReplyEdit"),d=e("#postReplyBtn");if(r.disabled=!0,d.disabled=!0,!e("#replyLimitMessage")){const c=document.createElement("div");c.id="replyLimitMessage",c.className="text-muted mt-2",c.textContent="Maximum replies reached, sorry.",r.parentNode.insertBefore(c,r)}}});var z;(z=document.getElementById("gameFilter"))==null||z.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});function T(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){console.error("Riding preferences choices missing.");return}const o=document.getElementById("userProfileDetails");if(!o){console.error("Profile details containers not found");return}const n=t.current_user_id===t.user.id;o.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${n?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="window.toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((l,u)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${u}" name="riding_preferences"
                                      value="${l[0]}"
                                      ${t.user.riding_preferences.includes(l[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${u}">${l[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${n?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(l=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${l.image}" alt="${l.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${l.name}</h3>
                          <p>${l.description}</p>
                          <p><strong>Category:</strong> ${l.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(l=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${l.title}</h3>
                        <p class="text-muted">${l.description}</p>
                        <p><strong>Start Date:</strong> ${l.start_date}</p>
                        <p><strong>End Date:</strong> ${l.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(l=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${l.image_url?`<img src="${l.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${l.quest.title}</p>
                        <p class="text-muted">${l.comment}</p>
                        <p><strong>Submitted At:</strong> ${l.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${l.twitter_url?`<a href="${l.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${l.fb_url?`<a href="${l.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${l.instagram_url?`<a href="${l.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${n?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${l.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const s=document.getElementById("userProfileModalLabel");s.textContent=`${t.user.display_name||t.user.username}'s Profile`;const i=document.getElementById("followBtn");i&&(i.style.display="");const a=document.getElementById("followerCount");let r=t.user.follower_count;function d(){a&&(a.textContent=`${r} follower${r===1?"":"s"}`)}if(d(),!n&&i){let u=function(){l?(i.textContent="Following",i.classList.remove("btn-primary"),i.classList.add("btn-outline-primary")):(i.textContent="Follow",i.classList.remove("btn-outline-primary"),i.classList.add("btn-primary"))};i&&(i.style.display="",i.classList.remove("d-none"));let l=t.current_user_following;u(),i.onclick=async()=>{const p=l?"unfollow":"follow",m=await fetch(`/profile/${t.user.username}/${p}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()},credentials:"same-origin"});if(!m.ok){console.error("Follow toggle failed:",await m.text());return}l=!l,r+=l?1:-1,u(),d()}}else{const l=document.getElementById("followBtn");l&&(l.style.display="none")}w("userProfileModal");const c=document.getElementById("profileTabSelect");c&&(c.addEventListener("change",l=>{const u=l.target.value,p=document.querySelector(`#profileTabs a[href="#${u}"]`);p&&new bootstrap.Tab(p).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(l=>{l.addEventListener("shown.bs.tab",u=>{c.value=u.target.getAttribute("href").slice(1)})}))}).catch(t=>{console.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function Lt(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){console.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function kt(e){T(e)}function Bt(e){const t=document.getElementById("editProfileForm");if(!t){console.error("Edit profile form not found");return}const o=new FormData(t),n=document.getElementById("profilePictureInput");n.files.length>0&&o.append("profile_picture",n.files[0]);const s=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(i=>{s.push(i.value)}),o.delete("riding_preferences"),s.forEach(i=>{o.append("riding_preferences",i)}),fetch(`/profile/${e}/edit`,{method:"POST",headers:{"X-CSRFToken":getCSRFToken()},body:o}).then(i=>i.json()).then(i=>{if(i.error){let a=`Error: ${i.error}`;if(i.details){const r=[];Object.values(i.details).forEach(d=>{r.push(d.join(", "))}),r.length&&(a+=` - ${r.join("; ")}`)}alert(a)}else alert("Profile updated successfully."),T(e)}).catch(i=>{console.error("Error updating profile:",i),alert("Failed to update profile. Please try again.")})}function It(e){const t=document.getElementById("editBikeForm");if(!t){console.error("Edit bike form not found");return}const o=new FormData(t),n=document.getElementById("bikePicture");n.files.length>0&&o.append("bike_picture",n.files[0]),fetch(`/profile/${e}/edit-bike`,{method:"POST",headers:{"X-CSRFToken":getCSRFToken()},body:o}).then(s=>s.json()).then(s=>{s.error?alert(`Error: ${s.error}`):(alert("Bike details updated successfully."),T(e))}).catch(s=>{console.error("Error updating bike details:",s),alert("Failed to update bike details. Please try again.")})}function $t(e,t,o){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":getCSRFToken()}}).then(n=>n.json()).then(n=>{if(n.success)alert("Submission deleted successfully."),t==="profileSubmissions"&&T(o);else throw new Error(n.message)}).catch(n=>{console.error("Error deleting submission:",n),alert("Error during deletion: "+n.message)})}function St(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&fetch("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":getCSRFToken()}}).then(e=>{if(e.redirected)window.location.href=e.url;else return e.json()}).then(e=>{if(e&&e.error)throw new Error(e.error);alert("Your account has been successfully deleted."),window.location.href="/"}).catch(e=>{console.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}window.showUserProfileModal=T;window.toggleProfileEditMode=Lt;window.cancelProfileEdit=kt;window.saveProfile=Bt;window.saveBike=It;window.deleteSubmission=$t;window.deleteAccount=St;document.addEventListener("DOMContentLoaded",()=>{Ie()});
