const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunk-nuNv6ADB.js","chunk-bAx52a36.js"])))=>i.map(i=>d[i]);
import{l as m,c as v,f as k,e as M,s as pe,h as ge,g as fe}from"./chunk-bAx52a36.js";const be="modulepreload",ye=function(e){return"/static/dist/"+e},W={},G=function(t,n,o){let i=Promise.resolve();if(n&&n.length>0){let a=function(c){return Promise.all(c.map(l=>Promise.resolve(l).then(u=>({status:"fulfilled",value:u}),u=>({status:"rejected",reason:u}))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),d=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));i=a(n.map(c=>{if(c=ye(c),c in W)return;W[c]=!0;const l=c.endsWith(".css"),u=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${c}"]${u}`))return;const f=document.createElement("link");if(f.rel=l?"stylesheet":be,l||(f.as="script"),f.crossOrigin="",f.href=c,d&&f.setAttribute("nonce",d),document.head.appendChild(f),l)return new Promise((g,b)=>{f.addEventListener("load",g),f.addEventListener("error",()=>b(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return i.then(a=>{for(const r of a||[])r.status==="rejected"&&s(r.reason);return t().catch(s)})};let T=3e3,U=0;function B(e){var o;const t=document.getElementById(e);if(!t){m.error(`Modal ${e} not found`);return}document.body.appendChild(t),(o=document.querySelector(".container"))==null||o.classList.add("modal-open"),U=window.scrollY||window.pageYOffset,document.body.style.top=`-${U}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",T+=10,t.style.zIndex=T;const n=t.querySelector(".modal-backdrop");n&&(n.style.display="block",n.style.zIndex=T-1),document.body.classList.add("body-no-scroll")}function D(e){var o;const t=document.getElementById(e);if(!t)return;const n=t.querySelector(".modal-backdrop");t.style.display="none",n&&(n.style.display="none"),T=Math.max(1050,T-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(o=document.querySelector(".container"))==null||o.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,U)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function te(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const n=document.getElementById("instagramLink");n&&(n.style.display="none",n.href="#");const o=document.getElementById("modalQuestActions");o&&(o.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(i=>i.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(i=>i.remove()),document.body.classList.remove("body-no-scroll")}function ne({gameId:e,questId:t=""}){const n=document.getElementById("loginForm"),o=document.getElementById("loginGameId"),i=document.getElementById("loginQuestId"),s=document.getElementById("loginNext"),a=document.getElementById("loginShowJoinCustom"),r=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;o.value=e,i.value=t,a.value="0",s.value=r;const d=n.getAttribute("action").split("?")[0],c=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:r});n.setAttribute("action",`${d}?${c.toString()}`),B("loginModal")}function he(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",n=document.getElementById("loginNext").value||"",o=document.getElementById("loginShowJoinCustom").value||"",i=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=n,document.getElementById("registerShowJoinCustom").value=o,document.getElementById("registerCustomGameCode").value=i;const s=document.getElementById("registerForm"),a=s.getAttribute("action").split("?")[0],r=new URLSearchParams;e&&r.set("game_id",e),t&&r.set("quest_id",t),n&&r.set("next",n),o&&r.set("show_join_custom",o),i&&r.set("custom_game_code",i),s.setAttribute("action",`${a}?${r.toString()}`),D("loginModal"),B("registerModal")}function Ee(){var s;const e=((s=document.getElementById("loginEmail"))==null?void 0:s.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const n=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),i=document.getElementById("forgotButton");n&&(n.style.display="none"),o&&(o.style.display="none"),i&&(i.disabled=!1),B("forgotPasswordModal")}function ve(e){const t=document.getElementById("resetForm"),n=document.getElementById("resetToken"),o=t.dataset.baseAction;t.setAttribute("action",o+encodeURIComponent(e)),n.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,B("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(ve(t),history.replaceState(null,"",window.location.pathname)):m.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",n=e.has("game_id");t&&!n&&B("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(G(()=>Promise.resolve().then(()=>$t),void 0).then(n=>n.openQuestDetailModal(t)),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let n=e.get("game_id")||"";if(!n){const o=e.get("next");if(o)try{const s=new URL(o,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(n=s)}catch(i){m.warn("Failed to parse next URL for gameId:",i)}}ne({gameId:n,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let n=e.get("game_id")||"";if(!n)try{const i=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(n=i)}catch(o){m.warn("Could not parse next URL for gameId:",o)}n&&ne({gameId:n,questId:""})});async function we(e,t){try{const n=await fetch(e,{credentials:"same-origin"});if(!n.ok)throw new Error(`HTTP ${n.status}`);const o=await n.text(),i=document.getElementById(t);i&&i.parentNode.removeChild(i);const s=document.createElement("div");s.innerHTML=o.trim();const a=s.firstElementChild;(!a||a.id!==t)&&m.warn(`Expected first element to be #${t}`,a),document.body.appendChild(a),B(t)}catch(n){m.error(`Error loading ${t} from ${e}:`,n),alert("Failed to load data. Please try again later.")}}async function H(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),n=await t.json();return{status:t.status,json:n}}document.addEventListener("click",e=>{const t=e.target.closest("[data-close-modal]");if(!t)return;e.preventDefault();const n=t.getAttribute("data-close-modal");n&&D(n)});document.addEventListener("click",e=>{const t=e.target.closest("[data-open-modal]");t&&(e.preventDefault(),B(t.getAttribute("data-open-modal")))});document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const n=t.getAttribute("data-modal-url"),o=t.getAttribute("data-modal-id");if(!n||!o){m.error("data-modal-url or data-modal-id missing",t);return}we(n,o)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});function Be(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(s=>{s.addEventListener("updatefound",()=>{const a=s.installing;a.addEventListener("statechange",()=>{a.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&s.sync.register("sync-notifications").catch(a=>m.error("Sync registration failed:",a)),s.periodicSync&&s.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(a=>m.error("Periodic sync registration failed:",a)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in s&&s.sync.register("sync-requests").catch(a=>{m.error("Background sync registration failed:",a)})}).catch(s=>m.error("Service Worker registration failed:",s)),navigator.serviceWorker.addEventListener("message",s=>{s.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),n=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let o=null;const i=document.getElementById("leaderboardNavbarLink");if(t&&(n?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",s=>{s.preventDefault(),o=s,e.hidden=!1,e.addEventListener("click",()=>{o&&(o.prompt(),o.userChoice.then(()=>{o=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!n&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(s=>{s.length&&(e.hidden=!0)})),i&&i.addEventListener("click",async s=>{s.preventDefault();const a=i.getAttribute("data-game-id")||0;(await G(()=>import("./chunk-nuNv6ADB.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(a)}),"windowControlsOverlay"in navigator){let s=function(){const a=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=a.height+"px"};navigator.windowControlsOverlay.addEventListener("geometrychange",s),s()}document.querySelectorAll(".modal").forEach(s=>{s.parentNode!==document.body&&document.body.appendChild(s)})}function Le(e){const t=e.value;t==="join_custom_game"?B("joinCustomGameModal"):window.location.href=t}document.addEventListener("click",e=>{const t=e.target.closest("[data-game-selection]");t&&(e.preventDefault(),Le({value:t.getAttribute("data-game-selection")}))});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});function I(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){m.error("Riding preferences choices missing.");return}const n=document.getElementById("userProfileDetails");if(!n){m.error("Profile details containers not found");return}const o=t.current_user_id===t.user.id;n.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${o?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" id="editProfileBtn">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((p,h)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${h}" name="riding_preferences"
                                      value="${p[0]}"
                                      ${t.user.riding_preferences.includes(p[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${h}">${p[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" id="saveProfileBtn">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" id="cancelProfileBtn">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" id="updatePasswordBtn">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${o?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" id="saveBikeBtn">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(p=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${p.image}" alt="${p.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${p.name}</h3>
                          <p>${p.description}</p>
                          <p><strong>Category:</strong> ${p.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(p=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${p.title}</h3>
                        <p class="text-muted">${p.description}</p>
                        <p><strong>Start Date:</strong> ${p.start_date}</p>
                        <p><strong>End Date:</strong> ${p.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(p=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${p.image_url?`<img src="${p.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${p.quest.title}</p>
                        <p class="text-muted">${p.comment}</p>
                        <p><strong>Submitted At:</strong> ${p.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${p.twitter_url?`<a href="${p.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${p.fb_url?`<a href="${p.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${p.instagram_url?`<a href="${p.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${o?`<button class="btn btn-danger btn-sm mt-2" data-delete-submission="${p.id}">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const i=document.getElementById("userProfileModalLabel");i.textContent=`${t.user.display_name||t.user.username}'s Profile`;const s=document.getElementById("followBtn");s&&(s.style.display="");const a=document.getElementById("followerCount");let r=t.user.follower_count;function d(){a&&(a.textContent=`${r} follower${r===1?"":"s"}`)}if(d(),!o&&s){let h=function(){p?(s.textContent="Following",s.classList.remove("btn-primary"),s.classList.add("btn-outline-primary")):(s.textContent="Follow",s.classList.remove("btn-outline-primary"),s.classList.add("btn-primary"))};s&&(s.style.display="",s.classList.remove("d-none"));let p=t.current_user_following;h(),s.onclick=async()=>{const L=p?"unfollow":"follow",{status:E}=await v(`/profile/${t.user.username}/${L}`,{method:"POST",headers:{"Content-Type":"application/json"}});if(E!==200){m.error("Follow toggle failed");return}p=!p,r+=p?1:-1,h(),d()}}else{const p=document.getElementById("followBtn");p&&(p.style.display="none")}B("userProfileModal");const c=document.getElementById("editProfileBtn");c&&c.addEventListener("click",_e);const l=document.getElementById("saveProfileBtn");l&&l.addEventListener("click",()=>Ce(e));const u=document.getElementById("cancelProfileBtn");u&&u.addEventListener("click",()=>Ie(e));const f=document.getElementById("updatePasswordBtn");f&&f.addEventListener("click",()=>{window.location.href="/auth/update_password"});const g=document.getElementById("saveBikeBtn");g&&g.addEventListener("click",()=>ke(e)),document.querySelectorAll("[data-delete-submission]").forEach(p=>{p.addEventListener("click",()=>{const h=p.getAttribute("data-delete-submission");$e(h,"profileSubmissions",t.user.id)})});const b=document.getElementById("deleteAccountForm");b&&b.addEventListener("submit",p=>{p.preventDefault(),Se()});const y=document.getElementById("profileTabSelect");y&&(y.addEventListener("change",p=>{const h=p.target.value,L=document.querySelector(`#profileTabs a[href="#${h}"]`);L&&new bootstrap.Tab(L).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(p=>{p.addEventListener("shown.bs.tab",h=>{y.value=h.target.getAttribute("href").slice(1)})}))}).catch(t=>{m.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function _e(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){m.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function Ie(e){I(e)}function Ce(e){const t=document.getElementById("editProfileForm");if(!t){m.error("Edit profile form not found");return}const n=new FormData(t),o=document.getElementById("profilePictureInput");o.files.length>0&&n.append("profile_picture",o.files[0]);const i=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(s=>{i.push(s.value)}),n.delete("riding_preferences"),i.forEach(s=>{n.append("riding_preferences",s)}),v(`/profile/${e}/edit`,{method:"POST",body:n}).then(({json:s})=>{if(s.error){let a=`Error: ${s.error}`;if(s.details){const r=[];Object.values(s.details).forEach(d=>{r.push(d.join(", "))}),r.length&&(a+=` - ${r.join("; ")}`)}alert(a)}else alert("Profile updated successfully."),I(e)}).catch(s=>{m.error("Error updating profile:",s),alert("Failed to update profile. Please try again.")})}function ke(e){const t=document.getElementById("editBikeForm");if(!t){m.error("Edit bike form not found");return}const n=new FormData(t),o=document.getElementById("bikePicture");o.files.length>0&&n.append("bike_picture",o.files[0]),v(`/profile/${e}/edit-bike`,{method:"POST",body:n}).then(({json:i})=>{i.error?alert(`Error: ${i.error}`):(alert("Bike details updated successfully."),I(e))}).catch(i=>{m.error("Error updating bike details:",i),alert("Failed to update bike details. Please try again.")})}function $e(e,t,n){v(`/quests/quest/delete_submission/${e}`,{method:"DELETE"}).then(({json:o})=>{if(o.success)alert("Submission deleted successfully."),I(n);else throw new Error(o.message)}).catch(o=>{m.error("Error deleting submission:",o),alert("Error during deletion: "+o.message)})}function Se(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&v("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json"}}).then(()=>{window.location.href="/"}).catch(e=>{m.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}document.addEventListener("click",e=>{const t=e.target.closest("[data-user-profile]");if(!t)return;e.preventDefault();const n=t.getAttribute("data-user-profile");n&&I(n)});let x;document.addEventListener("DOMContentLoaded",()=>{const e=r=>document.querySelector(r);if(!e("#submissionDetailModal"))return;const n=document.getElementById("replyLimitMessage"),o=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");x=function(r){const d=e("#submissionDetailModal");d.dataset.submissionId=r.id,d.dataset.questId=r.quest_id||"";const c=Number(d.dataset.currentUserId),l=Number(r.user_id)===c,u=d.dataset.isAdmin==="True"||d.dataset.isAdmin==="true",f=e("#editPhotoBtn"),g=e("#photoEditControls"),b=e("#submissionPhotoInput"),y=e("#savePhotoBtn"),p=e("#cancelPhotoBtn"),h=e("#deleteSubmissionBtn");f.hidden=!l,h.hidden=!(l||u),g.hidden=!0,f.addEventListener("click",()=>{g.hidden=!1,f.hidden=!0}),p.addEventListener("click",()=>{b.value="",g.hidden=!0,f.hidden=!1}),h.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const _=d.dataset.submissionId;v(`/quests/quest/delete_submission/${_}`,{method:"DELETE"}).then(({json:w})=>{if(!w.success)throw new Error(w.message||"Delete failed");D("submissionDetailModal"),te(),d.dataset.questId&&refreshQuestDetailModal(d.dataset.questId),alert("Submission deleted successfully.")}).catch(w=>alert("Error deleting submission: "+w.message))}),y.addEventListener("click",()=>{const _=d.dataset.submissionId,w=b.files[0];if(!w)return alert("Please select an image first.");if(w.type.startsWith("video/")&&w.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(w.type.startsWith("image/")&&w.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const R=new FormData;w.type.startsWith("video/")?R.append("video",w):R.append("photo",w),v(`/quests/submission/${_}/photo`,{method:"PUT",body:R}).then(({json:$})=>{if(!$.success)throw new Error($.message||"Upload failed");$.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=$.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=$.image_url),p.click()}).catch($=>alert($.message))}),e("#submissionReplyEdit").hidden=l,e("#postReplyBtn").hidden=l,e("#ownerNotice").hidden=!l;const L=e("#submissionRepliesContainer");l?L.hidden=!0:L.hidden=!1;const E={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};E.profileImg.src=r.user_profile_picture||o,E.profileImgOverlay.src=E.profileImg.src,E.profileCap.textContent=r.user_display_name||r.user_username||"—",E.profileLink.onclick=_=>{_.preventDefault(),I(r.user_id)},E.imgOverlay.parentElement.onclick=E.profileLink.onclick;const F=o;r.video_url?(E.img.hidden=!0,E.video.hidden=!1,E.videoSource.src=r.video_url,E.video.load()):(E.video.hidden=!0,E.img.hidden=!1,E.img.src=r.url||F),E.commentRead.textContent=r.comment||"No comment provided.",["tw","fb","ig"].forEach(_=>{const w=_==="tw"?"twitter_url":_==="fb"?"fb_url":"instagram_url";try{new URL(r[w]),E.social[_].href=r[w],E.social[_].style.display="inline-block"}catch{E.social[_].style.display="none"}}),l?(E.editBtn.hidden=!1,E.readBox.hidden=!1):E.editBtn.hidden=E.readBox.hidden=E.commentEdit.hidden=E.editBox.hidden=!0,s(),B("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),i(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId;v(`/quests/submission/${r}/comment`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(({json:d})=>{if(!d.success)throw new Error(d.message||"Save failed");e("#submissionComment").textContent=d.comment||"No comment provided.",i(!1)}).catch(d=>alert(`Could not save comment: ${d.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>i(!1));function i(r){e("#submissionComment").hidden=r,e("#commentReadButtons").hidden=r,e("#submissionCommentEdit").hidden=!r,e("#commentEditButtons").hidden=!r}function s(){const r=e("#submissionDetailModal").dataset.submissionId;r&&(k(`/quests/submissions/${r}`).then(({json:d})=>{e("#submissionLikeCount").textContent=d.like_count||0,e("#submissionLikeBtn").classList.toggle("active",d.liked_by_current_user)}),k(`/quests/submission/${r}/replies`).then(({json:d})=>{const c=e("#submissionRepliesList");c.innerHTML="",d.replies.forEach(f=>{const g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${f.user_id}">
              <strong>${f.user_display}</strong>
            </a>: ${f.content}
          `,g.querySelector(".reply-user-link").addEventListener("click",y=>{y.preventDefault(),I(f.user_id)}),c.appendChild(g)});const l=e("#submissionReplyEdit"),u=e("#postReplyBtn");d.replies.length>=10?(l.disabled=!0,u.disabled=!0,n&&(n.style.display="block")):(l.disabled=!1,u.disabled=!1,n&&(n.style.display="none"))}))}e("#submissionLikeBtn").addEventListener("click",()=>{const r=e("#submissionLikeBtn"),d=e("#submissionDetailModal").dataset.submissionId,c=r.classList.contains("active");v(`/quests/submission/${d}/like`,{method:c?"DELETE":"POST",headers:{"Content-Type":"application/json"}}).then(({json:l})=>{if(!l.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=l.like_count,r.classList.toggle("active",l.liked)}).catch(l=>alert(l.message))}),e("#postReplyBtn").addEventListener("click",()=>{const r=e("#submissionDetailModal").dataset.submissionId,d=e("#submissionReplyEdit"),c=d.value.trim();!r||!c||v(`/quests/submission/${r}/replies`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:c})}).then(({status:l,json:u})=>{if(!u.success){if(u.message==="Reply limit of 10 reached"){a();return}if(l===409&&u.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(u.message||"Error")}const f=e("#submissionRepliesList"),g=document.createElement("div");g.className="reply mb-1",g.innerHTML=`<strong>${u.reply.user_display}</strong>: ${u.reply.content}`,f.insertBefore(g,f.firstChild),d.value="",f.children.length>=10&&a()}).catch(l=>alert(l.message))});function a(){const r=e("#submissionReplyEdit"),d=e("#postReplyBtn");r.disabled=!0,d.disabled=!0,n&&(n.style.display="block")}});const xe=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");let A=0,oe=null,J=!1,Y=!1;function qe(e){A=0,oe=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),B("allSubmissionsModal"),ie()}function ie(){const e=A*10;k(`/quests/quest/all_submissions?game_id=${oe}&offset=${e}&limit=10`).then(({json:t})=>{if(t.error)throw new Error(t.error);J=t.is_admin,Y=t.has_more,Te(t.submissions,J,A>0),Pe(Y),A+=1}).catch(t=>{m.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function Te(e,t,n=!1){const o=document.getElementById("allSubmissionsContainer");if(!o){m.error("allSubmissionsContainer element not found.");return}n||(o.innerHTML=""),e.forEach(i=>{const s=document.createElement("div");s.className="submission-card";const a=document.createElement("img");a.src=i.image_url||xe,a.alt="Quest Submission",a.className="submission-image";const r=document.createElement("div");r.className="submission-info";const d=document.createElement("p");d.textContent=`User: ${i.user_display_name||i.user_username}`,d.className="submission-user-details";const c=document.createElement("p"),l=new Date(i.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});c.textContent=`Submitted on: ${l}`,c.className="submission-timestamp";const u=document.createElement("p");u.textContent=`Comment: ${i.comment}`,u.className="submission-comment";const f=document.createElement("p");f.textContent=`Twitter: ${i.twitter_url||"N/A"}`,f.className="submission-comment";const g=document.createElement("p");g.textContent=`Facebook: ${i.fb_url||"N/A"}`,g.className="submission-comment";const b=document.createElement("p");if(b.textContent=`Instagram: ${i.instagram_url||"N/A"}`,b.className="submission-comment",r.appendChild(d),r.appendChild(c),r.appendChild(u),r.appendChild(f),r.appendChild(g),r.appendChild(b),t){const y=document.createElement("button");y.textContent="Delete",y.className="button delete-button",y.addEventListener("click",function(p){p.stopPropagation(),De(i.id)}),s.appendChild(y)}s.appendChild(a),s.appendChild(r),s.addEventListener("click",function(){x({url:i.image_url||i.video_url,video_url:i.video_url,comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name||i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,verification_type:"image"}),B("submissionDetailModal")}),o.appendChild(s)})}function De(e){v(`/quests/quest/delete_submission/${e}`,{method:"DELETE"}).then(({json:t})=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{m.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Pe(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{ie()})});document.addEventListener("DOMContentLoaded",()=>{Me(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>Ae(e.dataset.toggleForm))})});function Me(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(n=>{const o=document.createElement("tr");o.dataset.badgeId=n.id;const i=n.image?`<img src="${n.image}" height="50" alt="Badge Image">`:"No Image";o.innerHTML=`
                    <td class="badge-image-manage">${i}</td>
                    <td class="badge-name">${n.name}</td>
                    <td class="badge-description">${n.description}</td>
                    <td class="badge-category">${n.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${n.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${n.id}">Delete</button>
                    </td>
                `,o.querySelector(".edit-badge").addEventListener("click",()=>Re(n.id)),o.querySelector(".delete-badge").addEventListener("click",()=>Oe(n.id)),e.appendChild(o)})}).catch(t=>m.error("Failed to load badges:",t))}function Ae(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function Fe(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const n=t.categories||[],o=document.createElement("select");o.className="form-control badge-category-select";const i=document.createElement("option");return i.value="none",i.textContent="None",(!e||e==="none")&&(i.selected=!0),o.appendChild(i),n.forEach(s=>{const a=document.createElement("option");a.value=s,a.textContent=s,s===e&&(a.selected=!0),o.appendChild(a)}),o}).catch(t=>{m.error("Error fetching categories:",t);const n=document.createElement("select");n.className="form-control badge-category-select";const o=document.createElement("option");return o.value="none",o.textContent="None",o.selected=!0,n.appendChild(o),n})}function Re(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){m.error(`Badge row with ID ${e} not found.`);return}const n=t.querySelector(".badge-name"),o=t.querySelector(".badge-description"),i=t.querySelector(".badge-category"),s=t.querySelector(".badge-image-manage");n.textContent="";const a=document.createElement("input");a.type="text",a.value=n.innerText.trim(),a.className="form-control badge-name-input",n.appendChild(a),o.textContent="";const r=document.createElement("textarea");if(r.className="form-control badge-description-textarea",r.value=o.innerText.trim(),o.appendChild(r),s){s.textContent="";const d=document.createElement("input");d.type="file",d.className="form-control-file badge-image-input",s.appendChild(d)}else m.error("Could not find badge-image-manage cell");Fe(i.innerText.trim()).then(d=>{i.textContent="",i.appendChild(d);const c=t.querySelector("button.edit-badge");c.innerText="Save",c.onclick=()=>Ne(e)})}function Ne(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),n=new FormData;n.append("name",t.querySelector(".badge-name-input").value.trim()),n.append("description",t.querySelector(".badge-description-textarea").value.trim()),n.append("category",t.querySelector(".badge-category-select").value);const o=t.querySelector(".badge-image-input");o&&o.files.length>0&&n.append("image",o.files[0]);const i=document.querySelector("[name=csrf_token]").value;n.append("csrf_token",i),v(`/badges/update/${e}`,{method:"POST",body:n}).then(({json:s})=>{s.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+s.message)}).catch(s=>m.error("Error updating badge:",s))}function Oe(e){confirm("Are you sure you want to delete this badge?")&&v(`/badges/delete/${e}`,{method:"DELETE"}).then(({json:t})=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{m.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}let q=[];const V=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");function Qe(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return V}async function Ue(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,o=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,i=await fetch(o,{credentials:"same-origin"});if(!i.ok)throw new Error("Error fetching badges");return q=(await i.json()).badges,q}async function se(){if(!q||q.length===0)try{await Ue()}catch(e){m.error("Error loading badges:",e),q=[]}}function Ge(e){return e?`<ul>${e.split(",").map(n=>`<li>${M(n.trim())}</li>`).join("")}</ul>`:""}function He(e){return q.find(t=>t.id==e)}function Ve(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||V}}async function je(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const n=await t.json();return n.userCompletion?n.userCompletion.completions:0}function We(e,t,n,o,i,s,a){const r=document.getElementById("badgeModalTitle"),d=document.getElementById("badgeModalImage"),c=document.getElementById("badgeModalText");if(!r||!d||!c){m.error("Badge modal elements missing");return}r.textContent=e.name,d.src=Qe(e.image)||V;let l="";if(s){const f=`<a href="#" data-quest-detail="${s}">${M(a)}</a>`;l=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${n}</p><p>${i?"You have earned this badge.":"Complete "+f+" to earn this badge."}</p>`}else l=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${n}</p>${o}<p>${i?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const u=e.description||"No description available.";i?(d.style.filter="none",d.oncontextmenu=null,c.innerHTML=`<p><strong>Awarded!</strong></p>${l}<p>${M(u)}</p>`):(d.style.filter="grayscale(100%) opacity(0.5)",d.oncontextmenu=f=>(f.preventDefault(),!1),c.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${l}<p>${M(u)}</p>`)}async function Je(e){const t=e.getAttribute("data-badge-id"),n=e.getAttribute("data-task-name"),o=e.getAttribute("data-task-id"),i=e.getAttribute("data-badge-awarded-count"),s=e.getAttribute("data-user-completions"),a=parseInt(i,10),r=parseInt(s,10)||0,d=Ge(n),c=o?o.split(",").map(b=>b.trim()).filter(Boolean):[],l=c.length===1?c[0]:null;await se();const u=He(t)||Ve(e);let f=r;if(l)try{f=await je(l)}catch(b){m.error("Error fetching user completions:",b)}const g=f>=a;We(u,a,f,d,g,l,n),B("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{se()});document.addEventListener("click",e=>{const t=e.target.closest("[data-open-badge]");t&&(e.preventDefault(),Je(t))});document.addEventListener("DOMContentLoaded",()=>{});let N;function Ye(e){const t=document.getElementById("deleteGameModal"),n=document.getElementById("deleteGameForm"),o=document.getElementById("deleteGameConfirmInput"),i=document.getElementById("deleteGameCountdown"),s=document.getElementById("deleteGameTimer"),a=document.getElementById("deleteGameConfirmBtn");if(!t||!n||!o||!i||!s||!a){m.warn("Delete game modal elements missing");return}t.dataset.gameId=e,n.action=`/games/delete_game/${e}`,o.value="",a.disabled=!0,i.hidden=!0,s.textContent="5",B("deleteGameModal")}function z(){const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),n=document.getElementById("deleteGameCountdown"),o=document.getElementById("deleteGameTimer"),i=document.getElementById("deleteGameUndo"),s=document.getElementById("deleteGameForm");!e||!t||!n||!o||!i||!s||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let a=5;n.hidden=!1,o.textContent=a.toString(),N=setInterval(()=>{a-=1,o.textContent=a.toString(),a<=0&&(clearInterval(N),s.submit())},1e3)}),i.addEventListener("click",()=>{clearInterval(N),n.hidden=!0,o.textContent="5",e.value="",t.disabled=!0}))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",z):z();document.addEventListener("click",e=>{const t=e.target.closest("[data-delete-game-id]");t&&(e.preventDefault(),Ye(t.getAttribute("data-delete-game-id")))});document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[n,o]=t[0],i=document.getElementById("flash-overlay");i.querySelector(".flash-content").textContent=o,i.querySelector(".flash-modal").classList.add(`flash-${n}`),requestAnimationFrame(()=>{i.classList.add("visible")});function s(){i.classList.remove("visible"),e.removeAttribute("data-messages")}i.querySelector(".flash-close").addEventListener("click",s),i.querySelector(".flash-ok-btn").addEventListener("click",s)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),o=document.getElementById("forgotButton"),i=document.getElementById("forgotEmail"),s=document.getElementById("forgotEmailDisplay"),a=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{a.style.display==="block"&&(s.textContent=i.value)}).observe(a,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",d=>{d.preventDefault(),t.style.display="none",n.style.display="none",H(e).then(({json:c})=>{c.success?(n.textContent=c.message,n.style.display="block",o.disabled=!0):(t.textContent=c.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("button[data-game-id]").forEach(n=>{n.addEventListener("click",function(){t(this)})});function t(n){const o=document.getElementById("questCreationForm"),i=n.getAttribute("data-game-id");o?o.addEventListener("submit",function(s){s.preventDefault();const a=document.getElementById("questDescription").value;v("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({description:a,game_id:i})}).then(({json:r})=>{const d=r;if(d.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=d.generated_quest_html,B("generateAIQuestModal");const c=document.getElementById("generateAIQuestModalForm");c&&c.setAttribute("data-game-id",i),c&&c.addEventListener("submit",function(b){b.preventDefault();const y=new FormData(c);v("/ai/create_quest",{method:"POST",body:y}).then(({json:p})=>{window.location.href="/",m.log(p)}).catch(p=>{m.error("Error:",p)})});const l=document.getElementById("generateAIImage"),u=document.getElementById("badge_description"),f=document.getElementById("aiBadgeImage"),g=document.getElementById("aiBadgeFilename");if(!l||!u||!f||!g){m.error("One or more elements not found in the DOM");return}l.addEventListener("click",function(){m.log("Generate AI Image button clicked");const b=u.value;if(m.log("Badge Description:",b),!b){alert("Please enter a badge description first.");return}v("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({badge_description:b})}).then(({json:y})=>{if(m.log("Response data:",y),y.error)alert("Error generating badge image: "+y.error);else{const p=`${y.filename}`,h=`static/images/badge_images/${y.filename}`;f.src=h,f.style.display="block",g.value=p}}).catch(y=>{m.error("Fetch error:",y),alert("Error: "+y)})})}}).catch(r=>{alert("Error generating quest: "+r.message)})}):m.error("Form '#questCreationForm' not found.")}});const ze=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){m.error("Error refreshing CSRF token:",e)}};setInterval(ze,9e5);const Xe=async e=>{try{const n=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),o=n.total_game_points,i=n.game_goal,s=i-o,a=Math.min(o/i*100,100),r=document.getElementById("meterBar"),d=document.querySelector(".meter-label");r&&(r.style.height=`${a}%`),document.documentElement.style.setProperty("--meter-fill-height",`${a}%`),d&&(d.innerText=`Remaining Reduction: ${s} / ${i}`)}catch(t){m.error("Failed to update meter:",t)}};function Ke(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const n=e.getAttribute("data-game-id");fetch(`/games/get_game/${n}`,{credentials:"same-origin"}).then(o=>{if(!o.ok)throw m.error(`Failed fetching game name; URL returned status ${o.status} (${o.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${o.status}: ${o.statusText}`);return o.json()}).then(o=>{t.textContent=o.name||"Game Not Found"}).catch(o=>{m.error("Error retrieving game name:",o),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",async()=>{const r=e.getAttribute("data-game-id");(await G(()=>import("./chunk-nuNv6ADB.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(r),Xe(r)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&qe(currentUserId)});const n=document.getElementById("contactForm");n&&n.addEventListener("submit",async r=>{r.preventDefault();const d=new FormData(n);pe();try{const c=await fetch(n.action,{method:"POST",body:d,headers:{"X-Requested-With":"XMLHttpRequest"}}),l=await c.json();c.ok&&l.success?(alert("Your message has been sent successfully."),D("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{ge()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(r=>{r.innerHTML=r.innerHTML.replace(/<\/?p[^>]*>/g,"")});const i=document.getElementById("questSearchInput"),s=document.getElementById("questCategoryDropdown");i&&i.addEventListener("input",X),s&&s.addEventListener("change",X);const a=document.querySelector("#whats-happening-step");if(a){const r=a.querySelectorAll(".wh-tab-button"),d=a.querySelectorAll(".wh-tab-content");r.forEach(c=>{c.addEventListener("click",()=>{const l=c.getAttribute("data-wh-tab");r.forEach(u=>u.classList.remove("active")),d.forEach(u=>u.classList.remove("active")),c.classList.add("active"),a.querySelector(`#wh-${l}-tab`).classList.add("active")})})}Ke()});function X(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(o=>{const i=o.querySelector(".quest-title").textContent.toLowerCase(),s=o.dataset.category||"Not Set",a=i.includes(e),r=t==="all"||s===t;o.style.display=a&&r?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(i){i.addEventListener("click",function(){const s=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=s,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",n=e.dataset.joinDemoUrl;let o=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{o=!0}),e.addEventListener("hidden.bs.modal",function(){!o&&!t&&(window.location.href=n)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const n=document.getElementById("passwordError"),o=document.getElementById("forgotPasswordLink"),i=t.querySelector("[data-register-from-login]"),s=t.dataset.checkUrl;e.addEventListener("submit",l=>{l.preventDefault(),n.style.display="none",o&&(o.style.display="none"),H(e).then(({json:u})=>{u.success?window.location.href=u.redirect:(n.textContent=u.error,n.style.display="block",u.show_forgot&&o&&(o.style.display="block"))}).catch(()=>e.submit())});const a=document.getElementById("loginEmail"),r=document.getElementById("loginButton"),d=document.getElementById("emailError");function c(){r.disabled=!0,d.style.display="none",d.textContent="",o&&(o.style.display="none")}c(),o&&o.addEventListener("click",l=>{l.preventDefault(),Ee()}),i&&i.addEventListener("click",l=>{l.preventDefault(),he()}),a.addEventListener("blur",()=>{const l=a.value.trim();if(!l)return c();fetch(`${s}?email=${encodeURIComponent(l)}`).then(u=>u.json()).then(u=>{u.exists?r.disabled=!1:(r.disabled=!0,d.textContent="This email is not registered. Please register first.",d.style.display="block")}).catch(()=>r.disabled=!1)}),a.addEventListener("input",c)});let C=null;const Ze={qr_code:"QR Code",photo:"Photo Upload",comment:"Comment",photo_comment:"Photo Upload and Comment",video:"Video Upload"};let ae=[];function K(){const e=document.getElementById("game_Data");if(!e)return;C=e.dataset.gameId;const t=document.getElementById("deleteAllQuestsBtn");t&&t.addEventListener("click",tt);const n=document.getElementById("importQuestsBtn");n&&n.addEventListener("click",mt),et().then(()=>P(C))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",K):K();async function et(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");ae=(await e.json()).badges||[]}catch(e){m.error("Error fetching badges:",e)}}function re(e){const t=document.querySelector(`#quest-${e}`),n={};t.querySelectorAll(".editable").forEach(o=>{n[o.getAttribute("data-name")]=o.innerHTML}),nt(t),ot(t),it(t),st(t),rt(t,e,n)}function tt(){confirm("Are you sure you want to delete all quests? This action cannot be undone.")&&k(`/quests/game/${C}/get_title`).then(({json:e})=>{const t=e.title;confirm(`This will delete all quests for the game: "${t}". Are you absolutely sure? This action cannot be undone.`)&&v(`/quests/game/${C}/delete_all`,{method:"DELETE"}).then(({json:n})=>{n.success?(alert("All quests deleted successfully"),P(C)):alert(`Failed to delete quests: ${n.message}`)}).catch(n=>{m.error("Error:",n),alert("Failed to delete all quests. Please check the console for more details.")})}).catch(e=>{m.error("Error fetching game title:",e),alert("Failed to fetch game title. Please check the console for more details.")})}function nt(e){const t=e.querySelector('.editable[data-name="verification_type"]'),n=t.getAttribute("data-value").toLowerCase();let o='<select name="verification_type" class="editable-select">';Object.entries(Ze).forEach(([i,s])=>{const a=n===i.toLowerCase()?"selected":"";o+=`<option value="${i}" ${a}>${s}</option>`}),o+="</select>",t.innerHTML=o}function ot(e){const t=e.querySelector('.editable[data-name="frequency"]'),n=t.getAttribute("data-value").toLowerCase();let o='<select name="frequency" class="editable-select">';Object.entries({daily:"Daily",weekly:"Weekly",monthly:"Monthly"}).forEach(([s,a])=>{const r=n===s.toLowerCase()?"selected":"";o+=`<option value="${s}" ${r}>${a}</option>`}),o+="</select>",t.innerHTML=o}function it(e){const t=e.querySelector('.editable[data-name="badge_name"]');let n=t.innerText.trim(),o='<select name="badge_id" class="editable-select"><option value="">None</option>';ae.forEach(i=>{const s=n===i.name?"selected":"";o+=`<option value="${i.id}" ${s}>${i.name}</option>`}),o+="</select>",t.innerHTML=o}function st(e){[{name:"title",type:"text"},{name:"description",type:"textarea"},{name:"tips",type:"textarea"},{name:"points",type:"number"},{name:"badge_awarded",type:"number"},{name:"completion_limit",type:"number"},{name:"category",type:"text"},{name:"enabled",type:"select",options:["Yes","No"]},{name:"is_sponsored",type:"select",options:["Yes","No"]}].forEach(n=>{const o=e.querySelector(`.editable[data-name="${n.name}"]`);o&&at(o,n)})}function at(e,t){let n=e.getAttribute("data-value")||e.innerHTML.trim(),o;t.type==="select"?(o=document.createElement("select"),o.name=t.name,t.options.forEach(i=>{const s=document.createElement("option");s.value=i,s.text=i,n===s.text&&(s.selected=!0),o.appendChild(s)})):t.type==="textarea"?(o=document.createElement("textarea"),o.name=t.name,o.value=n):(o=document.createElement("input"),o.type=t.type,o.name=t.name,o.value=n),e.innerHTML="",e.appendChild(o)}function rt(e,t,n){const o=e.querySelector(".edit-button");o.innerText="Save",o.onclick=()=>dt(t);const i=document.createElement("button");i.innerText="Cancel",i.className="btn btn-secondary ms-2 cancel-button",i.onclick=()=>{lt(e,n,o,t)},o.parentNode.insertBefore(i,o.nextSibling)}function lt(e,t,n,o){Object.entries(t).forEach(([i,s])=>{const a=e.querySelector(`.editable[data-name="${i}"]`);a&&(a.innerHTML=s)}),n.innerText="Edit",n.onclick=()=>re(o),e.querySelector(".cancel-button").remove()}function dt(e){const t=document.querySelector(`#quest-${e}`);let n={};t.querySelectorAll("input, select, textarea").forEach(o=>{let i=o.value;o.name==="enabled"||o.name==="is_sponsored"?i=o.value==="Yes":o.name==="badge_id"&&i===""&&(i=null),n[o.name]=i}),v(`/quests/quest/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then(({json:o})=>{o.success?(alert("Quest updated successfully."),P(C)):alert("Failed to update quest. Error: "+o.message)}).catch(o=>{m.error("Error updating quest:",o),alert("Error updating quest. Please check console for details.")})}function P(e){k(`/quests/game/${e}/quests`).then(({json:t})=>{const n=document.getElementById("questsBody");n.innerHTML="",t.quests.forEach(o=>{const i=document.createElement("div");i.className="card",i.id=`quest-${o.id}`;const s=o.verification_type.toLowerCase(),a=o.badge_name||"None",r=o.frequency||"Not Set",d=o.category||"Not Set",c=o.badge_awarded||"Not Set";i.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${o.title}</h5>
                        <div class="card-text editable" data-name="description">${o.description}</div>
                        <div class="card-text editable" data-name="tips">${o.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${o.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${o.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${o.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${o.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${o.verification_type}">${s}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${a}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${c}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${o.frequency}">${r}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${d}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" data-quest-id="${o.id}">Edit</button>
                            <button class="btn btn-danger delete-button" data-quest-id="${o.id}">Delete</button>
                            <button class="btn btn-info qr-button" data-quest-id="${o.id}">Generate QR Code</button>
                        </div>
                    </div>
                `,n.appendChild(i);const l=i.querySelector(".edit-button"),u=i.querySelector(".delete-button"),f=i.querySelector(".qr-button");l&&l.addEventListener("click",()=>re(o.id)),u&&u.addEventListener("click",()=>ct(o.id)),f&&f.addEventListener("click",()=>ut(o.id))})}).catch(t=>m.error("Failed to load quests:",t))}function ct(e){v(`/quests/quest/${e}/delete`,{method:"DELETE"}).then(({json:t})=>{t.success?(alert("Quest deleted successfully"),P(C)):alert(`Failed to delete quest: ${t.message}`)}).catch(t=>{m.error("Error:",t),alert("Failed to delete quest. Please check the console for more details.")})}function mt(){const e=document.getElementById("importQuestsForm"),t=new FormData(e);v(`/quests/game/${C}/import_quests`,{method:"POST",body:t}).then(({json:n})=>{n.success&&n.redirectUrl?(alert("Quests imported successfully"),P(C)):alert("Failed to import quests: "+n.message)}).catch(n=>{m.error("Error importing quests:",n)})}function ut(e){const t=`/quests/generate_qr/${e}`;fetch(t).then(n=>{if(!n.ok)throw new Error("Failed to generate QR code");return n.blob()}).then(n=>{const o=URL.createObjectURL(n);window.open(o,"_blank")}).catch(n=>{m.error("Error generating QR code:",n),alert("Failed to generate QR code. Please check console for more details.")})}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),n=e.querySelector("#notifLoading"),o=e.querySelector("li.dropdown-footer"),i=o.querySelector("#loadMoreBtn"),s=e.dataset.url;let a=0,r=1;const d=parseInt(e.dataset.perPage,10)||10,c={follow:({from_user_name:g,from_user_id:b})=>({text:`Now following ${g}`,onClick:()=>I(b)}),followed_by:({follower_name:g,follower_id:b})=>({text:`${g} is now following you`,onClick:()=>I(b)}),submission:({actor_name:g,quest_name:b,submission_id:y})=>({text:`${g} submitted a new “${b}” quest`,onClick:async()=>{const h=await(await fetch(`/quests/submissions/${y}`)).json();x(h)}}),profile_message:({from_user_name:g,content:b,profile_user_id:y})=>({text:`${g} says “${b}”`,onClick:()=>I(y)}),profile_reply:({from_user_name:g,content:b,profile_user_id:y})=>({text:`${g} replied “${b}”`,onClick:()=>I(y)}),submission_like:({liker_name:g,submission_id:b})=>({text:`${g} liked your submission`,onClick:async()=>{const p=await(await fetch(`/quests/submissions/${b}`,{credentials:"same-origin"})).json();x(p)}}),submission_reply:({actor_name:g,content:b,submission_id:y})=>({text:`${g} replied “${b}”`,onClick:async()=>{const h=await(await fetch(`/quests/submissions/${y}`,{credentials:"same-origin"})).json();x(h)}})};function l(g){const b=c[g.type];let y,p;if(b&&g.payload)try{({text:y,onClick:p}=b(g.payload))}catch(E){m.error(`Error in handler for ${g.type}:`,E)}(!y||!p)&&(y=g.payload.summary||JSON.stringify(g.payload),p=()=>{window.location.href="/notifications/"});const h=g.is_read?"":"fw-bold",L=document.createElement("a");return L.href="#",L.className=`dropdown-item ${h}`,L.innerHTML=`
      ${y}
      <small class="text-muted d-block text-center">
        ${new Date(g.when).toLocaleString()}
      </small>`,L.addEventListener("click",async E=>{E.preventDefault();try{await p()}catch(F){m.error(F)}}),L}function u(g){g&&g.parentNode===e&&e.removeChild(g)}async function f(g){g===1&&(Array.from(e.children).forEach(h=>{h!==n&&h!==o&&e.removeChild(h)}),a=0),u(n),u(o),e.appendChild(n),e.appendChild(o),n.style.display="",i.disabled=!0;let b;try{b=await fetch(`${s}?page=${g}&per_page=${d}`,{credentials:"include"})}catch(h){n.textContent="Network error.",m.error(h);return}if(!b.ok){n.textContent="Error loading.",m.error("Status:",b.status,b.statusText);return}const y=await b.json();a=y.page,r=y.total_pages,u(n),u(o);const p=t.querySelector(".badge");p&&p.remove(),y.items.forEach(h=>{e.appendChild(l(h))}),e.appendChild(n),e.appendChild(o),n.style.display="none",i.disabled=a>=r}t.addEventListener("show.bs.dropdown",()=>{a===0&&f(1)}),i.addEventListener("click",g=>{g.preventDefault(),g.stopPropagation(),a<r&&f(a+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let n;try{({public_key:n}=await t.json())}catch(s){m.error("Push setup failed",s);return}if(!n||await e.pushManager.getSubscription())return;const i=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:pt(n)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:i})})}catch(t){m.error("Push setup failed",t)}})});function pt(e){const t="=".repeat((4-e.length%4)%4),n=(e+t).replace(/-/g,"+").replace(/_/g,"/"),o=atob(n),i=new Uint8Array(o.length);for(let s=0;s<o.length;++s)i[s]=o.charCodeAt(s);return i}function gt(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const ft=Number(gt("current-user-id")||0),bt=fe(),S=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");function le(e){te(),k(`/quests/detail/${e}/user_completion`).then(({json:t})=>{const{quest:n,userCompletion:o,canVerify:i,nextEligibleTime:s}=t;if(!de(n,o.completions,i,e,s)){m.error("populateQuestDetails – required element missing");return}ce(n,o.completions,s,i),B("questDetailModal"),j(),ue(e)}).catch(t=>{m.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function yt(e){k(`/quests/detail/${e}/user_completion`).then(({json:t})=>{const{quest:n,userCompletion:o,canVerify:i,nextEligibleTime:s}=t;if(!de(n,o.completions,i,e,s)){m.error("populateQuestDetails – required element missing");return}ce(n,o.completions,s,i),j(),ue(e)}).catch(t=>{m.error("Failed to refresh quest detail modal:",t)})}function j(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((n,o)=>{n.forEach(i=>{if(i.isIntersecting){const s=i.target;s.src=s.getAttribute("data-src"),s.classList.remove("lazyload"),o.unobserve(s)}})});e.forEach(n=>{t.observe(n)})}function de(e,t,n,o,i){const s=t>=e.completion_limit?" - complete":"",a={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let u in a)if(!a[u])return m.error(`Error: Missing element ${u}`),!1;a.modalQuestTitle.innerText=`${e.title}${s}`,a.modalQuestDescription.textContent=e.description,a.modalQuestTips.textContent=e.tips||"No tips available",a.modalQuestPoints.innerText=`${e.points}`,a.modalQuestCategory.innerText=e.category||"No category set";const r=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;a.modalQuestCompletionLimit.innerText=`${r} ${e.frequency}`;const d=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?a.modalQuestBadgeAwarded.innerText=`After ${d}`:a.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":a.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":a.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":a.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":a.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:a.modalQuestVerificationType.innerText="Not specified";break}const c=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:S;a.modalQuestBadgeImage.setAttribute("data-src",c),a.modalQuestBadgeImage.src=S,a.modalQuestBadgeImage.classList.add("lazyload"),a.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",a.modalQuestCompletions.innerText=`Total Completions: ${t}`;const l=i&&new Date(i);return!n&&l&&l>new Date?(a.modalCountdown.innerText=`Next eligible time: ${l.toLocaleString()}`,a.modalCountdown.style.color="red"):(a.modalCountdown.innerText="You are currently eligible to verify!",a.modalCountdown.style.color="green"),vt(o,n,e.verification_type),!0}function ce(e,t,n,o){const i=document.querySelector(".user-quest-data");if(!i){m.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(a=>{let r=document.getElementById(a.id);r||(r=document.createElement("p"),r.id=a.id,i.appendChild(r)),r.innerText=a.value}),ht(document.getElementById("modalCountdown"),n,o)}function ht(e,t,n){if(!n&&t){const o=new Date(t),i=new Date;if(o>i){const s=o-i;e.innerText=`Next eligible time: ${Et(s)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function Et(e){const t=Math.floor(e/1e3%60),n=Math.floor(e/(1e3*60)%60),o=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${o}h ${n}m ${t}s`}function vt(e,t,n){const o=document.querySelector(".user-quest-data");if(!o){m.error("Parent element .user-quest-data not found");return}if(o.innerHTML="",t){const i=document.createElement("div");i.id=`verifyQuestForm-${e}`,i.className="verify-quest-form",i.style.display="block";const s=wt(n.trim().toLowerCase(),e);i.innerHTML=s,o.appendChild(i),Bt(e)}}function wt(e,t){let n=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${bt}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":n+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":n+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":n+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":n+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":n+='<p class="epic-message">Quest is currently paused.</p>';break;default:n+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return n+="</form>",n}function Bt(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){m.error("Form container not found for quest ID:",e);return}const n=t.querySelector("form");if(!n){m.error("Form element missing for quest ID:",e);return}n.addEventListener("submit",function(o){It(o,e)})}function O(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function Lt(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function _t(e,t,n){const o=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!o)return;const i=o.querySelectorAll(".quest-stats-cell");i.length>=2&&(i[0].innerText=t,i[1].innerText=n)}function me(e){O(document.getElementById("twitterLink"),e.twitter_url),O(document.getElementById("facebookLink"),e.fb_url),O(document.getElementById("instagramLink"),e.instagram_url)}let Q=!1;async function It(e,t){if(e.preventDefault(),Q)return;Q=!0;const n=e.target.querySelector('[type="submit"]');n&&(n.disabled=!0);try{const o=e.target.querySelector('input[type="file"]'),i=o?o.files[0]:null;if(i&&i.type.startsWith("video/")&&i.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(i&&i.type.startsWith("image/")&&i.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const s=new FormData(e.target);s.append("user_id",ft);const{status:a,json:r}=await v(`/quests/quest/${t}/submit`,{method:"POST",body:s});if(a!==200)throw a===403&&r.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(r.message||`Server responded with status ${a}`);if(!r.success)throw new Error(r.message);if(!r.success)throw new Error(r.message);Lt(r.total_points),me(r),_t(t,r.new_completion_count,r.total_completion_count),yt(t),e.target.reset()}catch(o){m.error("Submission error:",o),alert(`Error during submission: ${o.message}`)}finally{Q=!1,n&&(n.disabled=!1)}}async function ue(e){try{const{json:t}=await k(`/quests/quest/${e}/submissions`),n=document.getElementById("twitterLink"),o=document.getElementById("facebookLink"),i=document.getElementById("instagramLink");if(t&&t.length){const a=t[0],r=document.getElementById("submissionImage"),d=document.getElementById("submissionVideo"),c=document.getElementById("submissionVideoSource"),l=document.getElementById("submissionComment"),u=document.getElementById("submitterProfileLink"),f=document.getElementById("submitterProfileImage"),g=document.getElementById("submitterProfileCaption");a.video_url?(r.hidden=!0,d.hidden=!1,c.src=a.video_url,d.load()):(d.hidden=!0,r.hidden=!1,r.src=a.image_url||S),l.textContent=a.comment||"No comment provided.",u.href=`/profile/${a.user_id}`,f.src=a.user_profile_picture||S,g.textContent=a.user_display_name||a.user_username||`User ${a.user_id}`,me(a)}else[n,o,i].forEach(a=>{a&&(a.style.display="none")});const s=t.slice().reverse().map(a=>({id:a.id,url:a.image_url||(a.video_url?null:S),video_url:a.video_url,alt:"Submission Image",comment:a.comment,user_id:a.user_id,user_display_name:a.user_display_name,user_username:a.user_username,user_profile_picture:a.user_profile_picture,twitter_url:a.twitter_url,fb_url:a.fb_url,instagram_url:a.instagram_url,quest_id:e}));Ct(s)}catch(t){m.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function Z(e){if(!e)return m.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(o=>t.pathname.toLowerCase().endsWith(o))}catch{return m.error(`Invalid URL detected: ${e}`),!1}return!1}function Ct(e){var d;const t=document.getElementById("submissionBoard");if(!t){m.error("submissionBoard element not found");return}t.innerHTML="";const n=((d=document.getElementById("questDetailModal"))==null?void 0:d.getAttribute("data-placeholder-url"))||S,o=Z(n)?n:S,i=c=>c.startsWith("/static/"),s=c=>c.replace(/^\/static\//,""),a=window.innerWidth<=480?70:100,r=a*(window.devicePixelRatio||2);e.forEach(c=>{let l;if(c.video_url)l=document.createElement("video"),l.src=c.video_url,l.preload="metadata",l.muted=!0,l.playsInline=!0,l.style.objectFit="cover";else{l=document.createElement("img");const u=Z(c.url)?c.url:o,f=i(u)?`/resize_image?path=${encodeURIComponent(s(u))}&width=${r}`:u;l.setAttribute("data-src",f),l.classList.add("lazyload"),l.alt=c.alt||"Submission Image"}l.style.width=`${a}px`,l.style.height="auto",l.style.marginRight="10px",c.video_url||(l.onerror=()=>{i(o)?l.src=`/resize_image?path=${encodeURIComponent(s(o))}&width=${r}`:l.src=o}),l.onclick=()=>x(c),t.appendChild(l)}),j()}function kt(e){e.querySelectorAll("span, img").forEach(n=>{n.classList.toggle("hidden")})}document.addEventListener("click",e=>{const t=e.target.closest("[data-quest-detail]");if(t){e.preventDefault(),le(t.getAttribute("data-quest-detail"));return}const n=e.target.closest("[data-toggle-content]");n&&n.closest("#questDetailModal")&&(e.preventDefault(),kt(n))});const $t=Object.freeze(Object.defineProperty({__proto__:null,openQuestDetailModal:le},Symbol.toStringTag,{value:"Module"}));document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;const t=document.getElementById("registerModal"),n=(t==null?void 0:t.dataset.checkUrl)||"/auth/check_email",o=document.getElementById("existingUserLogin");o&&(e.addEventListener("blur",()=>{const i=e.value.trim();i&&fetch(`${n}?email=${encodeURIComponent(i)}`).then(s=>s.json()).then(s=>{s.exists?o.style.display="block":o.style.display="none"}).catch(s=>{m.error("Error checking email:",s),o.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const i=e.value.trim(),s=document.getElementById("existingUserPassword").value,a=document.getElementById("loginError"),r=document.getElementById("gameIdField").value,d=document.getElementById("questIdField").value,c=document.getElementById("nextField").value,l=new FormData;l.append("email",i),l.append("password",s),l.append("remember_me","true"),r&&l.append("game_id",r),d&&l.append("quest_id",d),c&&l.append("next",c),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:l,credentials:"same-origin"}).then(u=>u.json().then(f=>({payload:f}))).then(({payload:u})=>{u.success?window.location.href=u.redirect:(a.textContent=u.error,a.style.display="block")}).catch(u=>{m.error("Login error:",u),a.textContent="An error occurred. Please try again.",a.style.display="block"})}),e.addEventListener("input",()=>{o.style.display="none",document.getElementById("loginError").style.display="none"}))});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),n=document.getElementById("resetSuccess"),o=document.getElementById("resetButton");e.addEventListener("submit",i=>{i.preventDefault(),t.style.display="none",n.style.display="none",H(e).then(({json:s})=>{s.success?(n.textContent=s.message,n.style.display="block",o.disabled=!0,s.redirect&&setTimeout(()=>{window.location.href=s.redirect},1200)):(t.textContent=s.error||"Unable to reset password.",t.style.display="block")}).catch(s=>{m.error("Reset-password AJAX error:",s),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),n=document.getElementById("shoutSubmitBtn"),o=document.getElementById("shoutMessageInput");window.addEventListener("openModal",i=>{i.detail===e&&o&&(o.value="")}),n.addEventListener("click",()=>{const i=o?o.value.trim():"";if(!i){alert("Please enter a message.");return}if(i.length>500){alert("Message must be 500 characters or fewer.");return}const s=new FormData(t);fetch(t.action,{method:"POST",body:s,credentials:"same-origin"}).then(a=>{if(!a.ok)throw new Error(`Server responded ${a.status}`);return a.text()}).then(()=>{D(e),location.reload()}).catch(a=>{m.error("Failed to post shout:",a),alert("Could not post. Please try again.")})})});var ee;(ee=document.getElementById("gameFilter"))==null||ee.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});document.addEventListener("DOMContentLoaded",()=>{Be()});export{I as a,B as o,qe as s};
