const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["chunk-DYHYIg9m.js","chunk-Bu8AA3up.js"])))=>i.map(i=>d[i]);
import{l as u,g as I,e as P,s as Ee,h as we}from"./chunk-Bu8AA3up.js";const ve="modulepreload",Ie=function(e){return"/static/dist/"+e},X={},U=function(t,o,n){let i=Promise.resolve();if(o&&o.length>0){let a=function(d){return Promise.all(d.map(l=>Promise.resolve(l).then(m=>({status:"fulfilled",value:m}),m=>({status:"rejected",reason:m}))))};document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),c=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));i=a(o.map(d=>{if(d=Ie(d),d in X)return;X[d]=!0;const l=d.endsWith(".css"),m=l?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${d}"]${m}`))return;const g=document.createElement("link");if(g.rel=l?"stylesheet":ve,l||(g.as="script"),g.crossOrigin="",g.href=d,c&&g.setAttribute("nonce",c),document.head.appendChild(g),l)return new Promise((p,f)=>{g.addEventListener("load",p),g.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${d}`)))})}))}function s(a){const r=new Event("vite:preloadError",{cancelable:!0});if(r.payload=a,window.dispatchEvent(r),!r.defaultPrevented)throw a}return i.then(a=>{for(const r of a||[])r.status==="rejected"&&s(r.reason);return t().catch(s)})};function _e(){"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js").then(s=>{s.addEventListener("updatefound",()=>{const a=s.installing;a.addEventListener("statechange",()=>{a.state==="installed"&&navigator.serviceWorker.controller&&confirm("A new version is available. Reload to update?")&&window.location.reload()})}),"SyncManager"in window&&s.sync.register("sync-notifications").catch(a=>u.error("Sync registration failed:",a)),s.periodicSync&&s.periodicSync.register("periodic-notifications",{minInterval:24*60*60*1e3}).catch(a=>u.error("Periodic sync registration failed:",a)),"PushManager"in window&&Notification.permission==="default"&&Notification.requestPermission(),"sync"in s&&s.sync.register("sync-requests").catch(a=>{u.error("Background sync registration failed:",a)})}).catch(s=>u.error("Service Worker registration failed:",s)),navigator.serviceWorker.addEventListener("message",s=>{s.data.type==="UPDATE_AVAILABLE"&&confirm("A new version is available. Reload to update?")&&window.location.reload()}));const e=document.getElementById("install"),t=document.getElementById("manual-install"),o=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);let n=null;const i=document.getElementById("leaderboardNavbarLink");if(t&&(o?t.hidden=!1:t.hidden=!0),e&&(window.addEventListener("beforeinstallprompt",s=>{s.preventDefault(),n=s,e.hidden=!1,e.addEventListener("click",()=>{n&&(n.prompt(),n.userChoice.then(()=>{n=null,e.hidden=!0}))})}),window.beforeinstallprompt||(e.hidden=!0,!o&&t&&(t.hidden=!0)),window.addEventListener("appinstalled",()=>{e.hidden=!0,t&&(t.hidden=!0)}),navigator.getInstalledRelatedApps&&navigator.getInstalledRelatedApps().then(s=>{s.length&&(e.hidden=!0)})),i&&i.addEventListener("click",async s=>{s.preventDefault();const a=i.getAttribute("data-game-id")||0;(await U(()=>import("./chunk-DYHYIg9m.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(a)}),"windowControlsOverlay"in navigator){let s=function(){const a=navigator.windowControlsOverlay.getTitlebarAreaRect();document.body.style.paddingTop=a.height+"px"};navigator.windowControlsOverlay.addEventListener("geometrychange",s),s()}document.querySelectorAll(".modal").forEach(s=>{s.parentNode!==document.body&&document.body.appendChild(s)})}function Ce(e){const t=e.value;t==="join_custom_game"?typeof window.openModal=="function"?window.openModal("joinCustomGameModal"):window.location.href="/?show_join_custom=1":window.location.href=t}window.handleGameSelection=Ce;let M=3e3,j=0;function v(e){var n;const t=document.getElementById(e);if(!t){u.error(`Modal ${e} not found`);return}document.body.appendChild(t),(n=document.querySelector(".container"))==null||n.classList.add("modal-open"),j=window.scrollY||window.pageYOffset,document.body.style.top=`-${j}px`,document.body.style.position="fixed",t.classList.add("active"),t.style.display="flex",M+=10,t.style.zIndex=M;const o=t.querySelector(".modal-backdrop");o&&(o.style.display="block",o.style.zIndex=M-1),document.body.classList.add("body-no-scroll")}function T(e){var n;const t=document.getElementById(e);if(!t)return;const o=t.querySelector(".modal-backdrop");t.style.display="none",o&&(o.style.display="none"),M=Math.max(1050,M-10),document.querySelector('.modal[style*="display: flex"]')||(document.body.classList.remove("body-no-scroll"),(n=document.querySelector(".container"))==null||n.classList.remove("modal-open"),document.body.style.position="",document.body.style.top="",window.scrollTo(0,j)),t.dispatchEvent(new CustomEvent("hidden.bs.modal",{bubbles:!0}))}function G(){const e=document.getElementById("twitterLink");e&&(e.style.display="none",e.href="#");const t=document.getElementById("facebookLink");t&&(t.style.display="none",t.href="#");const o=document.getElementById("instagramLink");o&&(o.style.display="none",o.href="#");const n=document.getElementById("modalQuestActions");n&&(n.innerHTML=""),document.querySelectorAll('[id^="verifyButton-"]').forEach(i=>i.remove()),document.querySelectorAll('[id^="verifyQuestForm-"]').forEach(i=>i.remove()),document.body.classList.remove("body-no-scroll")}function Be(e,t){const o=document.getElementById(e);if(o){if(t.gameId!==void 0){const n=o.querySelector('input[name="game_id"]');n&&(n.value=t.gameId)}if(t.questId!==void 0){const n=o.querySelector('input[name="quest_id"]');n&&(n.value=t.questId)}if(t.next!==void 0){const n=o.querySelector('input[name="next"]');n&&(n.value=t.next)}}}function Le(e){Be("loginModal",e),v("loginModal")}function ke(e={}){const t=document.getElementById("registerForm"),o=t.getAttribute("action").split("?")[0],n=[];e.gameId&&n.push(`game_id=${encodeURIComponent(e.gameId)}`),e.questId&&n.push(`quest_id=${encodeURIComponent(e.questId)}`),e.next&&n.push(`next=${encodeURIComponent(e.next)}`),e.showJoinCustom!==void 0&&n.push(`show_join_custom=${encodeURIComponent(e.showJoinCustom)}`),t.setAttribute("action",o+(n.length?`?${n.join("&")}`:"")),e.gameId!==void 0&&(document.getElementById("registerGameId").value=e.gameId),e.questId!==void 0&&(document.getElementById("registerQuestId").value=e.questId),e.next!==void 0&&(document.getElementById("registerNext").value=e.next),e.showJoinCustom!==void 0&&(document.getElementById("registerShowJoinCustom").value=e.showJoinCustom),T("loginModal"),v("registerModal")}function H({gameId:e,questId:t=""}){const o=document.getElementById("loginForm"),n=document.getElementById("loginGameId"),i=document.getElementById("loginQuestId"),s=document.getElementById("loginNext"),a=document.getElementById("loginShowJoinCustom"),r=`/?game_id=${encodeURIComponent(e)}&show_join_custom=0`;n.value=e,i.value=t,a.value="0",s.value=r;const c=o.getAttribute("action").split("?")[0],d=new URLSearchParams({game_id:e,quest_id:t,show_join_custom:0,next:r});o.setAttribute("action",`${c}?${d.toString()}`),v("loginModal")}function Se(){const e=document.getElementById("loginGameId").value||"",t=document.getElementById("loginQuestId").value||"",o=document.getElementById("loginNext").value||"",n=document.getElementById("loginShowJoinCustom").value||"",i=(document.getElementById("loginCustomGameCode")||{}).value||"";document.getElementById("registerGameId").value=e,document.getElementById("registerQuestId").value=t,document.getElementById("registerNext").value=o,document.getElementById("registerShowJoinCustom").value=n,document.getElementById("registerCustomGameCode").value=i;const s=document.getElementById("registerForm"),a=s.getAttribute("action").split("?")[0],r=new URLSearchParams;e&&r.set("game_id",e),t&&r.set("quest_id",t),o&&r.set("next",o),n&&r.set("show_join_custom",n),i&&r.set("custom_game_code",i),s.setAttribute("action",`${a}?${r.toString()}`),T("loginModal"),v("registerModal")}function $e(){var s;const e=((s=document.getElementById("loginEmail"))==null?void 0:s.value)||"",t=document.getElementById("forgotEmail");t&&(t.value=e);const o=document.getElementById("forgotEmailError"),n=document.getElementById("forgotSuccess"),i=document.getElementById("forgotButton");o&&(o.style.display="none"),n&&(n.style.display="none"),i&&(i.disabled=!1),v("forgotPasswordModal")}function ne(e){const t=document.getElementById("resetForm"),o=document.getElementById("resetToken"),n=t.dataset.baseAction;t.setAttribute("action",n+encodeURIComponent(e)),o.value=e,document.getElementById("resetError").style.display="none",document.getElementById("resetSuccess").style.display="none",document.getElementById("resetButton").disabled=!1,v("resetPasswordModal")}document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(e.get("show_reset")==="1"){const t=e.get("token");t?(ne(t),history.replaceState(null,"",window.location.pathname)):u.warn("show_reset=1 present but no token in URL")}});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search),t=e.get("show_join_custom")==="1",o=e.has("game_id");t&&!o&&v("joinCustomGameModal")});document.addEventListener("DOMContentLoaded",()=>{const t=new URLSearchParams(window.location.search).get("quest_shortcut");t&&(U(()=>Promise.resolve().then(()=>$t),void 0).then(o=>o.openQuestDetailModal(t)),history.replaceState(null,"",window.location.pathname))});document.addEventListener("DOMContentLoaded",()=>{const e=new URLSearchParams(window.location.search);if(!(e.get("show_login")==="1"))return;let o=e.get("game_id")||"";if(!o){const n=e.get("next");if(n)try{const s=new URL(n,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(s)&&(o=s)}catch(i){u.warn("Failed to parse next URL for gameId:",i)}}H({gameId:o,questId:""})});document.addEventListener("DOMContentLoaded",()=>{if(!window.location.pathname.startsWith("/auth/login"))return;const e=new URLSearchParams(window.location.search),t=e.get("next");if(!t)return;let o=e.get("game_id")||"";if(!o)try{const i=new URL(t,window.location.origin).pathname.replace(/^\/+/,"");/^\d+$/.test(i)&&(o=i)}catch(n){u.warn("Could not parse next URL for gameId:",n)}o&&H({gameId:o,questId:""})});async function V(e,t){try{const o=await fetch(e,{credentials:"same-origin"});if(!o.ok)throw new Error(`HTTP ${o.status}`);const n=await o.text(),i=document.getElementById(t);i&&i.parentNode.removeChild(i);const s=document.createElement("div");s.innerHTML=n.trim();const a=s.firstElementChild;(!a||a.id!==t)&&u.warn(`Expected first element to be #${t}`,a),document.body.appendChild(a),v(t)}catch(o){u.error(`Error loading ${t} from ${e}:`,o),alert("Failed to load data. Please try again later.")}}async function A(e){const t=await fetch(e.action,{method:e.method||"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:new FormData(e),credentials:"same-origin"}),o=await t.json();return{status:t.status,json:o}}document.addEventListener("click",e=>{const t=e.target.closest("[data-modal-url]");if(!t)return;e.preventDefault();const o=t.getAttribute("data-modal-url"),n=t.getAttribute("data-modal-id");if(!o||!n){u.error("data-modal-url or data-modal-id missing",t);return}V(o,n)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".modal").forEach(e=>{e.parentNode!==document.body&&document.body.appendChild(e)})});window.openModal=v;window.closeModal=T;window.openLoginModalWithOptions=Le;window.openRegisterModalWithOptions=ke;window.openLoginModalWithGame=H;window.registerFromLogin=Se;window.openForgotPasswordModal=$e;window.openResetPasswordModal=ne;window.fetchAndShowModal=V;window.submitFormJson=A;window.resetModalContent=G;document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("quest-form");e&&e.addEventListener("submit",t=>{document.getElementById("description").value.trim()||(alert("Description is required."),t.preventDefault())})});function C(e){fetch(`/profile/${e}`).then(t=>t.json()).then(t=>{if(!t.riding_preferences_choices){u.error("Riding preferences choices missing.");return}const o=document.getElementById("userProfileDetails");if(!o){u.error("Profile details containers not found");return}const n=t.current_user_id===t.user.id;o.innerHTML=`
          <!-- XS: native select dropdown -->
          <div class="d-block d-sm-none mb-3">
            <select id="profileTabSelect" class="form-select">
              <option value="profile" selected>Profile</option>
              <option value="bike">Bike</option>
              <option value="badges-earned">Badges Earned</option>
              <option value="games-participated">Games Participated</option>
              <option value="quest-submissions">Quest Submissions</option>
            </select>
          </div>

          <!-- SM+ nav-tabs (will scroll horizontally) -->
          <ul class="nav nav-tabs epic-tabs d-none d-sm-flex" id="profileTabs" role="tablist">
            <li class="nav-item" role="presentation">
              <a class="nav-link active" id="profile-tab" data-bs-toggle="tab"
                href="#profile" role="tab" aria-controls="profile" aria-selected="true">
                <i class="bi bi-person-circle me-2"></i>Profile
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="bike-tab" data-bs-toggle="tab"
                 href="#bike" role="tab" aria-controls="bike" aria-selected="false">
                <i class="bi bi-bicycle me-2"></i>Bike
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="badges-earned-tab" data-bs-toggle="tab"
                 href="#badges-earned" role="tab" aria-controls="badges-earned" aria-selected="false">
                <i class="bi bi-trophy me-2"></i>Badges Earned
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="games-participated-tab" data-bs-toggle="tab"
                 href="#games-participated" role="tab" aria-controls="games-participated" aria-selected="false">
                <i class="bi bi-controller me-2"></i>Games Participated
              </a>
            </li>
            <li class="nav-item" role="presentation">
              <a class="nav-link" id="quest-submissions-tab" data-bs-toggle="tab"
                 href="#quest-submissions" role="tab" aria-controls="quest-submissions" aria-selected="false">
                <i class="bi bi-list-quest me-2"></i>Quest Submissions
              </a>
            </li>
          </ul>

          <div class="tab-content bg-light p-4 rounded shadow-sm" id="profileTabsContent">

            <!-- 1) PROFILE pane -->
            <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
              <section class="profile mb-4">
                ${n?`
                  <div id="profileViewMode">
                    ${t.user.profile_picture?`
                      <div class="profile-picture-container position-relative mx-auto mb-3">
                        <img src="/static/${t.user.profile_picture}"
                            class="profile-picture rounded-circle shadow-lg border border-white border-4"
                            alt="Profile Picture">
                      </div>`:""}
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                    <button class="btn btn-primary" onclick="window.toggleProfileEditMode()">Edit</button>
                  </div>
                  <div id="profileEditMode" class="d-none">
                    <form id="editProfileForm" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                      <div class="form-group mb-3">
                        <label for="profilePictureInput">Profile Picture:</label>
                        <input type="file" class="form-control" id="profilePictureInput"
                                name="profile_picture" accept="image/*">
                      </div>
                      <div class="form-group mb-3">
                        <label for="displayName">Display Name:</label>
                        <input type="text" class="form-control" id="displayName" name="display_name"
                                value="${t.user.display_name||""}" required>
                        <div class="invalid-feedback">Display Name is required.</div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="ageGroup">Age Group:</label>
                        <select class="form-select" id="ageGroup" name="age_group">
                          <option value="teen" ${t.user.age_group==="teen"?"selected":""}>Teen</option>
                          <option value="adult" ${t.user.age_group==="adult"?"selected":""}>Adult</option>
                          <option value="senior" ${t.user.age_group==="senior"?"selected":""}>Senior</option>
                        </select>
                      </div>
                      <div class="form-group mb-3">
                        <label for="interests">Interests:</label>
                        <textarea class="form-control" id="interests" name="interests" rows="3"
                                  placeholder="Describe your interests...">${t.user.interests||""}</textarea>
                      </div>
                      <div class="form-group mb-3">
                        <label><b>Please specify your riding preferences:</b></label>
                        <div id="ridingPreferences">
                          ${t.riding_preferences_choices.map((l,m)=>`
                            <div class="form-check mb-2">
                              <input class="form-check-input" type="checkbox"
                                      id="ridingPref-${m}" name="riding_preferences"
                                      value="${l[0]}"
                                      ${t.user.riding_preferences.includes(l[0])?"checked":""}>
                              <label class="form-check-label" for="ridingPref-${m}">${l[1]}</label>
                            </div>
                          `).join("")}
                        </div>
                      </div>
                      <div class="form-group mb-3">
                        <label for="rideDescription">Describe the type of riding you like to do:</label>
                        <textarea class="form-control" id="rideDescription" name="ride_description" rows="3">${t.user.ride_description||""}</textarea>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToSocials" name="upload_to_socials"
                                ${t.user.upload_to_socials?"checked":""}>
                        <label class="form-check-label" for="uploadToSocials">Cross post to game's social media?</label>
                      </div>
                      <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="uploadToMastodon" name="upload_to_mastodon"
                                ${t.user.upload_to_mastodon?"checked":""}>
                        <label class="form-check-label" for="uploadToMastodon">Cross post to your federation server?</label>
                      </div>
                      <div class="d-flex justify-content-between">
                        <button type="button" class="btn btn-success" onclick="saveProfile(${e})">
                          <i class="bi bi-save me-2"></i>Save Profile
                        </button>
                        <button class="btn btn-secondary" onclick="cancelProfileEdit(${e})">Cancel</button>
                      </div>
                    </form>
                    <hr>
                    <form id="updatePasswordForm" class="d-flex justify-content-between">
                      <button class="btn btn-primary w-100 me-2" onclick="window.location.href='/auth/update_password'">
                        <i class="bi bi-shield-lock-fill me-2"></i>Update Password
                      </button>
                    </form>
                    <hr>
                    <form id="deleteAccountForm" onsubmit="event.preventDefault(); deleteAccount();">
                      <button class="btn btn-danger w-100">
                        <i class="bi bi-trash-fill me-2"></i>Delete My Account
                      </button>
                    </form>
                  </div>`:`
                  <div id="profileViewMode">
                    <p><img src="/static/${t.user.profile_picture}"
                        class="profile-picture rounded-circle shadow-lg border border-white border-4 w-50"
                        alt="Profile Picture"></p>
                    <p><strong>Display Name:</strong> ${t.user.display_name||""}</p>
                    <p><strong>Age Group:</strong> ${t.user.age_group||""}</p>
                    <p><strong>Interests:</strong> ${t.user.interests||""}</p>
                    <p><strong>Riding Preferences:</strong> ${t.user.riding_preferences.join(", ")}</p>
                    <p><strong>Ride Description:</strong> ${t.user.ride_description||""}</p>
                  </div>
                `}
              </section>
            </div>

            <!-- 2) BIKE pane -->
            <div class="tab-pane fade" id="bike" role="tabpanel" aria-labelledby="bike-tab">
              <section class="bike mb-4">
                <h2 class="h2">Bike Details</h2>
                ${n?`
                  <form id="editBikeForm" class="needs-validation" novalidate>
                    <div class="form-group mb-3">
                      <label for="bikePicture">Upload Your Bicycle Picture:</label>
                      <input type="file" class="form-control" id="bikePicture" name="bike_picture" accept="image/*">
                    </div>
                    ${t.user.bike_picture?`
                      <div class="form-group mb-3">
                        <label>Current Bicycle Picture:</label>
                        <img src="/static/${t.user.bike_picture}" class="img-fluid rounded shadow-sm" alt="Bicycle Picture">
                      </div>`:""}
                    <div class="form-group mb-3">
                      <label for="bikeDescription">Bicycle Description:</label>
                      <textarea class="form-control" id="bikeDescription" name="bike_description" rows="3">${t.user.bike_description||""}</textarea>
                    </div>
                    <div class="d-flex justify-content-between">
                      <button class="btn btn-success" onclick="saveBike(${e})">
                        <i class="bi bi-save me-2"></i>Save Bike Details
                      </button>
                    </div>
                  </form>`:`
                  <p><strong>Bicycle Description:</strong> ${t.user.bike_description||""}</p>`}
              </section>
            </div>

            <!-- 3) BADGES EARNED pane -->
            <div class="tab-pane fade" id="badges-earned" role="tabpanel" aria-labelledby="badges-earned-tab">
              <section class="badges-earned mb-4">
                <h2 class="h2">Badges Earned</h2>
                <div class="badge-grid">
                  ${t.user.badges&&t.user.badges.length?t.user.badges.map(l=>`
                      <div class="badge-card">
                        <img src="/static/images/badge_images/${l.image}" alt="${l.name}" class="badge-icon" style="width:100px;">
                        <div class="badge-caption">
                          <h3>${l.name}</h3>
                          <p>${l.description}</p>
                          <p><strong>Category:</strong> ${l.category}</p>
                        </div>
                      </div>
                    `).join(""):'<p class="text-muted">No badges earned yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 4) GAMES PARTICIPATED pane -->
            <div class="tab-pane fade" id="games-participated" role="tabpanel" aria-labelledby="games-participated-tab">
              <section class="games-participated mb-4">
                <h2 class="h2">Games Participated</h2>
                <div class="row g-3">
                  ${t.participated_games&&t.participated_games.length?t.participated_games.map(l=>`
                      <div class="game-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        <h3 class="h5">${l.title}</h3>
                        <p class="text-muted">${l.description}</p>
                        <p><strong>Start Date:</strong> ${l.start_date}</p>
                        <p><strong>End Date:</strong> ${l.end_date}</p>
                      </div>
                    `).join(""):'<p class="text-muted">No games participated in yet.</p>'}
                </div>
              </section>
            </div>

            <!-- 5) QUEST SUBMISSIONS pane -->
            <div class="tab-pane fade" id="quest-submissions" role="tabpanel" aria-labelledby="quest-submissions-tab">
              <section class="quest-submissions mb-4">
                <h2 class="h2">Quest Submissions</h2>
                <div class="row g-3">
                  ${t.quest_submissions&&t.quest_submissions.length?t.quest_submissions.map(l=>`
                      <div class="submission-item col-md-6 p-3 border rounded shadow-sm bg-white">
                        ${l.image_url?`<img src="${l.image_url}" alt="Submission Image" class="img-fluid rounded mb-2" style="max-height:200px; object-fit:cover;">`:""}
                        <p><strong>Quest:</strong> ${l.quest.title}</p>
                        <p class="text-muted">${l.comment}</p>
                        <p><strong>Submitted At:</strong> ${l.timestamp}</p>
                        <div class="d-flex gap-2">
                          ${l.twitter_url?`<a href="${l.twitter_url}"   target="_blank" class="btn btn-sm btn-twitter"><i class="bi bi-twitter"></i></a>`:""}
                          ${l.fb_url?`<a href="${l.fb_url}"        target="_blank" class="btn btn-sm btn-facebook"><i class="bi bi-facebook"></i></a>`:""}
                          ${l.instagram_url?`<a href="${l.instagram_url}" target="_blank" class="btn btn-sm btn-instagram"><i class="bi bi-instagram"></i></a>`:""}
                        </div>
                        ${n?`<button class="btn btn-danger btn-sm mt-2" onclick="deleteSubmission(${l.id}, 'profileSubmissions', ${t.user.id})">Delete</button>`:""}
                      </div>
                    `).join(""):'<p class="text-muted">No quest submissions yet.</p>'}
                </div>
              </section>
            </div>

          </div> <!-- /.tab-content -->
        </div> <!-- /.row -->
      `;const i=document.getElementById("userProfileModalLabel");i.textContent=`${t.user.display_name||t.user.username}'s Profile`;const s=document.getElementById("followBtn");s&&(s.style.display="");const a=document.getElementById("followerCount");let r=t.user.follower_count;function c(){a&&(a.textContent=`${r} follower${r===1?"":"s"}`)}if(c(),!n&&s){let m=function(){l?(s.textContent="Following",s.classList.remove("btn-primary"),s.classList.add("btn-outline-primary")):(s.textContent="Follow",s.classList.remove("btn-outline-primary"),s.classList.add("btn-primary"))};s&&(s.style.display="",s.classList.remove("d-none"));let l=t.current_user_following;m(),s.onclick=async()=>{const g=l?"unfollow":"follow",p=await fetch(`/profile/${t.user.username}/${g}`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":I()},credentials:"same-origin"});if(!p.ok){u.error("Follow toggle failed:",await p.text());return}l=!l,r+=l?1:-1,m(),c()}}else{const l=document.getElementById("followBtn");l&&(l.style.display="none")}v("userProfileModal");const d=document.getElementById("profileTabSelect");d&&(d.addEventListener("change",l=>{const m=l.target.value,g=document.querySelector(`#profileTabs a[href="#${m}"]`);g&&new bootstrap.Tab(g).show()}),document.querySelectorAll('#profileTabs a[data-bs-toggle="tab"]').forEach(l=>{l.addEventListener("shown.bs.tab",m=>{d.value=m.target.getAttribute("href").slice(1)})}))}).catch(t=>{u.error("Failed to load profile:",t),alert("Could not load user profile. Please try again.")})}document.querySelectorAll("[data-floating-ui-tooltip]").forEach(e=>{tippy(e,{content:e.getAttribute("data-floating-ui-tooltip"),placement:"top",animation:"scale-subtle"})});document.querySelectorAll(".needs-validation").forEach(e=>{e.addEventListener("submit",t=>{e.checkValidity()||(t.preventDefault(),t.stopPropagation()),e.classList.add("was-validated")},!1)});function xe(){const e=document.getElementById("profileViewMode"),t=document.getElementById("profileEditMode");if(!e||!t){u.error("Profile edit mode elements missing");return}e.classList.toggle("d-none"),t.classList.toggle("d-none")}function Te(e){C(e)}function Me(e){const t=document.getElementById("editProfileForm");if(!t){u.error("Edit profile form not found");return}const o=new FormData(t),n=document.getElementById("profilePictureInput");n.files.length>0&&o.append("profile_picture",n.files[0]);const i=[];t.querySelectorAll('input[name="riding_preferences"]:checked').forEach(s=>{i.push(s.value)}),o.delete("riding_preferences"),i.forEach(s=>{o.append("riding_preferences",s)}),fetch(`/profile/${e}/edit`,{method:"POST",headers:{"X-CSRFToken":I()},body:o}).then(s=>s.json()).then(s=>{if(s.error){let a=`Error: ${s.error}`;if(s.details){const r=[];Object.values(s.details).forEach(c=>{r.push(c.join(", "))}),r.length&&(a+=` - ${r.join("; ")}`)}alert(a)}else alert("Profile updated successfully."),C(e)}).catch(s=>{u.error("Error updating profile:",s),alert("Failed to update profile. Please try again.")})}function qe(e){const t=document.getElementById("editBikeForm");if(!t){u.error("Edit bike form not found");return}const o=new FormData(t),n=document.getElementById("bikePicture");n.files.length>0&&o.append("bike_picture",n.files[0]),fetch(`/profile/${e}/edit-bike`,{method:"POST",headers:{"X-CSRFToken":I()},body:o}).then(i=>i.json()).then(i=>{i.error?alert(`Error: ${i.error}`):(alert("Bike details updated successfully."),C(e))}).catch(i=>{u.error("Error updating bike details:",i),alert("Failed to update bike details. Please try again.")})}function Pe(e,t,o){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":I()}}).then(n=>n.json()).then(n=>{if(n.success)alert("Submission deleted successfully."),t==="profileSubmissions"&&C(o);else throw new Error(n.message)}).catch(n=>{u.error("Error deleting submission:",n),alert("Error during deletion: "+n.message)})}function De(){confirm("Are you sure you want to delete your account? This action cannot be undone.")&&fetch("/auth/delete_account",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":I()}}).then(e=>{if(e.redirected)window.location.href=e.url;else return e.json()}).then(e=>{if(e&&e.error)throw new Error(e.error);alert("Your account has been successfully deleted."),window.location.href="/"}).catch(e=>{u.error("Error deleting account:",e),alert("Failed to delete account. Please try again.")})}window.showUserProfileModal=C;window.toggleProfileEditMode=xe;window.cancelProfileEdit=Te;window.saveProfile=Me;window.saveBike=qe;window.deleteSubmission=Pe;window.deleteAccount=De;let $;document.addEventListener("DOMContentLoaded",()=>{const e=c=>document.querySelector(c);if(!e("#submissionDetailModal"))return;const o=document.getElementById("replyLimitMessage"),n=()=>I(),i=document.querySelector('meta[name="placeholder-image"]').getAttribute("content");$=function(c){const d=e("#submissionDetailModal");d.dataset.submissionId=c.id,d.dataset.questId=c.quest_id||"";const l=Number(d.dataset.currentUserId),m=Number(c.user_id)===l,g=d.dataset.isAdmin==="True"||d.dataset.isAdmin==="true",p=e("#editPhotoBtn"),f=e("#photoEditControls"),b=e("#submissionPhotoInput"),E=e("#savePhotoBtn"),y=e("#cancelPhotoBtn"),k=e("#deleteSubmissionBtn");p.hidden=!m,k.hidden=!(m||g),f.hidden=!0,p.addEventListener("click",()=>{f.hidden=!1,p.hidden=!0}),y.addEventListener("click",()=>{b.value="",f.hidden=!0,p.hidden=!1}),k.addEventListener("click",()=>{if(!confirm("Are you sure you want to delete this submission?"))return;const _=d.dataset.submissionId;fetch(`/quests/quest/delete_submission/${_}`,{method:"DELETE",headers:{"X-CSRF-Token":n()}}).then(w=>w.json()).then(w=>{if(!w.success)throw new Error(w.message||"Delete failed");T("submissionDetailModal"),G(),d.dataset.questId&&refreshQuestDetailModal(d.dataset.questId),alert("Submission deleted successfully.")}).catch(w=>alert("Error deleting submission: "+w.message))}),E.addEventListener("click",()=>{const _=d.dataset.submissionId,w=b.files[0];if(!w)return alert("Please select an image first.");if(w.type.startsWith("video/")&&w.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(w.type.startsWith("image/")&&w.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const R=new FormData;w.type.startsWith("video/")?R.append("video",w):R.append("photo",w),fetch(`/quests/submission/${_}/photo`,{method:"PUT",credentials:"same-origin",headers:{"X-CSRFToken":n()},body:R}).then(B=>B.json()).then(B=>{if(!B.success)throw new Error(B.message||"Upload failed");B.video_url?(e("#submissionImage").hidden=!0,e("#submissionVideo").hidden=!1,e("#submissionVideoSource").src=B.video_url,e("#submissionVideo").load()):(e("#submissionVideo").hidden=!0,e("#submissionImage").hidden=!1,e("#submissionImage").src=B.image_url),y.click()}).catch(B=>alert(B.message))}),e("#submissionReplyEdit").hidden=m,e("#postReplyBtn").hidden=m,e("#ownerNotice").hidden=!m;const x=e("#submissionRepliesContainer");m?x.hidden=!0:x.hidden=!1;const h={img:e("#submissionImage"),video:e("#submissionVideo"),videoSource:e("#submissionVideoSource"),imgOverlay:e("#submitterProfileImageOverlay"),commentRead:e("#submissionComment"),commentEdit:e("#submissionCommentEdit"),readBox:e("#commentReadButtons"),editBox:e("#commentEditButtons"),editBtn:e("#editCommentBtn"),profileImg:e("#submitterProfileImage"),profileImgOverlay:e("#submitterProfileImageOverlay"),profileCap:e("#submitterProfileCaption"),profileLink:e("#submitterProfileLink"),social:{tw:e("#twitterLink"),fb:e("#facebookLink"),ig:e("#instagramLink")}};h.profileImg.src=c.user_profile_picture||i,h.profileImgOverlay.src=h.profileImg.src,h.profileCap.textContent=c.user_display_name||c.user_username||"—",h.profileLink.onclick=_=>{_.preventDefault(),C(c.user_id)},h.imgOverlay.parentElement.onclick=h.profileLink.onclick;const ye=i;c.video_url?(h.img.hidden=!0,h.video.hidden=!1,h.videoSource.src=c.video_url,h.video.load()):(h.video.hidden=!0,h.img.hidden=!1,h.img.src=c.url||ye),h.commentRead.textContent=c.comment||"No comment provided.",["tw","fb","ig"].forEach(_=>{const w=_==="tw"?"twitter_url":_==="fb"?"fb_url":"instagram_url";try{new URL(c[w]),h.social[_].href=c[w],h.social[_].style.display="inline-block"}catch{h.social[_].style.display="none"}}),m?(h.editBtn.hidden=!1,h.readBox.hidden=!1):h.editBtn.hidden=h.readBox.hidden=h.commentEdit.hidden=h.editBox.hidden=!0,a(),v("submissionDetailModal")},e("#editCommentBtn").addEventListener("click",()=>{e("#submissionCommentEdit").value=e("#submissionComment").textContent.trim(),s(!0)}),e("#saveCommentBtn").addEventListener("click",()=>{const c=e("#submissionDetailModal").dataset.submissionId;fetch(`/quests/submission/${c}/comment`,{method:"PUT",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({comment:e("#submissionCommentEdit").value.trim()})}).then(d=>{if(!d.ok)throw new Error(d.status);return d.json()}).then(d=>{if(!d.success)throw new Error(d.message||"Save failed");e("#submissionComment").textContent=d.comment||"No comment provided.",s(!1)}).catch(d=>alert(`Could not save comment: ${d.message}`))}),e("#cancelCommentBtn").addEventListener("click",()=>s(!1));function s(c){e("#submissionComment").hidden=c,e("#commentReadButtons").hidden=c,e("#submissionCommentEdit").hidden=!c,e("#commentEditButtons").hidden=!c}function a(){const c=e("#submissionDetailModal").dataset.submissionId;c&&(fetch(`/quests/submissions/${c}`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{e("#submissionLikeCount").textContent=d.like_count||0,e("#submissionLikeBtn").classList.toggle("active",d.liked_by_current_user)}),fetch(`/quests/submission/${c}/replies`,{credentials:"same-origin"}).then(d=>d.json()).then(d=>{const l=e("#submissionRepliesList");l.innerHTML="",d.replies.forEach(p=>{const f=document.createElement("div");f.className="reply mb-1",f.innerHTML=`
            <a href="#" class="reply-user-link" data-user-id="${p.user_id}">
              <strong>${p.user_display}</strong>
            </a>: ${p.content}
          `,f.querySelector(".reply-user-link").addEventListener("click",E=>{E.preventDefault(),C(p.user_id)}),l.appendChild(f)});const m=e("#submissionReplyEdit"),g=e("#postReplyBtn");d.replies.length>=10?(m.disabled=!0,g.disabled=!0,o&&(o.style.display="block")):(m.disabled=!1,g.disabled=!1,o&&(o.style.display="none"))}))}e("#submissionLikeBtn").addEventListener("click",()=>{const c=e("#submissionLikeBtn"),d=e("#submissionDetailModal").dataset.submissionId,l=c.classList.contains("active");fetch(`/quests/submission/${d}/like`,{method:l?"DELETE":"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()}}).then(m=>{if(!m.ok)throw new Error(m.status);return m.json()}).then(m=>{if(!m.success)throw new Error("Like failed");e("#submissionLikeCount").textContent=m.like_count,c.classList.toggle("active",m.liked)}).catch(m=>alert(m.message))}),e("#postReplyBtn").addEventListener("click",()=>{const c=e("#submissionDetailModal").dataset.submissionId,d=e("#submissionReplyEdit");e("#postReplyBtn");const l=d.value.trim();!c||!l||fetch(`/quests/submission/${c}/replies`,{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json","X-CSRFToken":n()},body:JSON.stringify({content:l})}).then(m=>m.json().then(g=>({ok:m.ok,status:m.status,body:g}))).then(({ok:m,status:g,body:p})=>{if(!p.success){if(p.message==="Reply limit of 10 reached"){r();return}if(g===409&&p.message==="Duplicate reply")return alert("You have already posted that exact reply.");throw new Error(p.message||"Error")}const f=e("#submissionRepliesList"),b=document.createElement("div");b.className="reply mb-1",b.innerHTML=`<strong>${p.reply.user_display}</strong>: ${p.reply.content}`,f.insertBefore(b,f.firstChild),d.value="",f.children.length>=10&&r()}).catch(m=>alert(m.message))});function r(){const c=e("#submissionReplyEdit"),d=e("#postReplyBtn");c.disabled=!0,d.disabled=!0,o&&(o.style.display="block")}window.showSubmissionDetail=$});const oe=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=oe;let D=0,ie=null,J=!1,Y=!1;function se(e){D=0,ie=e;const t=document.getElementById("allSubmissionsContainer");t&&(t.innerHTML=""),v("allSubmissionsModal"),ae()}function ae(){const e=D*10;fetch(`/quests/quest/all_submissions?game_id=${ie}&offset=${e}&limit=10`).then(t=>t.json()).then(t=>{if(t.error)throw new Error(t.error);J=t.is_admin,Y=t.has_more,Ae(t.submissions,J,D>0),Re(Y),D+=1}).catch(t=>{u.error("Error fetching all submissions:",t),alert("Error fetching all submissions: "+t.message)})}function Ae(e,t,o=!1){const n=document.getElementById("allSubmissionsContainer");if(!n){u.error("allSubmissionsContainer element not found.");return}o||(n.innerHTML=""),e.forEach(i=>{const s=document.createElement("div");s.className="submission-card";const a=document.createElement("img");a.src=i.image_url||oe,a.alt="Quest Submission",a.className="submission-image";const r=document.createElement("div");r.className="submission-info";const c=document.createElement("p");c.textContent=`User: ${i.user_display_name||i.user_username}`,c.className="submission-user-details";const d=document.createElement("p"),l=new Date(i.timestamp).toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit",hour12:!0});d.textContent=`Submitted on: ${l}`,d.className="submission-timestamp";const m=document.createElement("p");m.textContent=`Comment: ${i.comment}`,m.className="submission-comment";const g=document.createElement("p");g.textContent=`Twitter: ${i.twitter_url||"N/A"}`,g.className="submission-comment";const p=document.createElement("p");p.textContent=`Facebook: ${i.fb_url||"N/A"}`,p.className="submission-comment";const f=document.createElement("p");if(f.textContent=`Instagram: ${i.instagram_url||"N/A"}`,f.className="submission-comment",r.appendChild(c),r.appendChild(d),r.appendChild(m),r.appendChild(g),r.appendChild(p),r.appendChild(f),t){const b=document.createElement("button");b.textContent="Delete",b.className="button delete-button",b.addEventListener("click",function(E){E.stopPropagation(),Fe(i.id)}),s.appendChild(b)}s.appendChild(a),s.appendChild(r),s.addEventListener("click",function(){$({url:i.image_url||i.video_url,video_url:i.video_url,comment:i.comment,user_id:i.user_id,user_display_name:i.user_display_name||i.user_username,user_profile_picture:i.user_profile_picture,twitter_url:i.twitter_url,fb_url:i.fb_url,instagram_url:i.instagram_url,verification_type:"image"}),v("submissionDetailModal")}),n.appendChild(s)})}function Fe(e){fetch(`/quests/quest/delete_submission/${e}`,{method:"DELETE",headers:{"X-CSRF-Token":I()}}).then(t=>t.json()).then(t=>{if(t.success)alert("Submission deleted successfully.");else throw new Error(t.message)}).catch(t=>{u.error("Error deleting submission:",t),alert("Error during deletion: "+t.message)})}function Re(e){const t=document.getElementById("loadMoreSubmissions");t&&(t.style.display=e?"block":"none")}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loadMoreSubmissions");e&&e.addEventListener("click",()=>{ae()})});window.showAllSubmissionsModal=se;document.addEventListener("DOMContentLoaded",()=>{Oe(),document.querySelectorAll("[data-toggle-form]").forEach(e=>{e.addEventListener("click",()=>Ne(e.dataset.toggleForm))})});function Oe(){const e=document.getElementById("badgesBody");e&&fetch("/badges").then(t=>t.json()).then(t=>{e.innerHTML="",t.badges.forEach(o=>{const n=document.createElement("tr");n.dataset.badgeId=o.id;const i=o.image?`<img src="${o.image}" height="50" alt="Badge Image">`:"No Image";n.innerHTML=`
                    <td class="badge-image-manage">${i}</td>
                    <td class="badge-name">${o.name}</td>
                    <td class="badge-description">${o.description}</td>
                    <td class="badge-category">${o.category||"None"}</td>
                    <td>
                        <button class="edit-badge" data-badge-id="${o.id}">Edit</button>
                        <button class="delete-badge" data-badge-id="${o.id}">Delete</button>
                    </td>
                `,n.querySelector(".edit-badge").addEventListener("click",()=>je(o.id)),n.querySelector(".delete-badge").addEventListener("click",()=>Ge(o.id)),e.appendChild(n)})}).catch(t=>u.error("Failed to load badges:",t))}function Ne(e){const t=document.getElementById(e);t&&t.classList.toggle("d-none")}function Qe(e){return fetch("/badges/categories").then(t=>t.json()).then(t=>{const o=t.categories||[],n=document.createElement("select");n.className="form-control badge-category-select";const i=document.createElement("option");return i.value="none",i.textContent="None",(!e||e==="none")&&(i.selected=!0),n.appendChild(i),o.forEach(s=>{const a=document.createElement("option");a.value=s,a.textContent=s,s===e&&(a.selected=!0),n.appendChild(a)}),n}).catch(t=>{u.error("Error fetching categories:",t);const o=document.createElement("select");o.className="form-control badge-category-select";const n=document.createElement("option");return n.value="none",n.textContent="None",n.selected=!0,o.appendChild(n),o})}function je(e){const t=document.querySelector(`tr[data-badge-id='${e}']`);if(!t){u.error(`Badge row with ID ${e} not found.`);return}const o=t.querySelector(".badge-name"),n=t.querySelector(".badge-description"),i=t.querySelector(".badge-category"),s=t.querySelector(".badge-image-manage");o.textContent="";const a=document.createElement("input");a.type="text",a.value=o.innerText.trim(),a.className="form-control badge-name-input",o.appendChild(a),n.textContent="";const r=document.createElement("textarea");if(r.className="form-control badge-description-textarea",r.value=n.innerText.trim(),n.appendChild(r),s){s.textContent="";const c=document.createElement("input");c.type="file",c.className="form-control-file badge-image-input",s.appendChild(c)}else u.error("Could not find badge-image-manage cell");Qe(i.innerText.trim()).then(c=>{i.textContent="",i.appendChild(c);const d=t.querySelector("button.edit-badge");d.innerText="Save",d.onclick=()=>Ue(e)})}function Ue(e){const t=document.querySelector(`tr[data-badge-id='${e}']`),o=new FormData;o.append("name",t.querySelector(".badge-name-input").value.trim()),o.append("description",t.querySelector(".badge-description-textarea").value.trim()),o.append("category",t.querySelector(".badge-category-select").value);const n=t.querySelector(".badge-image-input");n&&n.files.length>0&&o.append("image",n.files[0]);const i=document.querySelector("[name=csrf_token]").value;fetch(`/badges/update/${e}`,{method:"POST",body:o,headers:{"X-CSRFToken":i}}).then(s=>s.json()).then(s=>{s.success?(alert("Badge updated successfully"),window.location.reload()):alert("Failed to update badge: "+s.message)}).catch(s=>u.error("Error updating badge:",s))}function Ge(e){confirm("Are you sure you want to delete this badge?")&&fetch(`/badges/delete/${e}`,{method:"DELETE",headers:{"X-CSRFToken":I()}}).then(t=>t.json()).then(t=>{t.success?window.location.reload():alert(`Failed to delete badge: ${t.message}`)}).catch(t=>{u.error("Error deleting badge:",t),alert("Error deleting badge. Please check console for details.")})}window.allBadges=window.allBadges||[];const F=window.PLACEHOLDER_IMAGE||document.querySelector('meta[name="placeholder-image"]').getAttribute("content");window.PLACEHOLDER_IMAGE=F;function He(e){try{const t=new URL(e,window.location.origin);if(t.protocol==="http:"||t.protocol==="https:")return e}catch{}return F}async function Ve(){const e=document.getElementById("game_IdHolder"),t=e?e.getAttribute("data-game-id"):null,n=`/badges${t&&!isNaN(parseInt(t,10))&&t!=="0"?`?game_id=${t}`:""}`,i=await fetch(n,{credentials:"same-origin"});if(!i.ok)throw new Error("Error fetching badges");const s=await i.json();return window.allBadges=s.badges,window.allBadges}async function re(){if(!window.allBadges||window.allBadges.length===0)try{await Ve()}catch(e){u.error("Error loading badges:",e),window.allBadges=[]}}function We(e){return e?`<ul>${e.split(",").map(o=>`<li>${P(o.trim())}</li>`).join("")}</ul>`:""}function Xe(e){return window.allBadges.find(t=>t.id==e)}function Je(e){return{id:e.getAttribute("data-badge-id"),name:e.getAttribute("data-badge-name")||"Badge",description:e.getAttribute("data-badge-description")||"",image:e.getAttribute("data-badge-image")||F}}async function Ye(e){const t=await fetch(`/quests/detail/${e}/user_completion`);if(!t.ok)throw new Error("Failed to fetch user completions");const o=await t.json();return o.userCompletion?o.userCompletion.completions:0}function ze(e,t,o,n,i,s,a){const r=document.getElementById("badgeModalTitle"),c=document.getElementById("badgeModalImage"),d=document.getElementById("badgeModalText");if(!r||!c||!d){u.error("Badge modal elements missing");return}r.textContent=e.name,c.src=He(e.image)||F;let l="";if(s){const g=`<a href="#" onclick="openQuestDetailModal('${s}')">${P(a)}</a>`;l=`<p>Completion Requirement: ${t>1?t+" times":t+" time"}</p><p>Your Total Completions: ${o}</p><p>${i?"You have earned this badge.":"Complete "+g+" to earn this badge."}</p>`}else l=`<p>Completion Requirements: ${t} (per task)</p><p>Your Total Completions: ${o}</p>${n}<p>${i?"You have earned this badge.":"Complete one of the above tasks to earn this badge."}</p>`;const m=e.description||"No description available.";i?(c.style.filter="none",c.oncontextmenu=null,d.innerHTML=`<p><strong>Awarded!</strong></p>${l}<p>${P(m)}</p>`):(c.style.filter="grayscale(100%) opacity(0.5)",c.oncontextmenu=g=>(g.preventDefault(),!1),d.innerHTML=`<p><strong>Not Awarded Yet</strong></p>${l}<p>${P(m)}</p>`)}async function Ke(e){const t=e.getAttribute("data-badge-id"),o=e.getAttribute("data-task-name"),n=e.getAttribute("data-task-id"),i=e.getAttribute("data-badge-awarded-count"),s=e.getAttribute("data-user-completions"),a=parseInt(i,10),r=parseInt(s,10)||0,c=We(o),d=n?n.split(",").map(f=>f.trim()).filter(Boolean):[],l=d.length===1?d[0]:null;await re();const m=Xe(t)||Je(e);let g=r;if(l)try{g=await Ye(l)}catch(f){u.error("Error fetching user completions:",f)}const p=g>=a;ze(m,a,g,c,p,l,o),v("badgeModal")}document.addEventListener("DOMContentLoaded",()=>{re()});window.openBadgeModal=Ke;document.addEventListener("DOMContentLoaded",()=>{});let O;function Ze(e){const t=document.getElementById("deleteGameModal"),o=document.getElementById("deleteGameForm"),n=document.getElementById("deleteGameConfirmInput"),i=document.getElementById("deleteGameCountdown"),s=document.getElementById("deleteGameTimer"),a=document.getElementById("deleteGameConfirmBtn");if(!t||!o||!n||!i||!s||!a){u.warn("Delete game modal elements missing");return}t.dataset.gameId=e,o.action=`/games/delete_game/${e}`,n.value="",a.disabled=!0,i.hidden=!0,s.textContent="5",v("deleteGameModal")}function z(){const e=document.getElementById("deleteGameConfirmInput"),t=document.getElementById("deleteGameConfirmBtn"),o=document.getElementById("deleteGameCountdown"),n=document.getElementById("deleteGameTimer"),i=document.getElementById("deleteGameUndo"),s=document.getElementById("deleteGameForm");!e||!t||!o||!n||!i||!s||(e.addEventListener("input",()=>{t.disabled=e.value.trim().toLowerCase()!=="delete"}),t.addEventListener("click",()=>{let a=5;o.hidden=!1,n.textContent=a.toString(),O=setInterval(()=>{a-=1,n.textContent=a.toString(),a<=0&&(clearInterval(O),s.submit())},1e3)}),i.addEventListener("click",()=>{clearInterval(O),o.hidden=!0,n.textContent="5",e.value="",t.disabled=!0}))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",z):z();window.openDeleteGameModal=Ze;document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("flash-data");if(!e)return;const t=JSON.parse(e.getAttribute("data-messages")||"[]");if(!t.length)return;const[o,n]=t[0],i=document.getElementById("flash-overlay");i.querySelector(".flash-content").textContent=n,i.querySelector(".flash-modal").classList.add(`flash-${o}`),requestAnimationFrame(()=>{i.classList.add("visible")});function s(){i.classList.remove("visible"),e.removeAttribute("data-messages")}i.querySelector(".flash-close").addEventListener("click",s),i.querySelector(".flash-ok-btn").addEventListener("click",s)});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("forgotForm");if(!e)return;const t=document.getElementById("forgotEmailError"),o=document.getElementById("forgotSuccess"),n=document.getElementById("forgotButton"),i=document.getElementById("forgotEmail"),s=document.getElementById("forgotEmailDisplay"),a=document.getElementById("forgotPasswordModal");new MutationObserver(()=>{a.style.display==="block"&&(s.textContent=i.value)}).observe(a,{attributes:!0,attributeFilter:["style"]}),e.addEventListener("submit",c=>{c.preventDefault(),t.style.display="none",o.style.display="none",A(e).then(({json:d})=>{d.success?(o.textContent=d.message,o.style.display="block",n.disabled=!0):(t.textContent=d.error||"An error occurred.",t.style.display="block")}).catch(()=>{e.submit()})})});function et(e){const t="/games/game-info/"+e+"?modal=1";V(t,"gameInfoModal")}window.showGameInfoModal=et;document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("button[data-game-id]").forEach(o=>{o.addEventListener("click",function(){t(this)})});function t(o){const n=document.getElementById("questCreationForm"),i=o.getAttribute("data-game-id");n?n.addEventListener("submit",function(s){s.preventDefault();const a=document.getElementById("questDescription").value,r=document.querySelector("[name=csrf_token]").value;fetch("/ai/generate_quest",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":r},body:JSON.stringify({description:a,game_id:i})}).then(c=>c.ok?c.json():c.json().then(d=>Promise.reject({status:c.status,statusText:c.statusText,errorMessage:d.error}))).then(c=>{if(c.generated_quest_html){document.getElementById("generatedQuestContent").innerHTML=c.generated_quest_html,v("generateAIQuestModal");const d=document.getElementById("generateAIQuestModalForm");d&&d.setAttribute("data-game-id",i),d&&d.addEventListener("submit",function(f){f.preventDefault();const b=new FormData(d),E=document.querySelector("[name=csrf_token]").value;fetch("/ai/create_quest",{method:"POST",headers:{"X-CSRFToken":E},body:b}).then(y=>y.json()).then(y=>{window.location.href="/",u.log(y)}).catch(y=>{u.error("Error:",y)})});const l=document.getElementById("generateAIImage"),m=document.getElementById("badge_description"),g=document.getElementById("aiBadgeImage"),p=document.getElementById("aiBadgeFilename");if(!l||!m||!g||!p){u.error("One or more elements not found in the DOM");return}l.addEventListener("click",function(){u.log("Generate AI Image button clicked");const f=m.value;if(u.log("Badge Description:",f),!f){alert("Please enter a badge description first.");return}fetch("/ai/generate_badge_image",{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":document.querySelector("[name=csrf_token]").value},body:JSON.stringify({badge_description:f})}).then(b=>b.json()).then(b=>{if(u.log("Response data:",b),b.error)alert("Error generating badge image: "+b.error);else{const E=`${b.filename}`,y=`static/images/badge_images/${b.filename}`;g.src=y,g.style.display="block",p.value=E}}).catch(b=>{u.error("Fetch error:",b),alert("Error: "+b)})})}}).catch(c=>{alert("Error generating quest: "+(c.errorMessage||c.statusText))})}):u.error("Form '#questCreationForm' not found.")}});const tt=async()=>{try{const t=await(await fetch("/refresh-csrf")).json();document.querySelector('meta[name="csrf-token"]').setAttribute("content",t.csrf_token)}catch(e){u.error("Error refreshing CSRF token:",e)}};setInterval(tt,9e5);const nt=async e=>{try{const o=await(await fetch(`/games/get_game_points/${e}`,{credentials:"same-origin"})).json(),n=o.total_game_points,i=o.game_goal,s=i-n,a=Math.min(n/i*100,100),r=document.getElementById("meterBar"),c=document.querySelector(".meter-label");r&&(r.style.height=`${a}%`),document.documentElement.style.setProperty("--meter-fill-height",`${a}%`),c&&(c.innerText=`Remaining Reduction: ${s} / ${i}`)}catch(t){u.error("Failed to update meter:",t)}};function ot(){const e=document.getElementById("game_IdHolder"),t=document.getElementById("gameNameHeader");if(!e||!t)return;const o=e.getAttribute("data-game-id");fetch(`/games/get_game/${o}`,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw u.error(`Failed fetching game name; URL returned status ${n.status} (${n.statusText})`),t.textContent="Error Loading Game",new Error(`HTTP ${n.status}: ${n.statusText}`);return n.json()}).then(n=>{t.textContent=n.name||"Game Not Found"}).catch(n=>{u.error("Error retrieving game name:",n),t.textContent="Error Loading Game"})}document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("leaderboardButton");e&&e.addEventListener("click",async()=>{const r=e.getAttribute("data-game-id");(await U(()=>import("./chunk-DYHYIg9m.js"),__vite__mapDeps([0,1]))).showLeaderboardModal(r),nt(r)});const t=document.getElementById("submissionsButton");t&&t.addEventListener("click",()=>{currentUserId!=="none"&&se(currentUserId)});const o=document.getElementById("contactForm");o&&o.addEventListener("submit",async r=>{r.preventDefault();const c=new FormData(o);Ee();try{const d=await fetch(o.action,{method:"POST",body:c,headers:{"X-Requested-With":"XMLHttpRequest"}}),l=await d.json();d.ok&&l.success?(alert("Your message has been sent successfully."),T("contactModal")):alert("Failed to send your message. Please try again.")}catch{alert("Failed to send your message. Please try again.")}finally{we()}}),document.getElementById("message-input")&&(document.querySelector("form").onsubmit=()=>!0),document.querySelectorAll(".activity-message").forEach(r=>{r.innerHTML=r.innerHTML.replace(/<\/?p[^>]*>/g,"")});const i=document.getElementById("questSearchInput"),s=document.getElementById("questCategoryDropdown");i&&i.addEventListener("input",K),s&&s.addEventListener("change",K);const a=document.querySelector("#whats-happening-step");if(a){const r=a.querySelectorAll(".wh-tab-button"),c=a.querySelectorAll(".wh-tab-content");r.forEach(d=>{d.addEventListener("click",()=>{const l=d.getAttribute("data-wh-tab");r.forEach(m=>m.classList.remove("active")),c.forEach(m=>m.classList.remove("active")),d.classList.add("active"),a.querySelector(`#wh-${l}-tab`).classList.add("active")})})}ot()});function K(){const e=document.getElementById("questSearchInput").value.trim().toLowerCase(),t=document.getElementById("questCategoryDropdown").value;document.querySelectorAll("#questTableBody tr.quest-row").forEach(n=>{const i=n.querySelector(".quest-title").textContent.toLowerCase(),s=n.dataset.category||"Not Set",a=i.includes(e),r=t==="all"||s===t;n.style.display=a&&r?"":"none"})}document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("joinCustomGameModal");if(!e)return;document.querySelectorAll("#customGameList .list-group-item").forEach(function(i){i.addEventListener("click",function(){const s=this.getAttribute("data-game-code");confirm("Do you want to join ‘"+this.textContent.trim()+"’?")&&(document.getElementById("customGameCodeInput").value=s,document.getElementById("joinCustomGameForm").submit())})});const t=e.dataset.hasJoined==="1",o=e.dataset.joinDemoUrl;let n=!1;document.getElementById("joinCustomGameForm").addEventListener("submit",()=>{n=!0}),e.addEventListener("hidden.bs.modal",function(){!n&&!t&&(window.location.href=o)})});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("loginForm"),t=document.getElementById("loginModal");if(!e||!t)return;const o=document.getElementById("passwordError"),n=document.getElementById("forgotPasswordLink"),i=t.dataset.checkUrl;e.addEventListener("submit",d=>{d.preventDefault(),o.style.display="none",n&&(n.style.display="none"),A(e).then(({json:l})=>{l.success?window.location.href=l.redirect:(o.textContent=l.error,o.style.display="block",l.show_forgot&&n&&(n.style.display="block"))}).catch(()=>e.submit())});const s=document.getElementById("loginEmail"),a=document.getElementById("loginButton"),r=document.getElementById("emailError");function c(){a.disabled=!0,r.style.display="none",r.textContent="",n&&(n.style.display="none")}c(),s.addEventListener("blur",()=>{const d=s.value.trim();if(!d)return c();fetch(`${i}?email=${encodeURIComponent(d)}`).then(l=>l.json()).then(l=>{l.exists?a.disabled=!1:(a.disabled=!0,r.textContent="This email is not registered. Please register first.",r.style.display="block")}).catch(()=>a.disabled=!1)}),s.addEventListener("input",c)});let L=null;const it={qr_code:"QR Code",photo:"Photo Upload",comment:"Comment",photo_comment:"Photo Upload and Comment",video:"Video Upload"};let le=[];function Z(){const e=document.getElementById("game_Data");if(!e)return;L=e.dataset.gameId;const t=document.getElementById("deleteAllQuestsBtn");t&&t.addEventListener("click",at);const o=document.getElementById("importQuestsBtn");o&&o.addEventListener("click",bt),st().then(()=>q(L))}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",Z):Z();async function st(){try{const e=await fetch("/badges");if(!e.ok)throw new Error("Failed to fetch badges");le=(await e.json()).badges||[]}catch(e){u.error("Error fetching badges:",e)}}function de(e){const t=document.querySelector(`#quest-${e}`),o={};t.querySelectorAll(".editable").forEach(n=>{o[n.getAttribute("data-name")]=n.innerHTML}),rt(t),lt(t),dt(t),ct(t),ut(t,e,o)}function at(){confirm("Are you sure you want to delete all quests? This action cannot be undone.")&&fetch(`/quests/game/${L}/get_title`,{method:"GET",headers:{Accept:"application/json"}}).then(e=>{if(!e.ok)throw new Error("Failed to fetch game title");return e.json()}).then(e=>{const t=e.title;confirm(`This will delete all quests for the game: "${t}". Are you absolutely sure? This action cannot be undone.`)&&fetch(`/quests/game/${L}/delete_all`,{method:"DELETE",headers:{"X-CSRF-Token":I(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Failed to delete all quests");return o.json()}).then(o=>{o.success?(alert("All quests deleted successfully"),q(L)):alert(`Failed to delete quests: ${o.message}`)}).catch(o=>{u.error("Error:",o),alert("Failed to delete all quests. Please check the console for more details.")})}).catch(e=>{u.error("Error fetching game title:",e),alert("Failed to fetch game title. Please check the console for more details.")})}function rt(e){const t=e.querySelector('.editable[data-name="verification_type"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="verification_type" class="editable-select">';Object.entries(it).forEach(([i,s])=>{const a=o===i.toLowerCase()?"selected":"";n+=`<option value="${i}" ${a}>${s}</option>`}),n+="</select>",t.innerHTML=n}function lt(e){const t=e.querySelector('.editable[data-name="frequency"]'),o=t.getAttribute("data-value").toLowerCase();let n='<select name="frequency" class="editable-select">';Object.entries({daily:"Daily",weekly:"Weekly",monthly:"Monthly"}).forEach(([s,a])=>{const r=o===s.toLowerCase()?"selected":"";n+=`<option value="${s}" ${r}>${a}</option>`}),n+="</select>",t.innerHTML=n}function dt(e){const t=e.querySelector('.editable[data-name="badge_name"]');let o=t.innerText.trim(),n='<select name="badge_id" class="editable-select"><option value="">None</option>';le.forEach(i=>{const s=o===i.name?"selected":"";n+=`<option value="${i.id}" ${s}>${i.name}</option>`}),n+="</select>",t.innerHTML=n}function ct(e,t){[{name:"title",type:"text"},{name:"description",type:"textarea"},{name:"tips",type:"textarea"},{name:"points",type:"number"},{name:"badge_awarded",type:"number"},{name:"completion_limit",type:"number"},{name:"category",type:"text"},{name:"enabled",type:"select",options:["Yes","No"]},{name:"is_sponsored",type:"select",options:["Yes","No"]}].forEach(n=>{const i=e.querySelector(`.editable[data-name="${n.name}"]`);i&&mt(i,n)})}function mt(e,t){let o=e.getAttribute("data-value")||e.innerHTML.trim(),n;t.type==="select"?(n=document.createElement("select"),n.name=t.name,t.options.forEach(i=>{const s=document.createElement("option");s.value=i,s.text=i,o===s.text&&(s.selected=!0),n.appendChild(s)})):t.type==="textarea"?(n=document.createElement("textarea"),n.name=t.name,n.value=o):(n=document.createElement("input"),n.type=t.type,n.name=t.name,n.value=o),e.innerHTML="",e.appendChild(n)}function ut(e,t,o){const n=e.querySelector(".edit-button");n.innerText="Save",n.onclick=()=>gt(t);const i=document.createElement("button");i.innerText="Cancel",i.className="btn btn-secondary ms-2 cancel-button",i.onclick=()=>{pt(e,o,n,t)},n.parentNode.insertBefore(i,n.nextSibling)}function pt(e,t,o,n){Object.entries(t).forEach(([i,s])=>{const a=e.querySelector(`.editable[data-name="${i}"]`);a&&(a.innerHTML=s)}),o.innerText="Edit",o.onclick=()=>de(n),e.querySelector(".cancel-button").remove()}function gt(e){const t=document.querySelector(`#quest-${e}`);let o={};t.querySelectorAll("input, select, textarea").forEach(n=>{let i=n.value;n.name==="enabled"||n.name==="is_sponsored"?i=n.value==="Yes":n.name==="badge_id"&&i===""&&(i=null),o[n.name]=i}),fetch(`/quests/quest/${e}/update`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-Token":I()},body:JSON.stringify(o)}).then(n=>n.json()).then(n=>{n.success?(alert("Quest updated successfully."),q(L)):alert("Failed to update quest. Error: "+n.message)}).catch(n=>{u.error("Error updating quest:",n),alert("Error updating quest. Please check console for details.")})}function q(e){fetch(`/quests/game/${e}/quests`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()}).then(t=>{const o=document.getElementById("questsBody");o.innerHTML="",t.quests.forEach(n=>{const i=document.createElement("div");i.className="card",i.id=`quest-${n.id}`;const s=n.verification_type.toLowerCase(),a=n.badge_name||"None",r=n.frequency||"Not Set",c=n.category||"Not Set",d=n.badge_awarded||"Not Set";i.innerHTML=`
                    <div class="card-body">
                        <h5 class="card-title editable" data-name="title">${n.title}</h5>
                        <div class="card-text editable" data-name="description">${n.description}</div>
                        <div class="card-text editable" data-name="tips">${n.tips||""}</div>
                        <p class="card-text"><strong>Points:</strong> <span class="editable" data-name="points">${n.points}</span></p>
                        <p class="card-text"><strong>Completion Limit:</strong> <span class="editable" data-name="completion_limit">${n.completion_limit}</span></p>
                        <p class="card-text"><strong>Enabled:</strong> <span class="editable" data-name="enabled">${n.enabled?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Pinned:</strong> <span class="editable" data-name="is_sponsored">${n.is_sponsored?"Yes":"No"}</span></p>
                        <p class="card-text"><strong>Verification:</strong> <span class="editable" data-name="verification_type" data-value="${n.verification_type}">${s}</span></p>
                        <p class="card-text"><strong>Badge:</strong> <span class="editable" data-name="badge_name">${a}</span></p>
                        <p class="card-text"><strong>Badge Awarded:</strong> <span class="editable" data-name="badge_awarded">${d}</span></p>
                        <p class="card-text"><strong>Frequency:</strong> <span class="editable" data-name="frequency" data-value="${n.frequency}">${r}</span></p>
                        <p class="card-text"><strong>Category:</strong> <span class="editable" data-name="category">${c}</span></p>
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-warning edit-button" data-quest-id="${n.id}">Edit</button>
                            <button class="btn btn-danger delete-button" data-quest-id="${n.id}">Delete</button>
                            <button class="btn btn-info qr-button" data-quest-id="${n.id}">Generate QR Code</button>
                        </div>
                    </div>
                `,o.appendChild(i);const l=i.querySelector(".edit-button"),m=i.querySelector(".delete-button"),g=i.querySelector(".qr-button");l&&l.addEventListener("click",()=>de(n.id)),m&&m.addEventListener("click",()=>ft(n.id)),g&&g.addEventListener("click",()=>ht(n.id))})}).catch(t=>u.error("Failed to load quests:",t))}function ft(e){fetch(`/quests/quest/${e}/delete`,{method:"DELETE",headers:{"X-CSRF-Token":I(),Accept:"application/json"}}).then(t=>{if(!t.ok)throw new Error("Failed to delete quest");return t.json()}).then(t=>{t.success?(alert("Quest deleted successfully"),q(L)):alert(`Failed to delete quest: ${t.message}`)}).catch(t=>{u.error("Error:",t),alert("Failed to delete quest. Please check the console for more details.")})}function bt(){const e=document.getElementById("importQuestsForm"),t=new FormData(e);fetch(`/quests/game/${L}/import_quests`,{method:"POST",body:t,headers:{"X-CSRF-Token":I(),Accept:"application/json"}}).then(o=>{if(!o.ok)throw new Error("Network response was not ok");return o.json()}).then(o=>{o.success&&o.redirectUrl?(alert("Quests imported successfully"),q(L)):alert("Failed to import quests: "+o.message)}).catch(o=>{u.error("Error importing quests:",o)})}function ht(e){const t=`/quests/generate_qr/${e}`;fetch(t).then(o=>{if(!o.ok)throw new Error("Failed to generate QR code");return o.blob()}).then(o=>{const n=URL.createObjectURL(o);window.open(n,"_blank")}).catch(o=>{u.error("Error generating QR code:",o),alert("Failed to generate QR code. Please check console for more details.")})}document.addEventListener("DOMContentLoaded",()=>{});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("notifMenu");if(!e)return;const t=document.getElementById("notifBellToggle"),o=e.querySelector("#notifLoading"),n=e.querySelector("li.dropdown-footer"),i=n.querySelector("#loadMoreBtn"),s=e.dataset.url;let a=0,r=1;const c=parseInt(e.dataset.perPage,10)||10,d={follow:({from_user_name:p,from_user_id:f})=>({text:`Now following ${p}`,onClick:()=>C(f)}),followed_by:({follower_name:p,follower_id:f})=>({text:`${p} is now following you`,onClick:()=>C(f)}),submission:({actor_name:p,quest_name:f,submission_id:b})=>({text:`${p} submitted a new “${f}” quest`,onClick:async()=>{const y=await(await fetch(`/quests/submissions/${b}`)).json();$(y)}}),profile_message:({from_user_name:p,content:f,profile_user_id:b})=>({text:`${p} says “${f}”`,onClick:()=>C(b)}),profile_reply:({from_user_name:p,content:f,profile_user_id:b})=>({text:`${p} replied “${f}”`,onClick:()=>C(b)}),submission_like:({liker_name:p,submission_id:f})=>({text:`${p} liked your submission`,onClick:async()=>{const E=await(await fetch(`/quests/submissions/${f}`,{credentials:"same-origin"})).json();$(E)}}),submission_reply:({actor_name:p,content:f,submission_id:b})=>({text:`${p} replied “${f}”`,onClick:async()=>{const y=await(await fetch(`/quests/submissions/${b}`,{credentials:"same-origin"})).json();$(y)}})};function l(p){const f=d[p.type];let b,E;if(f&&p.payload)try{({text:b,onClick:E}=f(p.payload))}catch(x){u.error(`Error in handler for ${p.type}:`,x)}(!b||!E)&&(b=p.payload.summary||JSON.stringify(p.payload),E=()=>{window.location.href="/notifications/"});const y=p.is_read?"":"fw-bold",k=document.createElement("a");return k.href="#",k.className=`dropdown-item ${y}`,k.innerHTML=`
      ${b}
      <small class="text-muted d-block text-center">
        ${new Date(p.when).toLocaleString()}
      </small>`,k.addEventListener("click",async x=>{x.preventDefault();try{await E()}catch(h){u.error(h)}}),k}function m(p){p&&p.parentNode===e&&e.removeChild(p)}async function g(p){p===1&&(Array.from(e.children).forEach(y=>{y!==o&&y!==n&&e.removeChild(y)}),a=0),m(o),m(n),e.appendChild(o),e.appendChild(n),o.style.display="",i.disabled=!0;let f;try{f=await fetch(`${s}?page=${p}&per_page=${c}`,{credentials:"include"})}catch(y){o.textContent="Network error.",u.error(y);return}if(!f.ok){o.textContent="Error loading.",u.error("Status:",f.status,f.statusText);return}const b=await f.json();a=b.page,r=b.total_pages,m(o),m(n);const E=t.querySelector(".badge");E&&E.remove(),b.items.forEach(y=>{e.appendChild(l(y))}),e.appendChild(o),e.appendChild(n),o.style.display="none",i.disabled=a>=r}t.addEventListener("show.bs.dropdown",()=>{a===0&&g(1)}),i.addEventListener("click",p=>{p.preventDefault(),p.stopPropagation(),a<r&&g(a+1)})});document.addEventListener("DOMContentLoaded",()=>{typeof window>"u"||typeof navigator>"u"||!("serviceWorker"in navigator)||!("PushManager"in window)||navigator.serviceWorker.ready.then(async e=>{try{const t=await fetch("/push/public_key");if(!t.ok)return;let o;try{({public_key:o}=await t.json())}catch(s){u.error("Push setup failed",s);return}if(!o||await e.pushManager.getSubscription())return;const i=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:yt(o)});await fetch("/push/subscribe",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({subscription:i})})}catch(t){u.error("Push setup failed",t)}})});function yt(e){const t="=".repeat((4-e.length%4)%4),o=(e+t).replace(/-/g,"+").replace(/_/g,"/"),n=atob(o),i=new Uint8Array(n.length);for(let s=0;s<n.length;++s)i[s]=n.charCodeAt(s);return i}function ce(e){const t=document.querySelector(`meta[name="${e}"]`);return t?t.content:""}const Et=Number(ce("current-user-id")||0),me=I(),S=window.PLACEHOLDER_IMAGE||ce("placeholder-image");window.PLACEHOLDER_IMAGE=S;function ue(e){G(),fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:s}=t;if(!ge(o,n.completions,i,e,s)){u.error("populateQuestDetails – required element missing");return}fe(o,n.completions,s,i),v("questDetailModal"),W(),he(e)}).catch(t=>{u.error("Error opening quest detail modal:",t),alert("Sign in to view quest details.")})}function pe(e){fetch(`/quests/detail/${e}/user_completion`,{credentials:"same-origin"}).then(t=>t.json()).then(t=>{const{quest:o,userCompletion:n,canVerify:i,nextEligibleTime:s}=t;if(!ge(o,n.completions,i,e,s)){u.error("populateQuestDetails – required element missing");return}fe(o,n.completions,s,i),W(),he(e)}).catch(t=>{u.error("Failed to refresh quest detail modal:",t)})}function W(){const e=document.querySelectorAll("img.lazyload"),t=new IntersectionObserver((o,n)=>{o.forEach(i=>{if(i.isIntersecting){const s=i.target;s.src=s.getAttribute("data-src"),s.classList.remove("lazyload"),n.unobserve(s)}})});e.forEach(o=>{t.observe(o)})}function ge(e,t,o,n,i){const s=t>=e.completion_limit?" - complete":"",a={modalQuestTitle:document.getElementById("modalQuestTitle"),modalQuestDescription:document.getElementById("modalQuestDescription"),modalQuestTips:document.getElementById("modalQuestTips"),modalQuestPoints:document.getElementById("modalQuestPoints"),modalQuestCompletionLimit:document.getElementById("modalQuestCompletionLimit"),modalQuestBadgeAwarded:document.getElementById("modalQuestBadgeAwarded"),modalQuestCategory:document.getElementById("modalQuestCategory"),modalQuestVerificationType:document.getElementById("modalQuestVerificationType"),modalQuestBadgeImage:document.getElementById("modalQuestBadgeImage"),modalQuestCompletions:document.getElementById("modalQuestCompletions"),modalCountdown:document.getElementById("modalCountdown")};for(let m in a)if(!a[m])return u.error(`Error: Missing element ${m}`),!1;a.modalQuestTitle.innerText=`${e.title}${s}`,a.modalQuestDescription.textContent=e.description,a.modalQuestTips.textContent=e.tips||"No tips available",a.modalQuestPoints.innerText=`${e.points}`,a.modalQuestCategory.innerText=e.category||"No category set";const r=e.completion_limit>1?`${e.completion_limit} times`:`${e.completion_limit} time`;a.modalQuestCompletionLimit.innerText=`${r} ${e.frequency}`;const c=e.badge_awarded>1?`${e.badge_awarded} times`:`${e.badge_awarded} time`;switch(e.badge_awarded!=null?a.modalQuestBadgeAwarded.innerText=`After ${c}`:a.modalQuestBadgeAwarded.innerText="No badge awarded",e.verification_type){case"photo_comment":a.modalQuestVerificationType.innerText="Must upload a photo to earn points! Comment optional.";break;case"photo":a.modalQuestVerificationType.innerText="Must upload a photo to earn points!";break;case"comment":a.modalQuestVerificationType.innerText="Must upload a comment to earn points!";break;case"qr_code":a.modalQuestVerificationType.innerText="Find the QR code and post a photo to earn points!";break;default:a.modalQuestVerificationType.innerText="Not specified";break}const d=e.badge&&e.badge.image?`/static/images/badge_images/${e.badge.image}`:S;a.modalQuestBadgeImage.setAttribute("data-src",d),a.modalQuestBadgeImage.src=S,a.modalQuestBadgeImage.classList.add("lazyload"),a.modalQuestBadgeImage.alt=e.badge&&e.badge.name?`Badge: ${e.badge.name}`:"Default Badge",a.modalQuestCompletions.innerText=`Total Completions: ${t}`;const l=i&&new Date(i);return!o&&l&&l>new Date?(a.modalCountdown.innerText=`Next eligible time: ${l.toLocaleString()}`,a.modalCountdown.style.color="red"):(a.modalCountdown.innerText="You are currently eligible to verify!",a.modalCountdown.style.color="green"),It(n,o,e.verification_type),!0}function fe(e,t,o,n){const i=document.querySelector(".user-quest-data");if(!i){u.error("Parent element .user-quest-data not found");return}[{id:"modalQuestCompletions",value:`${t||0}`},{id:"modalCountdown",value:""}].forEach(a=>{let r=document.getElementById(a.id);r||(r=document.createElement("p"),r.id=a.id,i.appendChild(r)),r.innerText=a.value}),wt(document.getElementById("modalCountdown"),o,n)}function wt(e,t,o){if(!o&&t){const n=new Date(t),i=new Date;if(n>i){const s=n-i;e.innerText=`Next eligible time: ${vt(s)}`}else e.innerText="You are currently eligible to verify!"}else e.innerText="You are currently eligible to verify!"}function vt(e){const t=Math.floor(e/1e3%60),o=Math.floor(e/(1e3*60)%60),n=Math.floor(e/(1e3*60*60)%24);return`${Math.floor(e/(1e3*60*60*24))}d ${n}h ${o}m ${t}s`}function It(e,t,o,n){const i=document.querySelector(".user-quest-data");if(!i){u.error("Parent element .user-quest-data not found");return}if(i.innerHTML="",t){const s=document.createElement("div");s.id=`verifyQuestForm-${e}`,s.className="verify-quest-form",s.style.display="block";const a=_t(o.trim().toLowerCase(),e);s.innerHTML=a,i.appendChild(s),Ct(e)}}function _t(e,t){let o=`
    <form enctype="multipart/form-data" class="epic-form" method="post" action="/quests/quest/${t}/submit">
      <input type="hidden" name="csrf_token" value="${me}">
      <h2 style="text-align:center;">Verify Your Quest</h2>
  `;switch(e){case"photo":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"comment":o+=`
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..." required></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"photo_comment":o+=`
        <div class="form-group">
          <label for="image" class="epic-label">Upload a Photo</label>
          <input type="file" id="image" name="image"
                 class="epic-input" accept="image/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Enter a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter a comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"video":o+=`
        <div class="form-group">
          <label for="video" class="epic-label">Upload a Video</label>
          <input type="file" id="video" name="video"
                 class="epic-input" accept="video/*" required>
        </div>
        <div class="form-group">
          <label for="verificationComment" class="epic-label">Add a Comment (optional)</label>
          <textarea id="verificationComment" name="verificationComment"
                    class="epic-textarea" placeholder="Enter an optional comment..."></textarea>
        </div>
        <div class="form-group">
          <button type="submit">Submit Verification</button>
        </div>
      `;break;case"qr_code":o+='<p class="epic-message">Find and scan the QR code. No submission required here.</p>';break;case"pause":o+='<p class="epic-message">Quest is currently paused.</p>';break;default:o+='<p class="epic-message">Submission requirements are not set correctly.</p>';break}return o+="</form>",o}function Ct(e){const t=document.getElementById(`verifyQuestForm-${e}`);if(!t){u.error("Form container not found for quest ID:",e);return}const o=t.querySelector("form");if(!o){u.error("Form element missing for quest ID:",e);return}o.addEventListener("submit",function(n){kt(n,e)})}function N(e,t){e&&(t&&t.trim()?(e.href=t,e.style.display="inline"):e.style.display="none")}function Bt(e){if(!e)return;const t=document.getElementById("total-points");t&&(t.innerText=`Total Completed Points: ${e}`)}function Lt(e,t,o){const n=document.querySelector(`#questTableBody tr[data-quest-id="${e}"]`);if(!n)return;const i=n.querySelectorAll(".quest-stats-cell");i.length>=2&&(i[0].innerText=t,i[1].innerText=o)}function be(e){N(document.getElementById("twitterLink"),e.twitter_url),N(document.getElementById("facebookLink"),e.fb_url),N(document.getElementById("instagramLink"),e.instagram_url)}let Q=!1;async function kt(e,t){if(e.preventDefault(),Q)return;Q=!0;const o=e.target.querySelector('[type="submit"]');o&&(o.disabled=!0);try{const n=e.target.querySelector('input[type="file"]'),i=n?n.files[0]:null;if(i&&i.type.startsWith("video/")&&i.size>10*1024*1024){alert("Video must be 10 MB or smaller.");return}if(i&&i.type.startsWith("image/")&&i.size>8*1024*1024){alert("Image must be 8 MB or smaller.");return}const s=new FormData(e.target);s.append("user_id",Et);const a=await fetch(`/quests/quest/${t}/submit`,{method:"POST",body:s,credentials:"same-origin",headers:{"X-CSRFToken":me}});if(!a.ok){if(a.status===403){const c=await a.json();throw c.message==="This quest cannot be completed outside of the game dates"?new Error("The game has ended and you can no longer submit quests. Join a new game in the game dropdown menu."):new Error(c.message||`Server responded with status ${a.status}`)}throw new Error(`Server responded with status ${a.status}`)}const r=await a.json();if(!r.success)throw new Error(r.message);Bt(r.total_points),be(r),Lt(t,r.new_completion_count,r.total_completion_count),pe(t),e.target.reset()}catch(n){u.error("Submission error:",n),alert(`Error during submission: ${n.message}`)}finally{Q=!1,o&&(o.disabled=!1)}}async function he(e){try{const t=await fetch(`/quests/quest/${e}/submissions`,{method:"GET",credentials:"same-origin"});if(!t.ok)throw new Error(`Server responded with status ${t.status}`);const o=await t.json(),n=document.getElementById("twitterLink"),i=document.getElementById("facebookLink"),s=document.getElementById("instagramLink");if(o&&o.length){const r=o[0],c=document.getElementById("submissionImage"),d=document.getElementById("submissionVideo"),l=document.getElementById("submissionVideoSource"),m=document.getElementById("submissionComment"),g=document.getElementById("submitterProfileLink"),p=document.getElementById("submitterProfileImage"),f=document.getElementById("submitterProfileCaption");r.video_url?(c.hidden=!0,d.hidden=!1,l.src=r.video_url,d.load()):(d.hidden=!0,c.hidden=!1,c.src=r.image_url||S),m.textContent=r.comment||"No comment provided.",g.href=`/profile/${r.user_id}`,p.src=r.user_profile_picture||S,f.textContent=r.user_display_name||r.user_username||`User ${r.user_id}`,be(r)}else[n,i,s].forEach(r=>{r&&(r.style.display="none")});const a=o.slice().reverse().map(r=>({id:r.id,url:r.image_url||(r.video_url?null:S),video_url:r.video_url,alt:"Submission Image",comment:r.comment,user_id:r.user_id,user_display_name:r.user_display_name,user_username:r.user_username,user_profile_picture:r.user_profile_picture,twitter_url:r.twitter_url,fb_url:r.fb_url,instagram_url:r.instagram_url,quest_id:e}));St(a)}catch(t){u.error("Failed to fetch submissions:",t),alert("Could not load submissions. Please try again.")}}function ee(e){if(!e)return u.error(`Invalid URL detected: ${e}`),!1;try{if(e.startsWith("/"))return!0;const t=new URL(e);if(t.protocol==="http:"||t.protocol==="https:")return[".jpg",".jpeg",".png",".gif",".webp"].some(n=>t.pathname.toLowerCase().endsWith(n))}catch{return u.error(`Invalid URL detected: ${e}`),!1}return!1}function St(e){var c;const t=document.getElementById("submissionBoard");if(!t){u.error("submissionBoard element not found");return}t.innerHTML="";const o=((c=document.getElementById("questDetailModal"))==null?void 0:c.getAttribute("data-placeholder-url"))||S,n=ee(o)?o:S,i=d=>d.startsWith("/static/"),s=d=>d.replace(/^\/static\//,""),a=window.innerWidth<=480?70:100,r=a*(window.devicePixelRatio||2);e.forEach(d=>{let l;if(d.video_url)l=document.createElement("video"),l.src=d.video_url,l.preload="metadata",l.muted=!0,l.playsInline=!0,l.style.objectFit="cover";else{l=document.createElement("img");const m=ee(d.url)?d.url:n,g=i(m)?`/resize_image?path=${encodeURIComponent(s(m))}&width=${r}`:m;l.setAttribute("data-src",g),l.classList.add("lazyload"),l.alt=d.alt||"Submission Image"}l.style.width=`${a}px`,l.style.height="auto",l.style.marginRight="10px",d.video_url||(l.onerror=()=>{i(n)?l.src=`/resize_image?path=${encodeURIComponent(s(n))}&width=${r}`:l.src=n}),l.onclick=()=>$(d),t.appendChild(l)}),W()}window.openQuestDetailModal=ue;window.refreshQuestDetailModal=pe;const $t=Object.freeze(Object.defineProperty({__proto__:null,openQuestDetailModal:ue},Symbol.toStringTag,{value:"Module"}));document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("registerEmail");if(!e)return;const t=document.getElementById("registerModal"),o=(t==null?void 0:t.dataset.checkUrl)||"/auth/check_email",n=document.getElementById("existingUserLogin");n&&(e.addEventListener("blur",()=>{const i=e.value.trim();i&&fetch(`${o}?email=${encodeURIComponent(i)}`).then(s=>s.json()).then(s=>{s.exists?n.style.display="block":n.style.display="none"}).catch(s=>{u.error("Error checking email:",s),n.style.display="none"})}),document.getElementById("loginWithExistingBtn").addEventListener("click",()=>{const i=e.value.trim(),s=document.getElementById("existingUserPassword").value,a=document.getElementById("loginError"),r=document.getElementById("gameIdField").value,c=document.getElementById("questIdField").value,d=document.getElementById("nextField").value,l=new FormData;l.append("email",i),l.append("password",s),l.append("remember_me","true"),r&&l.append("game_id",r),c&&l.append("quest_id",c),d&&l.append("next",d),fetch('{{ url_for("auth.login") }}',{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:l,credentials:"same-origin"}).then(m=>m.json().then(g=>({status:m.status,payload:g}))).then(({status:m,payload:g})=>{g.success?window.location.href=g.redirect:(a.textContent=g.error,a.style.display="block")}).catch(m=>{u.error("Login error:",m),a.textContent="An error occurred. Please try again.",a.style.display="block"})}),e.addEventListener("input",()=>{n.style.display="none",document.getElementById("loginError").style.display="none"}))});document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("resetForm");if(!e)return;const t=document.getElementById("resetError"),o=document.getElementById("resetSuccess"),n=document.getElementById("resetButton");e.addEventListener("submit",i=>{i.preventDefault(),t.style.display="none",o.style.display="none",A(e).then(({json:s})=>{s.success?(o.textContent=s.message,o.style.display="block",n.disabled=!0,s.redirect&&setTimeout(()=>{window.location.href=s.redirect},1200)):(t.textContent=s.error||"Unable to reset password.",t.style.display="block")}).catch(s=>{u.error("Reset-password AJAX error:",s),e.submit()})})});document.addEventListener("DOMContentLoaded",()=>{const e="shoutBoardModal",t=document.getElementById("shoutBoardForm"),o=document.getElementById("shoutSubmitBtn"),n=document.getElementById("shoutMessageInput");window.addEventListener("openModal",i=>{i.detail===e&&n&&(n.value="")}),o.addEventListener("click",()=>{const i=n?n.value.trim():"";if(!i){alert("Please enter a message.");return}if(i.length>500){alert("Message must be 500 characters or fewer.");return}const s=new FormData(t);fetch(t.action,{method:"POST",body:s,credentials:"same-origin"}).then(a=>{if(!a.ok)throw new Error(`Server responded ${a.status}`);return a.text()}).then(()=>{T(e),location.reload()}).catch(a=>{u.error("Failed to post shout:",a),alert("Could not post. Please try again.")})})});var te;(te=document.getElementById("gameFilter"))==null||te.addEventListener("change",function(){const e=this.value;e?window.location.href=`/admin/user_management/game/${e}`:window.location.href="/admin/user_management"});document.addEventListener("DOMContentLoaded",()=>{_e()});export{C as a,v as o,se as s};
