const u="1.2.1-1e9414d",d=`questbycycle-${u}`,h=["/offline.html",`/static/dist/style.css?v=${u}`,`/static/dist/main.js?v=${u}`,`/static/dist/submitPhoto.js?v=${u}`,"/static/icons/icon_48x48.webp","/static/icons/icon_96x96.webp","/static/icons/icon_192x192.webp","/static/icons/icon_512x512.webp","/static/icons/apple-touch-icon-180x180.png","/static/images/welcomeQuestByCycle.webp"],y="questbycycle-sync",c="queued";function f(){return new Promise((t,e)=>{const s=indexedDB.open(y,1);s.onupgradeneeded=i=>{i.target.result.createObjectStore(c,{autoIncrement:!0})},s.onsuccess=()=>t(s.result),s.onerror=()=>e(s.error)})}async function p(t){const e=await f();return new Promise((s,i)=>{const n=e.transaction(c,"readwrite");n.objectStore(c).add(t),n.oncomplete=()=>s(),n.onerror=()=>i(n.error)})}async function w(t){const e=await f();return new Promise((s,i)=>{const o=e.transaction(c,"readonly").objectStore(c).openCursor();o.onsuccess=async r=>{const l=r.target.result;l?(await t(l.value,l.key),l.continue()):s()},o.onerror=()=>i(o.error)})}async function g(t){const e=await f();return new Promise((s,i)=>{const n=e.transaction(c,"readwrite");n.objectStore(c).delete(t),n.oncomplete=()=>s(),n.onerror=()=>i(n.error)})}async function m(){await w(async(t,e)=>{try{await fetch(t.url,{method:t.method,headers:t.headers,body:t.body}),await g(e)}catch(s){console.error("Background sync failed for",t.url,s)}})}self.addEventListener("install",t=>{t.waitUntil((async()=>{const e=await caches.open(d);try{await e.addAll(h),console.log("Resources cached successfully!")}catch(s){console.error("Failed to cache resources:",s)}})()),self.skipWaiting()});self.addEventListener("activate",t=>{t.waitUntil((async()=>{const e=await caches.keys();let s=!1;await Promise.all(e.map(i=>{if(i!==d)return console.log(`Deleting old cache: ${i}`),s=!0,caches.delete(i)})),await self.clients.claim(),s&&q()})())});function q(){self.clients.matchAll().then(t=>{t.forEach(e=>{e.postMessage({type:"UPDATE_AVAILABLE"})})})}function b(t){return t.method!=="GET"||!["style","script","image","font"].includes(t.destination)?!1:new URL(t.url).origin===self.location.origin}self.addEventListener("fetch",t=>{if(new URL(t.request.url).origin!==self.location.origin)return;const s=["video","audio"].includes(t.request.destination),i=t.request.headers.has("range");if(s||i){t.respondWith(fetch(t.request));return}if(["POST","PUT","DELETE"].includes(t.request.method)&&t.request.mode!=="navigate"){t.respondWith((async()=>{try{return await fetch(t.request.clone())}catch{const n={};for(const[o,r]of t.request.headers.entries())n[o]=r;const a=await t.request.clone().text();return await p({url:t.request.url,method:t.request.method,headers:n,body:a}),"sync"in self.registration&&await self.registration.sync.register("sync-requests"),new Response(JSON.stringify({queued:!0}),{status:202,headers:{"Content-Type":"application/json"}})}})());return}if(t.request.mode==="navigate"){t.respondWith(fetch(t.request).catch(()=>caches.match("/offline.html")));return}t.respondWith((async()=>{try{const n=await caches.open(d),a=await n.match(t.request);if(a)return a;const o=await fetch(t.request);if(b(t.request)&&o.status!==206)try{n.put(t.request,o.clone())}catch(r){console.error("Cache put failed:",r)}return o}catch(n){return console.error("Fetch failed; returning offline page instead.",n),await caches.match("/offline.html")||Response.error()}})())});self.addEventListener("sync",t=>{t.tag==="sync-requests"&&t.waitUntil(m())});self.addEventListener("message",t=>{t.data.type==="SKIP_WAITING"&&self.skipWaiting()});self.addEventListener("sync",t=>{t.tag==="sync-notifications"&&t.waitUntil(fetch("/notifications/unread_count"))});self.addEventListener("periodicsync",t=>{t.tag==="periodic-notifications"&&t.waitUntil(fetch("/notifications/unread_count"))});self.addEventListener("push",t=>{let e={};if(t.data)try{e=t.data.json()}catch{e={body:t.data.text()}}const s=e.title||"QuestByCycle",i={body:e.body||"",icon:"/static/icons/icon_96x96.webp",data:e};t.waitUntil(self.registration.showNotification(s,i))});self.addEventListener("notificationclick",t=>{t.notification.close(),t.waitUntil(clients.openWindow("/notifications/"));const e=t.notification.data&&t.notification.data.url;e&&t.waitUntil(clients.openWindow(e))});
