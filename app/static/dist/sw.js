const r="1.2.0-0569dd3",u=`questbycycle-${r}`,h=["/offline.html",`/static/dist/style.css?v=${r}`,`/static/dist/main.js?v=${r}`,`/static/dist/submitPhoto.js?v=${r}`,"/static/icons/icon_48x48.webp","/static/icons/icon_96x96.webp","/static/icons/icon_192x192.webp","/static/icons/icon_512x512.webp","/static/icons/apple-touch-icon-180x180.png","/static/images/welcomeQuestByCycle.webp"],p="questbycycle-sync",i="queued";function d(){return new Promise((t,s)=>{const e=indexedDB.open(p,1);e.onupgradeneeded=n=>{n.target.result.createObjectStore(i,{autoIncrement:!0})},e.onsuccess=()=>t(e.result),e.onerror=()=>s(e.error)})}async function y(t){const s=await d();return new Promise((e,n)=>{const o=s.transaction(i,"readwrite");o.objectStore(i).add(t),o.oncomplete=()=>e(),o.onerror=()=>n(o.error)})}async function w(t){const s=await d();return new Promise((e,n)=>{const l=s.transaction(i,"readonly").objectStore(i).openCursor();l.onsuccess=async f=>{const a=f.target.result;a?(await t(a.value,a.key),a.continue()):e()},l.onerror=()=>n(l.error)})}async function m(t){const s=await d();return new Promise((e,n)=>{const o=s.transaction(i,"readwrite");o.objectStore(i).delete(t),o.oncomplete=()=>e(),o.onerror=()=>n(o.error)})}async function g(){await w(async(t,s)=>{try{await fetch(t.url,{method:t.method,headers:t.headers,body:t.body}),await m(s)}catch(e){console.error("Background sync failed for",t.url,e)}})}self.addEventListener("install",t=>{t.waitUntil((async()=>{const s=await caches.open(u);try{await s.addAll(h),console.log("Resources cached successfully!")}catch(e){console.error("Failed to cache resources:",e)}})()),self.skipWaiting()});self.addEventListener("activate",t=>{t.waitUntil((async()=>{const s=await caches.keys();let e=!1;await Promise.all(s.map(n=>{if(n!==u)return console.log(`Deleting old cache: ${n}`),e=!0,caches.delete(n)})),await self.clients.claim(),e&&E()})())});function E(){self.clients.matchAll().then(t=>{t.forEach(s=>{s.postMessage({type:"UPDATE_AVAILABLE"})})})}function b(t){if(t.method!=="GET")return!1;const s=t.headers.get("Accept")||"";return s.includes("application/json")||s.includes("text/html")?!1:new URL(t.url).origin===self.location.origin}self.addEventListener("fetch",t=>{if(new URL(t.request.url).origin===self.location.origin){if(["POST","PUT","DELETE"].includes(t.request.method)&&t.request.mode!=="navigate"){t.respondWith((async()=>{try{return await fetch(t.request.clone())}catch{const e={};for(const[o,c]of t.request.headers.entries())e[o]=c;const n=await t.request.clone().text();return await y({url:t.request.url,method:t.request.method,headers:e,body:n}),"sync"in self.registration&&await self.registration.sync.register("sync-requests"),new Response(JSON.stringify({queued:!0}),{status:202,headers:{"Content-Type":"application/json"}})}})());return}if(t.request.mode==="navigate"){t.respondWith(fetch(t.request).catch(()=>caches.match("/offline.html")));return}t.respondWith((async()=>{try{const e=await caches.open(u),n=await e.match(t.request);if(n)return n;const o=await fetch(t.request);if(b(t.request)&&o.status!==206)try{e.put(t.request,o.clone())}catch(c){console.error("Cache put failed:",c)}return o}catch(e){return console.error("Fetch failed; returning offline page instead.",e),await caches.match("/offline.html")||Response.error()}})())}});self.addEventListener("sync",t=>{t.tag==="sync-requests"&&t.waitUntil(g())});self.addEventListener("message",t=>{t.data.type==="SKIP_WAITING"&&self.skipWaiting()});self.addEventListener("sync",t=>{t.tag==="sync-notifications"&&t.waitUntil(fetch("/notifications/unread_count"))});self.addEventListener("periodicsync",t=>{t.tag==="periodic-notifications"&&t.waitUntil(fetch("/notifications/unread_count"))});self.addEventListener("push",t=>{let s={};if(t.data)try{s=t.data.json()}catch{s={body:t.data.text()}}const e=s.title||"QuestByCycle",n={body:s.body||"",icon:"/static/icons/icon_96x96.webp",data:s};t.waitUntil(self.registration.showNotification(e,n))});self.addEventListener("notificationclick",t=>{t.notification.close(),t.waitUntil(clients.openWindow("/notifications/"));const s=t.notification.data&&t.notification.data.url;s&&t.waitUntil(clients.openWindow(s))});
